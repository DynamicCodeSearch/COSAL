public void solve() {
    int N = in.nextInt();
    int M = in.nextInt();
    boolean[][] map = new boolean[N][N];
    for (int i = 0; i < M; i++) {
        int a = in.nextInt() - 1, b = in.nextInt() - 1;
        map[a][b] = map[b][a] = true;
    }
    Permutation perm = new Permutation(N);
    int res = 0;
    for (String s : perm.getPermutationSet()) {
        boolean ok = s.charAt(0) == '0';
        for (int i = 0; i < s.length() - 1; i++) {
            int u = s.charAt(i) - '0';
            int v = s.charAt(i + 1) - '0';
            ok &= map[u][v];
        }
        if (ok)
            res++;
    }
    System.out.println(res);
}