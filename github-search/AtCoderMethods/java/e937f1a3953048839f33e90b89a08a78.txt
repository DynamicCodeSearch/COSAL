long dp(int unused, int[] x, int[] y, int N) {
    if (Integer.bitCount(unused) == N)
        return 1;
    if (mem[unused] != -1)
        return mem[unused];
    int M = x.length;
    long sum = 0;
    for (int i = 0; i < N; i++) {
        if (((unused >> i) & 1) == 0) {
            
            for (int j = 0; j < M; j++) {
                if (y[j] == i && ((unused >> x[j]) & 1) == 1) {
                    break;
                }
                if (j == M - 1) {
                    int d = unused;
                    d |= 1 << i;
                    sum += dp(d, x, y, N);
                }
            }
        }
    }
    mem[unused] = sum;
    return sum;
}