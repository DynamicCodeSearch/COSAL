public static void main(String[] args) {
    FastScanner sc = new FastScanner();
    long h = sc.nextInt();
    long w = sc.nextInt();
    int n = sc.nextInt();
    int[] a = new int[n];
    int[] b = new int[n];
    for (int i = 0; i < n; i++) {
        a[i] = sc.nextInt();
        b[i] = sc.nextInt();
    }
    Map<Long, Integer> map = new HashMap<>();
    for (int i = 0; i < n; i++) {
        for (int j = -1; j <= 1; j++) {
            for (int k = -1; k <= 1; k++) {
                int aa = a[i] + j;
                int bb = b[i] + k;
                long p = toIntPair(aa, bb);
                if (2 <= aa && aa <= h - 1 && 2 <= bb && bb <= w - 1) {
                    map.put(p, (map.containsKey(p) ? map.get(p) : 0) + 1);
                }
            }
        }
    }
    long[] J = new long[10];
    J[0] = (h - 2) * (w - 2) - map.size();
    for (int i : map.values()) {
        J[i]++;
    }
    StringBuilder sb = new StringBuilder();
    for (int i = 0; i < 10; i++) {
        sb.append(J[i]).append("\n");
    }
    System.out.println(sb.toString());
}