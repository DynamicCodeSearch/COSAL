static void solve() {
    int n = ni();
    char[] s = ns(n);
    for (int x = 0; x < 2; x++) {
        inner: for (int y = 0; y < 2; y++) {
            int[] a = new int[n];
            a[0] = x;
            a[1] = y;
            for (int i = 2; i < n; i++) {
                if ((a[i - 1] == 0) ^ (s[i - 1] == 'x')) {
                    a[i] = a[i - 2];
                } else {
                    a[i] = a[i - 2] ^ 1;
                }
            }
            if ((a[n - 1] == 0) ^ (s[n - 1] == 'x')) {
                if (a[0] != a[n - 2]) {
                    continue inner;
                }
            } else {
                if (a[0] == a[n - 2]) {
                    continue inner;
                }
            }
            if ((a[0] == 0) ^ (s[0] == 'x')) {
                if (a[1] != a[n - 1]) {
                    continue inner;
                }
            } else {
                if (a[1] == a[n - 1]) {
                    continue inner;
                }
            }
            for (int i = 0; i < n; i++) {
                out.print(a[i] == 0 ? 'S' : 'W');
            }
            out.println();
            return;
        }
    }
    out.println(-1);
}