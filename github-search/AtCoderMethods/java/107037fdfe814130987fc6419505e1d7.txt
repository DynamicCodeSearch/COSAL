long dfs(int mask) {
    if (dp[mask] > 0)
        return dp[mask];
    if (Integer.bitCount(mask) == 1)
        return 1;
    long ans = 0;
    for (int v = 0; v < N; v++) {
        if ((mask & (1 << v)) == 0)
            continue;
        boolean ok = true;
        for (int i = 0; i < N; i++) {
            if ((mask & (1 << i)) == 0)
                continue;
            if (i == v)
                continue;
            if (graph[v][i]) {
                ok = false;
                break;
            }
        }
        if (ok) {
            ans += dfs(mask ^ (1 << v));
        }
    }
    return dp[mask] = ans;
}