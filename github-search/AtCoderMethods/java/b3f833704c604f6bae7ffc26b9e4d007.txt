private void doit() {
    Scanner sc = new Scanner(System.in);
    while (sc.hasNext()) {
        int n = sc.nextInt();
        int[] data = new int[n];
        for (int i = 0; i < n; i++) {
            data[i] = sc.nextInt();
        }
        HashMap<Integer, Integer> map = new HashMap<>();
        for (int i = 0; i < n; i++) {
            if (!map.containsKey(data[i])) {
                map.put(data[i], 1);
            } else {
                map.put(data[i], map.get(data[i]) + 1);
            }
        }
        ArrayList<Integer> list = new ArrayList<>();
        for (int i : map.keySet()) {
            if (map.get(i) >= 2) {
                list.add(i);
            }
        }
        Collections.sort(list);
        int temp = -1;
        boolean flg = false;
        for (int i = list.size() - 1; i >= 0; i--) {
            if (map.get(list.get(i)) >= 4) {
                if (temp != -1) {
                    System.out.println((long) list.get(i) * temp);
                } else {
                    System.out.println((long) list.get(i) * list.get(i));
                }
                flg = true;
                break;
            } else if (map.get(list.get(i)) >= 2) {
                if (temp == -1) {
                    temp = list.get(i);
                } else {
                    System.out.println((long) temp * list.get(i));
                    flg = true;
                    break;
                }
            }
        }
        if (!flg) {
            System.out.println(0);
        }
    }
}