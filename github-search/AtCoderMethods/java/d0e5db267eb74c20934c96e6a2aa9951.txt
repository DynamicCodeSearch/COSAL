void solve() {
    int n = ni();
    long a = nl(), b = nl(), x[] = new long[n], mod = 1000000007;
    for (int i = 0; i < n; ++i) {
        x[i] = nl();
    }
    Arrays.sort(x);
    if (a != 1) {
        while (b > 0 && x[0] * a < x[n - 1]) {
            x[0] *= a;
            Arrays.sort(x);
            --b;
        }
        int c = (int) (b % n), d = (int) (b / n);
        for (int i = 0; i < n; ++i) {
            x[i] = x[i] % mod * pow(a, d + (i < c ? 1 : 0), mod) % mod;
        }
        long[] y = Arrays.copyOf(x, x.length);
        System.arraycopy(y, c, x, 0, n - c);
        System.arraycopy(y, 0, x, n - c, c);
    }
    for (int i = 0; i < n; ++i) {
        out.println(x[i]);
    }
}