static void solve() {
    int n = ni(), m = ni();
    int[] from = new int[m];
    int[] to = new int[m];
    for (int i = 0; i < m; i++) {
        from[i] = ni() - 1;
        to[i] = ni() - 1;
    }
    int[][] g = packU(n, from, to);
    Set<Integer> set = new HashSet<>();
    for (int w : g[0]) {
        set.add(w);
    }
    for (int w : g[n - 1]) {
        if (!set.add(w)) {
            out.println("POSSIBLE");
            return;
        }
    }
    out.println("IMPOSSIBLE");
}