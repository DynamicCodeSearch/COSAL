public static void main(String[] args) {
    FS r = new FS();
    int N = r.nextInt();
    int K = r.nextInt();
    ArrayList<Integer> divisor = divisors(N);
    long[] num = new long[divisor.size()];
    long tmpSum = 0;
    for (int i = 0; i < divisor.size(); i++) {
        num[i] = pow(K, (divisor.get(i) + 1) / 2);
        for (int j = 0; j < i; j++) {
            if (divisor.get(i) % divisor.get(j) == 0) {
                num[i] -= num[j];
            }
        }
        while (num[i] < 0) num[i] += MOD;
        tmpSum += num[i];
        tmpSum %= MOD;
    }
    long ans = 0;
    for (int i = 0; i < divisor.size(); i++) {
        if (num[i] < 0)
            num[i] += MOD;
        num[i] = num[i] % MOD;
    }
    for (int i = 0; i < divisor.size(); i++) {
        long d = (long) divisor.get(i);
        if (d % 2 == 0)
            ans += num[i] * d / 2;
        else
            ans += num[i] * d;
        ans = ans % MOD;
    }
    System.out.println(ans);
}