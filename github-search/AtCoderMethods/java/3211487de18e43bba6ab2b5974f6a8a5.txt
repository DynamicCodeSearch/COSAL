public void solve(int testNumber, FastScanner in, PrintWriter out) {
    int n = in.nextInt();
    int k = in.nextInt();
    int[] a = new int[n + 1];
    for (int i = 1; i <= n; i++) {
        a[i] = in.nextInt();
    }
    boolean[][] pref = new boolean[n + 2][k + 1];
    boolean[][] suff = new boolean[n + 2][k + 1];
    pref[0][0] = true;
    for (int i = 1; i <= n; i++) {
        add(pref[i], pref[i - 1], a[i]);
    }
    suff[n + 1][0] = true;
    for (int i = n; i >= 1; i--) {
        add(suff[i], suff[i + 1], a[i]);
    }
    int ans = n;
    int[] s = new int[k + 1];
    outer: for (int i = 1; i <= n; i++) {
        for (int j = 0; j < k; j++) {
            s[j + 1] = s[j] + (suff[i + 1][j] ? 1 : 0);
        }
        for (int x = 0; x < k; x++) {
            if (!pref[i - 1][x]) {
                continue;
            }
            int l = k - a[i] - x;
            int r = k - x - 1;
            l = fix(l, k - 1);
            r = fix(r, k - 1);
            if (l <= r && s[r + 1] - s[l] > 0) {
                --ans;
                continue outer;
            }
        }
    }
    out.println(ans);
}