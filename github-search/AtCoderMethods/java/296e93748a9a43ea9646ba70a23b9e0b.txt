private void loadGraph(java.util.Scanner sc) {
    final int N = sc.nextInt();
    final java.util.List<java.util.List<Vertex>> lis = new java.util.ArrayList<java.util.List<Vertex>>();
    for (int i = 0; i < N; ++i) {
        lis.add(new java.util.LinkedList<Vertex>());
    }
    g = new Vertex[N];
    for (int i = 0; i < N; ++i) {
        g[i] = new Vertex();
    }
    for (int i = 0; i < N - 1; ++i) {
        final int a = sc.nextInt() - 1;
        final int b = sc.nextInt() - 1;
        lis.get(a).add(g[b]);
        lis.get(b).add(g[a]);
    }
    for (int i = 0; i < N; ++i) {
        g[i].neighbor = lis.get(i).toArray(g[i].neighbor);
    }
}