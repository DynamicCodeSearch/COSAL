private long permutation(int n, long[][] dist, Integer[] r, LinkedHashSet<Integer> perm) {
    if (n <= perm.size()) {
        return calcDistCore(perm, dist, r);
    } else {
        long min = Integer.MAX_VALUE;
        for (int i = 0; i < n; i++) {
            if (perm.contains(i))
                continue;
            perm.add(i);
            min = Math.min(min, permutation(n, dist, r, perm));
            perm.remove(i);
        }
        return min;
    }
}