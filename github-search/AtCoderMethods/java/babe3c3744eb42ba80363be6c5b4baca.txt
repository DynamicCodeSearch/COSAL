public static void main(String[] args) {
    InputReader in = new InputReader(System.in);
    PrintWriter out = new PrintWriter(System.out);
    int n = in.nextInt();
    long[] a = in.nextLongs(3 * n);
    long[] maxN = new long[3 * n + 1];
    {
        long sum = 0;
        Queue<Long> q = new PriorityQueue<>();
        for (int i = 0; i < a.length; i++) {
            q.add(a[i]);
            sum += a[i];
            if (q.size() > n) {
                sum -= q.poll();
            }
            maxN[i + 1] = sum;
        }
    }
    long[] minN = new long[3 * n + 1];
    {
        long sum = 0;
        Queue<Long> q = new PriorityQueue<>();
        for (int i = a.length - 1; i >= 0; i--) {
            q.add(-a[i]);
            sum += a[i];
            if (q.size() > n) {
                sum += q.poll();
            }
            minN[a.length - i] = sum;
        }
    }
    long max = -Long.MAX_VALUE;
    for (int l = 0; l <= a.length; l++) {
        int r = a.length - l;
        if (l >= n && r >= n) {
            max = Math.max(max, maxN[l] - minN[r]);
        }
    }
    out.println(max);
    out.flush();
}