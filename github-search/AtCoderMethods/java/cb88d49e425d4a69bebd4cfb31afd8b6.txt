public static void dfs(int n, int mask) {
    if (n == 5) {
        if (!flg) {
            for (int i = 0; i < 5; i++) {
                xplusySet.add(row[i] + column[p[i]]);
                xminusySet.add(row[i] - column[p[i]]);
            }
            if ((xplusySet.size() == 8) && (xminusySet.size() == 8)) {
                flg = true;
                for (int i = 0; i < 5; i++) {
                    ans[row[i]][column[p[i]]] = "Q";
                }
            } else {
                xplusySet = new HashSet<Integer>();
                xminusySet = new HashSet<Integer>();
                for (int i = 0; i < 3; i++) {
                    xplusySet.add(x[i] + y[i]);
                    xminusySet.add(x[i] - y[i]);
                }
            }
        }
    } else {
        for (int i = 0; i < 5; i++) {
            if ((mask & (1 << i)) == 0) {
                p[n] = i;
                dfs(n + 1, mask + (1 << i));
            }
        }
    }
}