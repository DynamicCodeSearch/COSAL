private static void solve(Scanner in) {
    int N = in.nextInt(), Ma = in.nextInt(), Mb = in.nextInt();
    int[] A = new int[N], B = new int[N], C = new int[N];
    for (int i = 0; i < N; i++) {
        A[i] = in.nextInt();
        B[i] = in.nextInt();
        C[i] = in.nextInt();
    }
    int MAX = Math.max(sum(A), sum(B)) + 1;
    int NA = sum(C) + 1;
    int[][][] dp = new int[N + 1][MAX][MAX];
    for (int i = 0; i < N + 1; i++) {
        for (int j = 0; j < MAX; j++) {
            for (int k = 0; k < MAX; k++) {
                dp[i][j][k] = NA;
            }
        }
    }
    dp[0][0][0] = 0;
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < MAX; j++) {
            for (int k = 0; k < MAX; k++) {
                if (dp[i + 1][j][k] > dp[i][j][k]) {
                    dp[i + 1][j][k] = dp[i][j][k];
                }
                if (j + A[i] < MAX && k + B[i] < MAX) {
                    if (dp[i + 1][j + A[i]][k + B[i]] > dp[i][j][k] + C[i]) {
                        dp[i + 1][j + A[i]][k + B[i]] = dp[i][j][k] + C[i];
                    }
                }
            }
        }
    }
    int minc = NA;
    for (int i = 0; i < N + 1; i++) {
        for (int j = 1; j < MAX; j++) {
            for (int k = 1; k < MAX; k++) {
                if (j * Mb == k * Ma) {
                    minc = minc < dp[i][j][k] ? minc : dp[i][j][k];
                }
            }
        }
    }
    System.out.println(minc == NA ? -1 : minc);
}