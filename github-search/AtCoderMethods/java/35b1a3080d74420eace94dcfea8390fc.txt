public static void main(String[] args) {
    
    Scanner sc = new Scanner(System.in);
    int R = sc.nextInt();
    int C = sc.nextInt();
    int K = sc.nextInt();
    int N = sc.nextInt();
    int[] accr = new int[R + 1];
    int[] accc = new int[C + 1];
    ArrayList<P> a = new ArrayList<P>();
    HashMap<Integer, Integer> rm = new HashMap<Integer, Integer>();
    HashMap<Integer, Integer> cm = new HashMap<Integer, Integer>();
    for (int i = 0; i < N; i++) {
        int r = sc.nextInt();
        int c = sc.nextInt();
        accr[r] += 1;
        accc[c] += 1;
        a.add(new P(r, c));
    }
    sc.close();
    long ans = 0;
    for (int i = 1; i <= R; i++) {
        if (rm.containsKey(accr[i])) {
            rm.put(accr[i], rm.get(accr[i]) + 1);
        } else {
            rm.put(accr[i], 1);
        }
    }
    for (int i = 1; i <= C; i++) {
        if (cm.containsKey(accc[i])) {
            cm.put(accc[i], cm.get(accc[i]) + 1);
        } else {
            cm.put(accc[i], 1);
        }
    }
    for (Map.Entry<Integer, Integer> entry : rm.entrySet()) {
        if (cm.containsKey(K - entry.getKey())) {
            ans += entry.getValue() * cm.get(K - entry.getKey());
        }
    }
    for (int i = 0; i < a.size(); i++) {
        P temp = a.get(i);
        int tr = temp.r;
        int tc = temp.c;
        if (accr[tr] + accc[tc] == K + 1) {
            ans += 1;
        } else if (accr[tr] + accc[tc] == K) {
            ans -= 1;
        }
    }
    System.out.println(ans);
}