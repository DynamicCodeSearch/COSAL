public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int[][] D = new int[N][N];
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
            D[i][j] = sc.nextInt();
        }
    }
    int[][] dp = new int[N][N];
    dp[0][0] = D[0][0];
    for (int j = 1; j < N; j++) {
        dp[0][j] = dp[0][j - 1] + D[0][j];
    }
    for (int i = 1; i < N; i++) {
        dp[i][0] = dp[i - 1][0] + D[i][0];
        for (int j = 1; j < N; j++) {
            dp[i][j] = dp[i - 1][j] + dp[i][j - 1] - dp[i - 1][j - 1] + D[i][j];
        }
    }
    int[] tasteMax = new int[N * N + 1];
    for (int i1 = 0; i1 < N; i1++) {
        for (int i2 = i1; i2 < N; i2++) {
            for (int j1 = 0; j1 < N; j1++) {
                for (int j2 = j1; j2 < N; j2++) {
                    int s = (i2 - i1 + 1) * (j2 - j1 + 1);
                    int taste = 0;
                    if (i1 == 0) {
                        if (j1 == 0) {
                            taste = dp[i2][j2];
                        } else {
                            taste = dp[i2][j2] - dp[i2][j1 - 1];
                        }
                    } else if (j1 == 0) {
                        taste = dp[i2][j2] - dp[i1 - 1][j2];
                    } else {
                        taste = dp[i2][j2] - dp[i2][j1 - 1] - dp[i1 - 1][j2] + dp[i1 - 1][j1 - 1];
                    }
                    tasteMax[s] = Math.max(tasteMax[s], taste);
                }
            }
        }
    }
    for (int s = 2; s < N * N + 1; s++) {
        tasteMax[s] = Math.max(tasteMax[s - 1], tasteMax[s]);
    }
    int Q = sc.nextInt();
    for (int i = 0; i < Q; i++) {
        int p = sc.nextInt();
        System.out.println(tasteMax[p]);
    }
}