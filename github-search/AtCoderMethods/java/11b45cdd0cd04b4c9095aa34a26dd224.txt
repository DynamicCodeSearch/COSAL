void solve() {
    Scanner sc = new Scanner(System.in);
    n = sc.nextInt();
    a = new int[n];
    b = new int[n];
    c = new long[n];
    tree = new ArrayList[n];
    for (int i = 0; i < n; i++) {
        tree[i] = new ArrayList<Edge>();
    }
    for (int i = 0; i < n - 1; i++) {
        a[i] = sc.nextInt() - 1;
        b[i] = sc.nextInt() - 1;
        c[i] = sc.nextInt();
        tree[a[i]].add(new Edge(b[i], c[i]));
        tree[b[i]].add(new Edge(a[i], c[i]));
    }
    q = sc.nextInt();
    k = sc.nextInt();
    x = new int[q];
    y = new int[q];
    for (int i = 0; i < q; i++) {
        x[i] = sc.nextInt() - 1;
        y[i] = sc.nextInt() - 1;
    }
    d = new long[n];
    dijkstra(k - 1);
    for (int i = 0; i < q; i++) {
        System.out.println(d[x[i]] + d[y[i]]);
    }
}