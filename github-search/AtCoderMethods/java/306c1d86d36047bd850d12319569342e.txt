void main() {
    int[] hash = new int[26];
    for (int i = 0; i < 26; i++) hash[i] = -1;
    hash['b' - 'a'] = 1;
    hash['c' - 'a'] = 1;
    hash['d' - 'a'] = 2;
    hash['w' - 'a'] = 2;
    hash['t' - 'a'] = 3;
    hash['j' - 'a'] = 3;
    hash['f' - 'a'] = 4;
    hash['q' - 'a'] = 4;
    hash['l' - 'a'] = 5;
    hash['v' - 'a'] = 5;
    hash['s' - 'a'] = 6;
    hash['x' - 'a'] = 6;
    hash['p' - 'a'] = 7;
    hash['m' - 'a'] = 7;
    hash['h' - 'a'] = 8;
    hash['k' - 'a'] = 8;
    hash['n' - 'a'] = 9;
    hash['g' - 'a'] = 9;
    hash['z' - 'a'] = 0;
    hash['r' - 'a'] = 0;
    StringBuffer sb = new StringBuffer();
    for (int i = 0; i < N; i++) {
        String word = words[i];
        StringBuffer s = new StringBuffer();
        for (char c : word.toCharArray()) {
            if ((int) (c - 'a') < 0 || (int) (c - 'a') >= 26)
                continue;
            if (hash[c - 'a'] >= 0) {
                s.append(String.valueOf(hash[c - 'a']));
            }
        }
        if (s.length() == 0) {
            continue;
        }
        sb.append(s);
        if (i == N - 1) {
            continue;
        }
        sb.append(" ");
    }
    if (sb.length() >= 1 && sb.charAt(sb.length() - 1) == ' ') {
        sb.setLength(sb.length() - 1);
    }
    System.out.println(sb.toString());
}