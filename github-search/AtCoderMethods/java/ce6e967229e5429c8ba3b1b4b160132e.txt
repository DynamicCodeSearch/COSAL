private void solve(Scanner sc) {
    Pair<Integer> overRate = new Pair<>(3200, Integer.MAX_VALUE);
    Map<Pair<Integer>, Integer> map = new HashMap<>();
    map.put(new Pair<>(1, 399), 0);
    map.put(new Pair<>(400, 799), 0);
    map.put(new Pair<>(800, 1199), 0);
    map.put(new Pair<>(1200, 1599), 0);
    map.put(new Pair<>(1600, 1999), 0);
    map.put(new Pair<>(2000, 2399), 0);
    map.put(new Pair<>(2400, 2799), 0);
    map.put(new Pair<>(2800, 3199), 0);
    map.put(overRate, 0);
    int N = sc.nextInt();
    int[] a = new int[N];
    for (int i = 0; i < N; ++i) {
        a[i] = sc.nextInt();
        Pair<Integer> pair = null;
        for (Pair<Integer> p : map.keySet()) {
            if (p.a <= a[i] && a[i] <= p.b) {
                pair = p;
                break;
            }
        }
        map.put(pair, map.get(pair) + 1);
    }
    int cnt1 = 0;
    int cnt2 = 0;
    for (Map.Entry<Pair<Integer>, Integer> entry : map.entrySet()) {
        if (entry.getKey() == overRate) {
            cnt2 += entry.getValue();
        } else if (entry.getValue() > 0) {
            ++cnt1;
        }
    }
    _out.println(Math.max(cnt1, (cnt2 > 0 ? 1 : 0)) + " " + (cnt1 + cnt2));
}