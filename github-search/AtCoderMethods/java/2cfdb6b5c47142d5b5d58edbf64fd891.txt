private static long solve(long h, long w) {
    long ans = Long.MAX_VALUE;
    for (long i = Math.max(1, w / 3); i < Math.min(w / 3 + 2, w); i++) {
        for (long j = Math.max(1, h / 2); j < Math.min(h / 2 + 2, h); j++) {
            long sq1 = i * h;
            long sq2 = (w - i) * j;
            long sq3 = (w - i) * (h - j);
            long[] sqs = { sq1, sq2, sq3 };
            Arrays.sort(sqs);
            ans = Math.min(ans, sqs[2] - sqs[0]);
        }
        long ww = w - i;
        for (long j = Math.max(1, ww / 2); j < Math.min(ww / 2 + 2, ww); j++) {
            long sq1 = i * h;
            long sq2 = j * h;
            long sq3 = (ww - j) * h;
            long[] sqs = { sq1, sq2, sq3 };
            Arrays.sort(sqs);
            ans = Math.min(ans, sqs[2] - sqs[0]);
        }
    }
    for (long i = Math.max(1, h / 3); i < Math.min(h / 3 + 2, h); i++) {
        for (long j = Math.max(1, w / 2); j < Math.min(w / 2 + 2, w); j++) {
            long sq1 = i * w;
            long sq2 = (h - i) * j;
            long sq3 = (h - i) * (w - j);
            long[] sqs = { sq1, sq2, sq3 };
            Arrays.sort(sqs);
            ans = Math.min(ans, sqs[2] - sqs[0]);
        }
        long hh = h - i;
        for (long j = Math.max(1, hh / 2); j < Math.min(hh / 2 + 2, hh); j++) {
            long sq1 = i * w;
            long sq2 = j * w;
            long sq3 = (hh - j) * w;
            long[] sqs = { sq1, sq2, sq3 };
            Arrays.sort(sqs);
            ans = Math.min(ans, sqs[2] - sqs[0]);
        }
    }
    return ans;
}