private static void solve(Scanner in) {
    int N = in.nextInt(), M = in.nextInt();
    int[] l = new int[N + 1], r = new int[N + 1];
    for (int i = 1; i < N + 1; i++) {
        
        l[i] = in.nextInt();
        r[i] = in.nextInt();
    }
    @SuppressWarnings("unchecked")
    List<Integer>[] nByLen = new List[M + 1];
    for (int n = 1; n < N + 1; n++) {
        int len = r[n] - l[n] + 1;
        if (nByLen[len] == null) {
            nByLen[len] = new ArrayList<>();
        }
        nByLen[len].add(n);
    }
    int accum = N;
    Fenwick F = new Fenwick(M);
    for (int d = 1; d < M + 1; d++) {
        int sum = accum;
        for (int e = d; e < M + 1; e += d) {
            sum += F.accum(e);
        }
        System.out.println(sum);
        if (nByLen[d] != null) {
            accum -= nByLen[d].size();
            for (int i : nByLen[d]) {
                F.add(l[i], 1);
                F.add(r[i] + 1, -1);
            }
        }
    }
}