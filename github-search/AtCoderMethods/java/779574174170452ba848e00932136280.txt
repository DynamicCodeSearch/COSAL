private static void dijkstra(List<List<Edge>> graph, int s, int[] dist) {
    PriorityQueue<Pair> pq = new PriorityQueue<Pair>();
    for (int v = 0; v < n; v++) {
        dist[v] = INF;
    }
    dist[s] = 0;
    pq.offer(new Pair(s, 0));
    while (!pq.isEmpty()) {
        Pair p = pq.poll();
        int v = p.v, d = p.d;
        if (d > dist[v]) {
            continue;
        }
        dist[v] = d;
        for (int i = 0; i < graph.get(v).size(); i++) {
            Edge e = graph.get(v).get(i);
            pq.offer(new Pair(e.w, dist[v] + e.c));
        }
    }
}