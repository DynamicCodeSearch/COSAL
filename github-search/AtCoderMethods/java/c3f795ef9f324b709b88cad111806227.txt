public void solve(int testNumber, InputReader in, PrintWriter out) {
    int n = in.nextInt();
    int m = in.nextInt();
    Node[] nodes = new Node[n];
    for (int i = 0; i < n; i++) {
        nodes[i] = new Node();
        nodes[i].index = i;
    }
    for (int i = 0; i < m; i++) {
        int u = in.nextInt() - 1;
        int v = in.nextInt() - 1;
        nodes[u].edges.add(nodes[v]);
        nodes[v].edges.add(nodes[u]);
    }
    ArrayList<Node> q = new ArrayList<>();
    ArrayList<Node> q1 = new ArrayList<>();
    q.addAll(nodes[0].edges);
    for (Node n1 : q) {
        q1.addAll(n1.edges);
    }
    out.println(q1.contains(nodes[n - 1]) ? "POSSIBLE" : "IMPOSSIBLE");
}