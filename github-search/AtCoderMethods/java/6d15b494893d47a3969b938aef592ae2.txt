static void solve() {
    char[] s = ns().toCharArray();
    int n = s.length;
    outer: for (int pe = 1; pe < n; pe++) {
        if (n % pe == 0) {
            for (int i = 0, j = pe; j < n; i++, j++) {
                if (s[i] != s[j])
                    continue outer;
            }
            if (pe == 1) {
                out.println(n);
                out.println(1);
                return;
            }
            out.println(2);
            int[] z = Z(s);
            int[] dead = new int[n + 1];
            for (int j = 1; j < n; j++) {
                for (int k = 2 * j; k <= n; k += j) {
                    if (k <= j + z[j]) {
                        dead[k - 1]++;
                    }
                }
            }
            char[] rs = rev(s);
            z = Z(rs);
            for (int j = 1; j < n; j++) {
                for (int k = 2 * j; k <= n; k += j) {
                    if (k <= j + z[j]) {
                        if (n - 2 - (k - 1) >= 0)
                            dead[n - 2 - (k - 1)]++;
                    }
                }
            }
            int ct = 0;
            for (int j = 0; j < n - 1; j++) {
                if (dead[j] == 0) {
                    ct++;
                }
            }
            out.println(ct);
            return;
        }
    }
    out.println(1);
    out.println(1);
}