private static void solve() {
    int n = sc.nextInt();
    int m = sc.nextInt();
    FloydWarshall fw = new FloydWarshall(n);
    int[] a = new int[m];
    int[] b = new int[m];
    int[] c = new int[m];
    for (int i = 0; i < m; i++) {
        a[i] = sc.nextInt() - 1;
        b[i] = sc.nextInt() - 1;
        c[i] = sc.nextInt();
        fw.addEdge(a[i], b[i], c[i]);
        fw.addEdge(b[i], a[i], c[i]);
    }
    int ret = 0;
    for (int i = 0; i < m; i++) {
        if (c[i] > fw.getShortestPath(a[i], b[i])) {
            ret++;
        }
    }
    pr.println(ret);
}