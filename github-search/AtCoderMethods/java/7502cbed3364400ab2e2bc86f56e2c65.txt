private static int solve(String stdinString) {
    String[] splits = stdinString.split("\n");
    int N = Integer.parseInt(splits[0]);
    int[] nums = new int[N];
    splits = splits[1].split(" ");
    for (int i = 0; i < N; i++) {
        nums[i] = Integer.parseInt(splits[i]);
    }
    int max = Integer.MIN_VALUE;
    HashMap<Integer, Integer> xCounts = new HashMap<>();
    for (int i = 0; i < N; i++) {
        xCounts.put(nums[i] - 1, xCounts.getOrDefault(nums[i] - 1, 0) + 1);
        max = Math.max(max, xCounts.get(nums[i] - 1));
        xCounts.put(nums[i], xCounts.getOrDefault(nums[i], 0) + 1);
        max = Math.max(max, xCounts.get(nums[i]));
        xCounts.put(nums[i] + 1, xCounts.getOrDefault(nums[i] + 1, 0) + 1);
        max = Math.max(max, xCounts.get(nums[i] + 1));
    }
    return max;
}