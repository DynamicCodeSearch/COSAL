public static void main(String[] args) {
    int N = sc.nextInt();
    c = new City[N];
    for (int i = 0; i < N; i++) {
        c[i] = new City(sc.nextInt(), sc.nextInt(), i);
    }
    PriorityQueue<Road> r = new PriorityQueue<>((a, b) -> a.cost - b.cost);
    City[] ca = c.clone();
    Arrays.sort(ca, (a, b) -> a.x - b.x);
    for (int i = 0; i < N - 1; i++) {
        r.add(new Road(ca[i + 1].x - ca[i].x, ca[i].id, ca[i + 1].id));
    }
    Arrays.sort(ca, (a, b) -> a.y - b.y);
    for (int i = 0; i < N - 1; i++) {
        r.add(new Road(ca[i + 1].y - ca[i].y, ca[i].id, ca[i + 1].id));
    }
    long ans = 0;
    while (!r.isEmpty()) {
        Road road = r.poll();
        int p1 = c[road.id1].findParent();
        int p2 = c[road.id2].findParent();
        if (p1 != p2) {
            c[p2].parent = p1;
            ans += road.cost;
        
        }
    }
    System.out.println(ans);
}