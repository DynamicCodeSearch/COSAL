public void solve(int testNumber, MyReader in, PrintWriter out) {
    int N0 = in.nextInt();
    int N = N0 * 3;
    long[] a = new long[N];
    for (int i = 0; i < N; i++) {
        a[i] = in.nextLong();
    }
    PriorityQueue<Long> lp = new PriorityQueue<>();
    PriorityQueue<Long> rp = new PriorityQueue<>();
    long[] ls = new long[N];
    long[] rs = new long[N];
    Arrays.fill(ls, (long) 1E18);
    Arrays.fill(rs, (long) -1E18);
    long l = 0;
    for (int i = 0; i < N; i++) {
        lp.add(a[i]);
        l += a[i];
        if (lp.size() > N0) {
            l -= lp.poll();
        }
        ls[i] = l;
    }
    long r = 0;
    for (int i = N - 1; i >= 0; i--) {
        rp.add(-a[i]);
        r += a[i];
        if (rp.size() > N0) {
            r -= -rp.poll();
        }
        rs[i] = r;
    }
    long ma = (long) -1E18;
    for (int i = N0 - 1; i < 2 * N0; i++) {
        ma = Math.max(ma, ls[i] - rs[i + 1]);
    }
    out.println(ma);
}