public void solve(int testNumber, InputReader in, PrintWriter out) {
    int n = in.nextInt();
    int[] a = new int[n];
    TreeMap<Integer, Integer> hs = new TreeMap<>();
    for (int i = 0; i < n; ++i) {
        a[i] = in.nextInt();
        hs.merge(a[i], 1, Integer::sum);
    }
    long bst = 1;
    int cnt = 0;
    for (Map.Entry<Integer, Integer> entry : hs.descendingMap().entrySet()) {
        if (entry.getValue() >= 4 && cnt == 0) {
            bst *= entry.getKey();
            bst *= entry.getKey();
            cnt = 2;
            break;
        } else if (entry.getValue() >= 2) {
            bst *= entry.getKey();
            cnt++;
        }
        if (cnt == 2)
            break;
    }
    if (cnt != 2)
        bst = 0;
    out.println(bst);
}