public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    boolean[][] p = new boolean[N][N];
    int M = sc.nextInt();
    for (int i = 0; i < M; i++) {
        int x = sc.nextInt() - 1;
        int y = sc.nextInt() - 1;
        p[x][y] = true;
    }
    long[] dp = new long[1 << N];
    dp[0] = 1;
    for (int i = 0; i < N; i++) {
        int comb = (1 << i) - 1;
        while (comb < (1 << N)) {
            for (int j = 0; j < N; j++) {
                if (((1 << j) & comb) == 0) {
                    boolean ok = true;
                    for (int k = 0; k < N; k++) {
                        if (((1 << k) & comb) != 0 && p[j][k] == true) {
                            ok = false;
                            break;
                        }
                    }
                    if (ok)
                        dp[comb | (1 << j)] += dp[comb];
                }
            }
            if (comb == 0)
                break;
            int x = comb & -comb;
            int y = comb + x;
            comb = ((comb & ~y) / x >> 1) | y;
        }
    }
    System.out.println(dp[(1 << N) - 1]);
    sc.close();
}