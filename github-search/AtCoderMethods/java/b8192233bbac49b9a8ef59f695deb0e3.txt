public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int[][] d = new int[N][N];
    for (int y = 0; y < N; y++) {
        for (int x = 0; x < N; x++) {
            d[x][y] = sc.nextInt();
        }
    }
    int Q = sc.nextInt();
    int[] p = new int[Q];
    for (int i = 0; i < Q; i++) p[i] = sc.nextInt();
    sc.close();
    int[][][][] dp = new int[N][N][N][N];
    int[] resultDp = new int[N * N];
    for (int x1 = 0; x1 < N; x1++) {
        for (int y1 = 0; y1 < N; y1++) {
            for (int x2 = x1; x2 < N; x2++) {
                for (int y2 = y1; y2 < N; y2++) {
                    if (x1 == 0 && y1 == 0) {
                        dp[0][0][x2][y2] = d[x2][y2];
                        if (x2 > 0)
                            dp[0][0][x2][y2] += dp[0][0][x2 - 1][y2];
                        if (y2 > 0)
                            dp[0][0][x2][y2] += dp[0][0][x2][y2 - 1];
                        if (x2 > 0 && y2 > 0)
                            dp[0][0][x2][y2] -= dp[0][0][x2 - 1][y2 - 1];
                    } else {
                        dp[x1][y1][x2][y2] = dp[0][0][x2][y2];
                        if (x1 > 0)
                            dp[x1][y1][x2][y2] -= dp[0][0][x1 - 1][y2];
                        if (y1 > 0)
                            dp[x1][y1][x2][y2] -= dp[0][0][x2][y1 - 1];
                        if (x1 > 0 && y1 > 0)
                            dp[x1][y1][x2][y2] += dp[0][0][x1 - 1][y1 - 1];
                    }
                    int num = (x2 - x1 + 1) * (y2 - y1 + 1) - 1;
                    resultDp[num] = Math.max(resultDp[num], dp[x1][y1][x2][y2]);
                }
            }
        }
    }
    for (int i = 1; i < N * N; i++) {
        resultDp[i] = Math.max(resultDp[i], resultDp[i - 1]);
    }
    for (int i = 0; i < Q; i++) {
        System.out.println(resultDp[p[i] - 1]);
    }
}