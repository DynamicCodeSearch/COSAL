private void solve(Scanner sc, PrintWriter out) {
    N = sc.nextInt();
    A = sc.nextInt();
    sc.nextLine();
    x = new int[N];
    X = A;
    for (int i = 0; i < N; ++i) {
        x[i] = sc.nextInt();
        if (x[i] > X) {
            X = x[i];
        }
    }
    long[][][] dp = new long[N + 1][N + 1][N * X + 1];
    for (int j = 0; j <= N; ++j) {
        for (int k = 0; k <= N; ++k) {
            for (int s = 0; s <= N * X; ++s) {
                if (j == 0 && k == 0 && s == 0) {
                    dp[j][k][s] = 1;
                } else if (j >= 1 && s < x[j - 1]) {
                    dp[j][k][s] = dp[j - 1][k][s];
                } else if (j >= 1 && k >= 1 && s >= x[j - 1]) {
                    dp[j][k][s] = dp[j - 1][k][s] + dp[j - 1][k - 1][s - x[j - 1]];
                } else {
                    dp[j][k][s] = 0;
                }
            }
        }
    }
    long sum = 0;
    for (int k = 1; k <= N; ++k) {
        sum += dp[N][k][k * A];
    }
    out.println(sum);
}