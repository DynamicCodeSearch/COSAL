public void solve() {
    N = nextInt();
    M = nextInt();
    D = new int[N][N];
    for (int i = 0; i < N; i++) for (int j = 0; j < N; j++) if (i == j)
        D[i][j] = 0;
    else
        D[i][j] = INF;
    a = new int[M];
    b = new int[M];
    c = new int[M];
    for (int i = 0; i < M; i++) {
        a[i] = nextInt() - 1;
        b[i] = nextInt() - 1;
        c[i] = nextInt();
        D[a[i]][b[i]] = c[i];
        D[b[i]][a[i]] = c[i];
    }
    for (int k = 0; k < N; k++) for (int i = 0; i < N; i++) for (int j = 0; j < N; j++) D[i][j] = Math.min(D[i][j], D[i][k] + D[k][j]);
    int ans = M;
    for (int i = 0; i < M; i++) {
        boolean flag = false;
        for (int j = 0; j < N; j++) if (D[j][a[i]] + c[i] == D[j][b[i]])
            flag = true;
        if (flag)
            ans--;
    }
    out.println(ans);
}