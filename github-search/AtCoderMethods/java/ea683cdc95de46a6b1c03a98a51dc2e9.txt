public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    N = sc.nextInt();
    Ma = sc.nextInt();
    Mb = sc.nextInt();
    int[] a = new int[N];
    int[] b = new int[N];
    int[] c = new int[N];
    for (int i = 0; i < N; i++) {
        a[i] = sc.nextInt();
        b[i] = sc.nextInt();
        c[i] = sc.nextInt();
    }
    int[][][] dp = new int[N + 1][401][401];
    for (int i = 0; i < N + 1; i++) {
        for (int j = 0; j < 401; j++) {
            for (int k = 0; k < 401; k++) {
                dp[i][j][k] = INF;
            }
        }
    }
    dp[0][0][0] = 0;
    for (int i = 0; i < N; i++) {
        for (int ca = 0; ca < 401; ca++) {
            for (int cb = 0; cb < 401; cb++) {
                dp[i + 1][ca][cb] = Math.min(dp[i + 1][ca][cb], dp[i][ca][cb]);
                if (ca + a[i] < 401 && cb + b[i] < 401) {
                    dp[i + 1][ca + a[i]][cb + b[i]] = Math.min(dp[i + 1][ca + a[i]][cb + b[i]], dp[i][ca][cb] + c[i]);
                }
            }
        }
    }
    int min = INF;
    for (int ca = 0; ca < 401; ca++) {
        for (int cb = 0; cb < 401; cb++) {
            if (ca == 0 && cb == 0)
                continue;
            if (match(ca, cb) && dp[N][ca][cb] < min)
                min = dp[N][ca][cb];
        }
    }
    System.out.println(min == INF ? -1 : min);
}