void solve() {
    int n = in.nextInt();
    int[] a = new int[n];
    Map<Integer, Integer> count = new TreeMap<>();
    for (int i = 0; i < n; i++) {
        a[i] = in.nextInt();
        if (!count.containsKey(a[i])) {
            count.put(a[i], 0);
        }
        count.put(a[i], count.get(a[i]) + 1);
    }
    List<Integer> b = new ArrayList<>();
    for (int i : count.keySet()) {
        for (int j = 0; j < count.get(i) / 2; j++) {
            b.add(i);
        }
    }
    Collections.sort(b);
    if (b.size() < 2) {
        out.println(0);
    } else {
        out.println(1L * b.get(b.size() - 2) * b.get(b.size() - 1));
    }
}