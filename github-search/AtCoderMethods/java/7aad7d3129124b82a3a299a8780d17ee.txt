public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int R = sc.nextInt();
    int C = sc.nextInt();
    int sy = sc.nextInt() - 1;
    int sx = sc.nextInt() - 1;
    int gy = sc.nextInt() - 1;
    int gx = sc.nextInt() - 1;
    char[][] a = new char[R][C];
    for (int j = 0; j < R; j++) {
        String str = sc.next();
        a[j] = str.toCharArray();
    }
    int[][] d = new int[R][C];
    for (int i = 0; i < R; i++) {
        for (int j = 0; j < C; j++) {
            d[i][j] = -1;
        }
    }
    Deque<Pair> q = new ArrayDeque<>();
    q.addLast(new Pair(sx, sy, 0));
    while (true) {
        if (q.size() == 0)
            break;
        int[] dx = { -1, 0, 1, 0 };
        int[] dy = { 0, -1, 0, 1 };
        Pair p = q.pollFirst();
        for (int i = 0; i < 4; i++) {
            int nx = p.x + dx[i];
            int ny = p.y + dy[i];
            if (0 <= nx && nx < C && 0 <= ny && ny < R && d[ny][nx] == -1 && a[ny][nx] != '#') {
                d[ny][nx] = p.d + 1;
                q.addLast(new Pair(nx, ny, p.d + 1));
            }
        }
    }
    System.out.println(d[gy][gx]);
}