public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    a = sc.nextInt();
    int b = sc.nextInt();
    if (a == 1) {
        int[] x = new int[n];
        for (int i = 0; i < n; i++) {
            x[i] = sc.nextInt();
        }
        Arrays.sort(x);
        for (int i = 0; i < n; i++) {
            System.out.println(x[i]);
        }
        return;
    }
    Number[] x = new Number[n];
    TreeSet<Number> ts = new TreeSet<>();
    for (int i = 0; i < n; i++) {
        x[i] = new Number(i, sc.nextInt(), 0);
        ts.add(x[i]);
    }
    while (b > 0) {
        Number min = ts.first();
        Number max = ts.last();
        if (b > 100 && new Number(-1, min.x, min.y + 1).compareTo(max) > 0) {
            int d = b / n;
            for (int i = 0; i < n; i++) {
                x[i].y += d;
            }
            b -= d * n;
            continue;
        }
        ts.pollFirst();
        min.y++;
        ts.add(min);
        b--;
    }
    for (Number num : ts) {
        System.out.println(num.x * pow(a, num.y, MOD) % MOD);
    }
}