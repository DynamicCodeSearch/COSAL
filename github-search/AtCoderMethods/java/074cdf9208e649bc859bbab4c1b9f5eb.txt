private void solve(Scanner sc, PrintWriter out) {
    N = sc.nextInt();
    int maxW = Integer.MIN_VALUE;
    for (int i = 0; i < N; ++i) {
        int w = sc.nextInt();
        int h = sc.nextInt();
        boxList.add(new Pair(w, h));
        maxW = Math.max(maxW, w);
    }
    Collections.sort(boxList, (a, b) -> {
        if (a.b == b.b) {
            return b.a - a.a;
        } else {
            return a.b - b.b;
        }
    });
    BIT<Integer> bit = new BIT<>(maxW, Integer::max, 0);
    int[] dp = new int[N];
    int max = 0;
    for (int i = 0; i < N; ++i) {
        Pair box = boxList.get(i);
        dp[i] = bit.reduce(box.a - 1, 0) + 1;
        bit.update(box.a, dp[i]);
        max = Math.max(max, dp[i]);
    }
    out.println(max);
}