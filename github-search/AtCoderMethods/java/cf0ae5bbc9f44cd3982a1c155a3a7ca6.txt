void pre() {
    right = new int[17][n];
    left = new int[17][n];
    right[0][n - 1] = n;
    left[0][0] = -1;
    for (int i = 0; i < n - 1; ++i) {
        right[0][i] = Arrays.binarySearch(hotelsPos, hotelsPos[i] + l);
        if (right[0][i] < 0) {
            right[0][i] = ~right[0][i];
            --right[0][i];
        }
    }
    for (int i = 1; i < n; ++i) {
        left[0][i] = Arrays.binarySearch(hotelsPos, hotelsPos[i] - l);
        if (left[0][i] < 0) {
            left[0][i] = ~left[0][i];
        }
    }
    for (int i = 1; i < 17; ++i) {
        
        for (int j = 0; j < n; ++j) {
            if (right[i - 1][j] < n) {
                right[i][j] = right[i - 1][right[i - 1][j]];
            } else {
                right[i][j] = n;
            }
            if (left[i - 1][j] > -1) {
                left[i][j] = left[i - 1][left[i - 1][j]];
            } else {
                left[i][j] = -1;
            }
        }
    }
}