public static void main(String[] args) {
    InputReader in = new InputReader(System.in);
    PrintWriter out = new PrintWriter(System.out);
    int n = in.nextInt();
    int[][] towns = new int[n][3];
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < 2; j++) {
            towns[i][j] = in.nextInt();
        }
        towns[i][2] = i;
    }
    List<int[]> edges = new ArrayList<>();
    Arrays.sort(towns, Comparator.comparingInt(u -> u[0]));
    for (int i = 0; i + 1 < n; i++) {
        edges.add(new int[] { towns[i][2], towns[i + 1][2], towns[i + 1][0] - towns[i][0] });
    }
    Arrays.sort(towns, Comparator.comparingInt(u -> u[1]));
    for (int i = 0; i + 1 < n; i++) {
        edges.add(new int[] { towns[i][2], towns[i + 1][2], towns[i + 1][1] - towns[i][1] });
    }
    Collections.sort(edges, Comparator.comparingInt(u -> u[2]));
    long total = 0;
    UnionFind uf = new UnionFind(n);
    for (int[] e : edges) {
        if (!uf.issame(e[0], e[1])) {
            uf.unite(e[0], e[1]);
            total += e[2];
        }
    }
    out.println(total);
    out.flush();
}