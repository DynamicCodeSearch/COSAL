void BFS(int s) {
    boolean[] visited = new boolean[V];
    LinkedList<Integer> queue = new LinkedList<Integer>();
    visited[s] = true;
    queue.add(s);
    while (queue.size() != 0) {
        s = queue.poll();
        Iterator<Edge> i = adj[s].listIterator();
        while (i.hasNext()) {
            Edge e = i.next();
            int n = e.to;
            if (!visited[n]) {
                map.put(n, map.get(s) + e.val);
                visited[n] = true;
                queue.add(n);
            }
        }
    }
}