void solve() throws IOException {
    int n = in.nextInt();
    Pos[] xo = new Pos[n];
    Pos[] yo = new Pos[n];
    for (int i = 0; i < n; i++) {
        int x = in.nextInt();
        int y = in.nextInt();
        xo[i] = new Pos(i, x, y);
        yo[i] = new Pos(i, y, x);
    }
    Arrays.sort(xo);
    Arrays.sort(yo);
    List<Edge> edge = new ArrayList<>();
    for (int i = 1; i < n; i++) {
        int from1 = xo[i].id;
        int to1 = xo[i - 1].id;
        int cost1 = xo[i].x - xo[i - 1].x;
        int from2 = yo[i].id;
        int to2 = yo[i - 1].id;
        int cost2 = yo[i].x - yo[i - 1].x;
        edge.add(new Edge(from1, to1, cost1));
        edge.add(new Edge(from2, to2, cost2));
    }
    Collections.sort(edge);
    Kruskal.getMst(edge, n);
    System.out.println(Kruskal.cost);
}