public void solve(int testNumber, InputReader in, PrintWriter out) {
    int n = in.nextInt();
    int a = in.nextInt() - 1;
    String k = in.nextString();
    int[] b = new int[n];
    for (int i = 0; i < n; i++) {
        b[i] = in.nextInt() - 1;
    }
    int now = a;
    if (k.length() <= 6) {
        int m = Integer.parseInt(k);
        for (int i = 0; i < m; i++) {
            now = b[now];
        }
        out.println(now + 1);
        return;
    }
    int[] prevVisit = new int[n];
    Arrays.fill(prevVisit, -1);
    int cnt = 0;
    int s;
    while (true) {
        prevVisit[now] = cnt;
        cnt++;
        now = b[now];
        if (prevVisit[now] != -1) {
            s = cnt - prevVisit[now];
            break;
        }
    }
    BigInteger biK = new BigInteger(k);
    biK = biK.subtract(new BigInteger(String.valueOf(cnt)));
    biK = biK.mod(new BigInteger(String.valueOf(s)));
    int m = Integer.parseInt(biK.toString());
    for (int i = 0; i < m; i++) {
        now = b[now];
    }
    out.println(now + 1);
}