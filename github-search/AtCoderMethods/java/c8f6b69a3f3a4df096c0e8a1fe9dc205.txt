private static void solve(Scanner in) {
    int N = in.nextInt(), M = in.nextInt();
    int[] l = new int[N + 1], r = new int[N + 1];
    for (int i = 1; i < N + 1; i++) {
        
        l[i] = in.nextInt();
        r[i] = in.nextInt();
    }
    @SuppressWarnings("unchecked")
    List<Integer>[] nBySpan = new List[M + 1];
    for (int i = 0; i < M + 1; i++) {
        nBySpan[i] = new ArrayList<>();
    }
    for (int n = 1; n < N + 1; n++) {
        int s = r[n] - l[n] + 1;
        nBySpan[s].add(n);
    }
    int accum = 0;
    for (int i = 1; i < M + 1; i++) {
        accum += nBySpan[i].size();
    }
    Fenwick F = new Fenwick(M);
    for (int d = 1; d < M + 1; d++) {
        accum -= nBySpan[d].size();
        int sum = accum;
        for (int i : nBySpan[d]) {
            F.add(l[i], 1);
            F.add(r[i] + 1, -1);
        }
        for (int e = d; e < M + 1; e += d) {
            sum += F.accum(e);
        }
        System.out.println(sum);
    }
}