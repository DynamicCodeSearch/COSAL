private void solve() throws IOException {
    int n = nextInt();
    int[][] points = new int[2 * n][2];
    for (int i = 0; i < n; i++) {
        points[2 * i][0] = nextInt();
        points[2 * i][1] = 2 * i;
        points[2 * i + 1][0] = nextInt();
        points[2 * i + 1][1] = 2 * i + 1;
    }
    Arrays.sort(points, new Comparator<int[]>() {

        @Override
        public int compare(int[] o1, int[] o2) {
            return Integer.compare(o1[0], o2[0]);
        }
    });
    x = new int[2 * n];
    q = new int[2 * n];
    for (int i = 0; i < 2 * n; i++) {
        x[i] = points[i][0];
        q[i] = points[i][1];
    }
    int l = 0;
    int r = 1000000001;
    sat2 = new Sat2();
    k = 1;
    while (k < 2 * n) k *= 2;
    sat2.init(k + n, 1000000);
    while (r > l + 1) {
        int m = (l + r) / 2;
        if (check(n, m))
            l = m;
        else
            r = m;
    }
    out.println(l);
}