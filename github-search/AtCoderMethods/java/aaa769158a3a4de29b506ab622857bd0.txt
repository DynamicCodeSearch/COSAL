public static void dfs(int pos, int mask) {
    if (pos == N) {
        int c = 0;
        for (int i = 0; i < N - 1; i++) {
            if (edge[p[i]][p[i + 1]] == 0) {
                c++;
                break;
            }
        }
        if (c == 0)
            count++;
    }
    for (int i = 0; i < N; i++) {
        if ((mask & (1 << i)) != 0) {
            p[pos] = i;
            dfs(pos + 1, (mask ^ (1 << i)));
        }
    }
}