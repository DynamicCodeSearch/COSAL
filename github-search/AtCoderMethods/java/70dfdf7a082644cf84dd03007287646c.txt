void run() {
    int N = sc.nextInt();
    int[] A = sc.nextIntArray(N);
    int[] c = new int[100001];
    for (int i = 0; i < N; i++) {
        c[A[i]]++;
    }
    PriorityQueue<Pair> que = new PriorityQueue<>();
    for (int i = 0; i <= 100000; i++) {
        if (c[i] > 0) {
            que.add(new Pair(c[i], i));
        }
    }
    while (true) {
        if (que.size() == 1) {
            break;
        }
        Pair p1 = que.poll();
        Pair p2 = que.poll();
        if (p1.cnt == 1) {
            que.add(p1);
            que.add(p2);
            break;
        }
        if (p2.cnt == 1 && p1.cnt > 2) {
            p1.cnt -= 2;
            que.add(p1);
            que.add(p2);
        } else if (p1.cnt != p2.cnt) {
            if (p1.cnt == 2 && p2.cnt == 1) {
                que.add(p1);
                break;
            } else {
                p1.cnt -= 1;
                p2.cnt -= 1;
                que.add(p1);
                que.add(p2);
            }
        } else {
            p1.cnt = 1;
            p2.cnt = 1;
            que.add(p1);
            que.add(p2);
        }
    }
    System.out.println(que.size());
}