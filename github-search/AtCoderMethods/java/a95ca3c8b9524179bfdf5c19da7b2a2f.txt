void solve() {
    int[] log = new int[n];
    Arrays.fill(log, Integer.MAX_VALUE);
    PriorityQueue<Node> queue = new PriorityQueue<>(Comparator.comparing(Node::getCost));
    queue.add(new Node(0, 0));
    log[0] = 0;
    while (!queue.isEmpty()) {
        Node a = queue.poll();
        if (log[a.current] < a.cost)
            continue;
        log[a.current] = a.cost;
        for (int e : es[a.current]) {
            if (log[a.current] + 1 <= 2)
                queue.add(new Node(e, log[a.current] + 1));
        }
    }
    if (log[n - 1] <= 2)
        System.out.println("POSSIBLE");
    else
        System.out.println("IMPOSSIBLE");
}