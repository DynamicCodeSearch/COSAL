public static void main(String[] args) {
    FastScanner sc = new FastScanner();
    int N = sc.nextInt();
    long[] a = sc.nextLongList(N);
    SortedMap<Long, long[]> map = new TreeMap<>((o1, o2) -> Long.compare(o2, o1));
    for (int i = 0; i < N; i++) {
        if (!map.containsKey(a[i])) {
            map.put(a[i], new long[] { Long.MAX_VALUE, 0, 0 });
        }
        long[] d = map.get(a[i]);
        d[0] = Math.min(i, d[0]);
        d[1]++;
        d[2] = a[i];
    }
    long[] ret = new long[N];
    long[][] table = map.values().toArray(new long[0][]);
    for (int i = 0; i < table.length - 1; i++) {
        long d = table[i][2] - table[i + 1][2];
        ret[(int) table[i][0]] += table[i][1] * d;
        table[i + 1][1] += table[i][1];
        table[i + 1][0] = Math.min(table[i + 1][0], table[i][0]);
    }
    ret[0] += table[table.length - 1][1] * table[table.length - 1][2];
    StringBuilder sb = new StringBuilder();
    for (long v : ret) {
        sb.append(v);
        sb.append("\n");
    }
    System.out.println(sb);
}