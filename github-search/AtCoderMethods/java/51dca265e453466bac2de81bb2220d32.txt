static void solve() {
    int n = ni(), m = ni();
    int[] imos = new int[100005];
    int s = 320;
    int[] rets = new int[s + 1];
    for (int i = 0; i < n; i++) {
        int l = ni(), r = ni();
        for (int d = 1; r / d >= s; d++) {
            int ll = Math.max(s + 1, (l + d - 1) / d);
            int lr = d == 1 ? r / d + 1 : Math.min(r / d + 1, (l + d - 2) / (d - 1));
            if (ll > lr)
                continue;
            if (lr <= s)
                break;
            imos[ll]++;
            imos[lr]--;
        }
        for (int j = 1; j <= s; j++) {
            int re = (l + j - 1) / j * j;
            if (re <= r)
                rets[j]++;
        }
    }
    for (int d = 1; d <= 100004; d++) {
        imos[d] += imos[d - 1];
    }
    for (int i = 1; i <= s && i <= m; i++) {
        out.println(rets[i]);
    }
    for (int i = s + 1; i <= m; i++) {
        out.println(imos[i]);
    }
}