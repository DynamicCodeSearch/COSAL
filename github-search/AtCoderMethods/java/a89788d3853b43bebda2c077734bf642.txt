private static int dfs(int pos, int num) {
    if (num == 0) {
        return 0;
    }
    if (dp[pos][num] >= 0) {
        return dp[pos][num];
    }
    int move = 0;
    if (num > G + B) {
        move = Math.abs(SIZE / 2 - 100 - pos);
    } else if (num > B) {
        move = Math.abs(SIZE / 2 - pos);
    } else if (num > 0) {
        move = Math.abs(SIZE / 2 + 100 - pos);
    }
    if (pos >= SIZE - num) {
        dp[pos][num] = dfs(pos + 1, num - 1) + move;
    } else {
        dp[pos][num] = Math.min(dfs(pos + 1, num), dfs(pos + 1, num - 1) + move);
    }
    return dp[pos][num];
}