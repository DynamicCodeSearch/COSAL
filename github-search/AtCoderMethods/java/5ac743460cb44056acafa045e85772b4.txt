public static void main(String[] args) {
    IO io = new IO();
    int n = io.nextInt();
    int s1 = io.nextInt() - 1;
    int s2 = io.nextInt() - 1;
    long[] x = new long[n];
    long[] y = new long[n];
    for (int i = 0; i < n; i++) {
        int xraw = io.nextInt();
        int yraw = io.nextInt();
        x[i] = xraw + yraw;
        y[i] = xraw - yraw;
    }
    long d = Math.max(Math.abs(x[s1] - x[s2]), Math.abs(y[s1] - y[s2]));
    UnionFind uf = new UnionFind(n);
    int[] degree = new int[n];
    solveHalf(n, x, y, d, d, degree, uf);
    solveHalf(n, y, x, d, d - 1, degree, uf);
    long sum = 0;
    for (int i = 0; i < n; i++) {
        if (uf.isConnected(s1, i)) {
            sum += degree[i];
        }
    }
    System.out.println(sum / 2);
}