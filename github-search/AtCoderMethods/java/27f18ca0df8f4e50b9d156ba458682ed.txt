private static int dfs(int currentNode, int N, boolean[] visited) {
    boolean allVisited = true;
    for (int i = 0; i < N; i++) {
        if (!visited[i]) {
            allVisited = false;
        }
    }
    if (allVisited) {
        return 1;
    }
    int ans = 0;
    for (int i = 0; i < N; i++) {
        if (!graph[currentNode][i]) {
            continue;
        }
        if (visited[i]) {
            continue;
        }
        visited[i] = true;
        ans += dfs(i, N, Arrays.copyOf(visited, visited.length));
        visited[i] = false;
    }
    return ans;
}