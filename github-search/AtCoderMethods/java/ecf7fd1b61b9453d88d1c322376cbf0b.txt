public void solve(int testNumber, MyInput in, PrintWriter out) {
    int n = in.nextInt();
    int[][] a = in.nextIntArray2D(n, n);
    int[][] con = new int[n][n];
    int[][] dist = new int[n][n];
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            dist[i][j] = a[i][j];
        }
    }
    for (int k = 0; k < n; k++) {
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                dist[i][j] = Math.min(dist[i][j], dist[i][k] + dist[k][j]);
            }
        }
    }
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            if (dist[i][j] != a[i][j]) {
                out.println(-1);
                return;
            }
        }
    }
    boolean[][] straight = new boolean[n][n];
    for (int i = 0; i < n; i++) {
        con[i][i] = -1;
        Arrays.fill(straight[i], true);
    }
    long ans = 0;
    for (int i = 0; i < n; i++) {
        for (int t = 0; t < n - 1; t++) {
            int min = Integer.MAX_VALUE;
            int idx = -1;
            boolean e = false;
            for (int j = 0; j < n; j++) {
                if (con[i][j] == 0 && min > a[i][j]) {
                    min = a[i][j];
                    idx = j;
                    e = straight[i][j];
                }
            }
            con[i][idx] = e ? 1 : -1;
            if (e) {
                ans += a[i][idx];
            }
            for (int j = 0; j < n; j++) {
                if (con[i][j] == 0) {
                    if (a[i][j] >= a[i][idx] + a[idx][j]) {
                        a[i][j] = a[i][idx] + a[idx][j];
                        straight[i][j] = false;
                    }
                }
            }
        
        }
    }
    out.println(ans / 2);

}