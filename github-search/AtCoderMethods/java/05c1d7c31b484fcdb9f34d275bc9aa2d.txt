public static void main(String[] args) {
    long N = sc.nextInt();
    long K = sc.nextInt();
    if (N == 1) {
        System.out.println(K);
        return;
    }
    ArrayList<Long> divisor = new ArrayList<>();
    for (long i = 2; i * i <= N; i++) {
        if (N % i != 0)
            continue;
        divisor.add(i);
        if (i * i != N) {
            divisor.add(N / i);
        }
    }
    divisor.add(N);
    Collections.sort(divisor);
    HashMap<Long, Long> map = new HashMap<>();
    map.put(1L, K);
    for (long d : divisor) {
        long add = pow(K, (d + 1) / 2) - K;
        for (long i = 2; i * i <= d; i++) {
            if (d % i != 0)
                continue;
            add += MOD - map.get(i);
            if (i * i != d)
                add += MOD - map.get(d / i);
        }
        map.put(d, add % MOD);
    }
    long ans = 0;
    for (long k : map.keySet()) {
        ans += (k % 2 == 0 ? k / 2 : k) * map.get(k);
    }
    System.out.println(ans % MOD);
}