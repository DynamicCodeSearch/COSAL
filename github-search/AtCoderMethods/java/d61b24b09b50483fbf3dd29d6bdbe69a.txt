void solve() {
    int N = sc.nextInt();
    int W = sc.nextInt();
    w = new int[N];
    v = new int[N];
    for (int i = 0; i < N; i++) {
        w[i] = sc.nextInt();
        v[i] = sc.nextInt();
    }
    final long INF = 1L << 58;
    long[][] dp = new long[N + 1][301];
    for (int i = 0; i < dp.length; i++) Arrays.fill(dp[i], -INF);
    dp[0][0] = 0;
    for (int i = 0; i < N; i++) {
        for (int nn = N - 1; nn >= 0; nn--) {
            for (int ww = 0; ww <= 300; ww++) {
                int ww2 = ww + (w[i] - w[0]);
                if (ww2 <= 300)
                    dp[nn + 1][ww2] = max(dp[nn + 1][ww2], dp[nn][ww] + v[i]);
            }
        }
    }
    long ans = 0;
    for (int n = 0; n <= N; n++) {
        long WW = W - (long) n * w[0];
        if (WW < 0)
            continue;
        if (WW > 300)
            WW = 300;
        for (int w = 0; w <= WW; w++) ans = max(ans, dp[n][w]);
    }
    out.println(ans);
}