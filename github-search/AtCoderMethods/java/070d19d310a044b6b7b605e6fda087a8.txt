void run() {
    int h = ni();
    int w = ni();
    int n = ni();
    HashMap<Point, Integer> map = new HashMap<>();
    for (int i = 0; i < n; ++i) {
        int a = ni();
        int b = ni();
        for (int x = 0; x < 3; ++x) {
            for (int y = 0; y < 3; ++y) {
                int ny = a - y;
                int nx = b - x;
                if (nx < 1 || w - 2 < nx || ny < 1 || h - 2 < ny) {
                    continue;
                }
                Point p = new Point(nx, ny);
                if (map.containsKey(p)) {
                    map.put(p, map.get(p) + 1);
                } else {
                    map.put(p, 1);
                }
            }
        }
    }
    long cnt = 0;
    long[] ans = new long[10];
    for (Point ite : map.keySet()) {
        
        int sub = map.get(ite);
        ++cnt;
        ++ans[sub];
    }
    ans[0] = (long) (w - 2) * (long) (h - 2) - cnt;
    LongStream.of(ans).forEach(System.out::println);
}