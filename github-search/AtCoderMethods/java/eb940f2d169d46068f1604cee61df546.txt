public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int[][] D = new int[N][N];
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
            D[i][j] = sc.nextInt();
        }
    }
    int[][] dp = new int[N][N];
    dp[0][0] = D[0][0];
    for (int j = 1; j < N; j++) {
        dp[0][j] = dp[0][j - 1] + D[0][j];
    }
    for (int i = 1; i < N; i++) {
        dp[i][0] = dp[i - 1][0] + D[i][0];
        for (int j = 1; j < N; j++) {
            dp[i][j] = dp[i - 1][j] + dp[i][j - 1] - dp[i - 1][j - 1] + D[i][j];
        }
    }
    int[] tasteMax = new int[N * N + 1];
    for (int c = 1; c < N * N + 1; c++) {
        for (int k = 1; k <= N; k++) {
            int d = Math.min(N, c / k);
            for (int i = 0; i < N - k + 1; i++) {
                for (int j = 0; j < N - d + 1; j++) {
                    if (i + k - 1 >= 0 && j + d - 1 >= 0) {
                        int taste = 0;
                        if (i == 0) {
                            if (j == 0) {
                                taste = dp[i + k - 1][j + d - 1];
                            } else {
                                taste = dp[i + k - 1][j + d - 1] - dp[i + k - 1][j - 1];
                            }
                        } else if (j == 0) {
                            taste = dp[i + k - 1][j + d - 1] - dp[i - 1][j + d - 1];
                        } else {
                            taste = dp[i + k - 1][j + d - 1] - dp[i + k - 1][j - 1] - dp[i - 1][j + d - 1] + dp[i - 1][j - 1];
                        }
                        tasteMax[c] = Math.max(tasteMax[c], taste);
                    }
                }
            }
        }
    }
    int Q = sc.nextInt();
    for (int i = 0; i < Q; i++) {
        int p = sc.nextInt();
        System.out.println(tasteMax[p]);
    }
}