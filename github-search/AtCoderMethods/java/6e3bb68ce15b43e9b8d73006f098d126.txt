public static Edge[][] compileWD(int n, List<Edge> edges) {
    Edge[][] g = new Edge[n][];
    
    for (int i = edges.size() - 1; i >= 0; i--) {
        Edge origin = edges.get(i);
        Edge clone = new Edge(origin.to, origin.from, origin.capacity);
        clone.flow = origin.capacity;
        clone.complement = origin;
        clone.cloned = true;
        origin.complement = clone;
        edges.add(clone);
    }
    int[] p = new int[n];
    for (Edge e : edges) p[e.from]++;
    for (int i = 0; i < n; i++) g[i] = new Edge[p[i]];
    for (Edge e : edges) g[e.from][--p[e.from]] = e;
    return g;
}