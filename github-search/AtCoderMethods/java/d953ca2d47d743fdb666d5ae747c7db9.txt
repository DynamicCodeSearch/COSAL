int[][] doubling(long l) {
    final int n = x.length;
    for (int i = 1; i < n; i++) {
        x[i] -= x[0];
    }
    x[0] = 0;
    int[][] np = new int[20][n];
    for (int i = 0; i < n; i++) {
        int left = i, right = n - 1;
        int ans = i;
        while (left <= right) {
            final int mid = (left + right) / 2;
            if (dist(i, mid) <= l) {
                ans = mid;
                left = mid + 1;
            } else {
                right = mid - 1;
            }
        }
        np[0][i] = ans;
    }
    for (int i = 1; i < 20; i++) {
        for (int j = 0; j < n; j++) {
            np[i][j] = np[i - 1][np[i - 1][j]];
        }
    }
    return np;
}