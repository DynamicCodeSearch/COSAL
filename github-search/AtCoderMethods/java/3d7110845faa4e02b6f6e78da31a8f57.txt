long dfs(int idx, int justAdd, int justXor, int carry) {
    if (idx == 0) {
        if (carry == 1)
            return 1;
        else if ((justAdd == 1 || justXor == 1) && !get(N, 0))
            return 1;
        else
            return 2;
    }
    if (dp[idx][justAdd][justXor][carry] != -1) {
        return dp[idx][justAdd][justXor][carry];
    }
    long ans = 0;
    if (justAdd == 1 && justXor == 1) {
        if (get(N, idx)) {
            if (carry == 1) {
                ans = mod(dfs(idx - 1, 0, 0, 0) + dfs(idx - 1, 1, 0, 1) + dfs(idx - 1, 0, 1, 1));
            } else {
                ans = mod(dfs(idx - 1, 0, 0, 0) + dfs(idx - 1, 1, 1, 0) + dfs(idx - 1, 1, 0, 1));
            }
        } else {
            ans = dfs(idx - 1, 1, 1, 0);
        }
    } else if (justAdd == 1 && justXor == 0) {
        if (get(N, idx)) {
            if (carry == 1) {
                ans = mod(dfs(idx - 1, 0, 0, 0) + dfs(idx - 1, 0, 0, 1) + dfs(idx - 1, 1, 0, 1));
            } else {
                ans = mod(dfs(idx - 1, 0, 0, 0) + dfs(idx - 1, 1, 0, 0) + dfs(idx - 1, 1, 0, 1));
            }
        } else {
            if (carry == 1) {
                ans = mod(dfs(idx - 1, 1, 0, 0) + dfs(idx - 1, 1, 0, 1));
            } else {
                ans = dfs(idx - 1, 1, 0, 0);
            }
        }
    } else if (justAdd == 0 && justXor == 1) {
        if (get(N, idx)) {
            if (carry == 1) {
                ans = mod(dfs(idx - 1, 0, 0, 0) + dfs(idx - 1, 0, 0, 1) + dfs(idx - 1, 0, 1, 1));
            } else {
                ans = mod(dfs(idx - 1, 0, 0, 0) + dfs(idx - 1, 0, 0, 1) + dfs(idx - 1, 0, 1, 0));
            }
        } else {
            if (carry == 1) {
                ans = mod(dfs(idx - 1, 0, 1, 0) + dfs(idx - 1, 0, 1, 1));
            } else {
                ans = mod(dfs(idx - 1, 0, 1, 0) + dfs(idx - 1, 0, 1, 1));
            }
        }
    } else {
        if (carry == 1) {
            ans = mod(dfs(idx - 1, 0, 0, 0) + 2 * dfs(idx - 1, 0, 0, 1));
        } else {
            ans = mod(2 * dfs(idx - 1, 0, 0, 0) + dfs(idx - 1, 0, 0, 1));
        }
    }
    return dp[idx][justAdd][justXor][carry] = ans;
}