private void solve(Scanner sc) {
    N = sc.nextInt();
    M = sc.nextInt();
    int[] a = new int[M];
    int[] b = new int[M];
    int[] c = new int[M];
    for (int i = 0; i < M; ++i) {
        a[i] = sc.nextInt() - 1;
        b[i] = sc.nextInt() - 1;
        c[i] = sc.nextInt();
    }
    long[][] dist = new long[N][N];
    
    for (int i = 0; i < N; ++i) {
        for (int j = 0; j < N; ++j) {
            if (i == j) {
                dist[i][j] = 0;
            } else {
                dist[i][j] = Integer.MAX_VALUE;
            }
        }
    }
    for (int i = 0; i < M; ++i) {
        dist[a[i]][b[i]] = Math.min(dist[a[i]][b[i]], c[i]);
        dist[b[i]][a[i]] = Math.min(dist[b[i]][a[i]], c[i]);
    }
    
    for (int k = 0; k < N; ++k) {
        for (int i = 0; i < N; ++i) {
            for (int j = 0; j < N; ++j) {
                dist[i][j] = Math.min(dist[i][k] + dist[k][j], dist[i][j]);
            }
        }
    }
    int ans = M;
    for (int i = 0; i < M; ++i) {
        boolean shortest = false;
        for (int j = 0; j < N; ++j) {
            if (dist[j][a[i]] + c[i] == dist[j][b[i]]) {
                shortest = true;
                break;
            }
        }
        if (shortest) {
            --ans;
        }
    }
    _out.println(ans);
}