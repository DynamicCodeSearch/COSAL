public void run() throws FileNotFoundException {
    Scanner sc = new Scanner();
    int n = sc.nextInt();
    int m = sc.nextInt();
    int[] p = new int[m];
    int[] q = new int[m];
    int[] c = new int[m];
    ArrayList<Integer>[] g = new ArrayList[n + m];
    ds = new DJSet(m);
    for (int i = 0; i < n + m; ++i) {
        g[i] = new ArrayList<>();
    }
    for (int i = 0; i < m; ++i) {
        p[i] = sc.nextInt();
        q[i] = sc.nextInt();
        c[i] = sc.nextInt();
        --p[i];
        --q[i];
    }
    c = shrink(c);
    for (int i = 0; i < m; ++i) {
        getid(p[i], q[i], c[i]);
    }
    for (int i = 0; i < m; ++i) {
        int cid = getid(p[i], q[i], c[i]) + n;
        g[p[i]].add(cid);
        g[cid].add(p[i]);
        g[q[i]].add(cid);
        g[cid].add(q[i]);
    }
    f.clear();
    ArrayDeque<Integer> que = new ArrayDeque<>();
    int[] d = new int[n + m];
    Arrays.fill(d, Integer.MAX_VALUE / 10);
    que.add(0);
    d[0] = 0;
    while (!que.isEmpty()) {
        int v = que.pollFirst();
        for (int u : g[v]) {
            if (d[u] > d[v] + 1) {
                d[u] = d[v] + 1;
                que.addLast(u);
                if (u == n - 1) {
                    if (d[n - 1] % 2 != 0) {
                        throw new AssertionError();
                    }
                    System.out.println(d[n - 1] / 2);
                    return;
                }
            }
        }
    }
    System.out.println(-1);
}