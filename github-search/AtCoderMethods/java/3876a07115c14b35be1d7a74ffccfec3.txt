public static int[] dijk(int[][] g, int from) {
    int n = g.length;
    int[] td = new int[n];
    Arrays.fill(td, Integer.MAX_VALUE);
    td[from] = 0;
    int[] pre = new int[n];
    Arrays.fill(pre, -1);
    boolean[] fixed = new boolean[n];
    for (int i = 0; i < n; i++) {
        int min = Integer.MAX_VALUE;
        int arg = -1;
        for (int j = 0; j < n; j++) {
            if (!fixed[j] && td[j] < min) {
                min = td[j];
                arg = j;
            }
        }
        fixed[arg] = true;
        for (int j = 0; j < n; j++) {
            td[j] = Math.min(td[j], td[arg] + g[arg][j]);
        }
    }
    return td;
}