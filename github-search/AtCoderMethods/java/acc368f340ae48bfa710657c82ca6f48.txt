private static void solve() {
    int n = ni();
    char[][] map = new char[2][n];
    map[0] = ns();
    map[1] = ns();
    long mod = 1000000007;
    long ret = 1;
    int[] a = new int[n];
    int ptr = 0;
    for (int i = 0; i < n; i++) {
        if (map[0][i] == map[1][i])
            a[ptr++] = 0;
        else {
            a[ptr++] = 1;
            i++;
        }
    }
    a = Arrays.copyOf(a, ptr);
    if (a[0] == 0) {
        ret = 3;
    } else {
        ret = 6;
    }
    for (int i = 1; i < ptr; i++) {
        if (a[i] == 0) {
            if (a[i - 1] == 0) {
                ret *= 2;
            } else {
            }
        } else {
            if (a[i - 1] == 0) {
                ret *= 2;
            } else {
                ret *= 3;
            }
        }
        ret %= mod;
    }
    out.println(ret);
}