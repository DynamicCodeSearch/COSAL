public void solve() {
    N = nextInt();
    M = nextInt();
    down = new int[N];
    for (int i = 0; i < M; i++) {
        int x = nextInt() - 1;
        int y = nextInt() - 1;
        down[y] |= 1 << x;
    }
    long[] dp = new long[1 << N];
    dp[(1 << N) - 1] = 1;
    
    for (int i = (1 << N) - 1; i >= 0; i--) {
        
        for (int j = 0; j < N; j++) {
            
            if ((i >> j & 1) == 0)
                continue;
            if ((down[j] & i) == 0) {
                dp[i ^ (1 << j)] += dp[i];
            }
        }
    }
    out.println(dp[0]);
}