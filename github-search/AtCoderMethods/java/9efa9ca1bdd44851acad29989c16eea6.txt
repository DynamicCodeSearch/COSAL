
public void run() throws IOException {
    int TEST_CASE = 1;
    while (TEST_CASE-- != 0) {
        int n = io.nextInt();
        int[] a = io.nextIntArray(3 * n);
        long[] max = new long[3 * n];
        long[] min = new long[3 * n];
        Counter<Integer> cnt = new Counter<>();
        Arrays.fill(max, -1L);
        Arrays.fill(min, Long.MAX_VALUE);
        long sum = 0;
        for (int i = 0; i < 3 * n; i++) {
            cnt.add(a[i], 1);
            sum += a[i];
            if (i >= n) {
                sum -= cnt.pollFirst();
            }
            if (i >= n - 1) {
                max[i] = Math.max(i > 0 ? max[i - 1] : 0, sum);
            }
        }
        sum = 0;
        cnt.mp.clear();
        for (int i = 3 * n - 1; i >= 0; i--) {
            cnt.add(a[i], 1);
            sum += a[i];
            if (i < 2 * n) {
                sum -= cnt.pollLast();
            }
            if (i <= 2 * n) {
                min[i] = Math.min(i < 3 * n - 1 ? min[i + 1] : Long.MAX_VALUE, sum);
            }
        }
        
        long ans = Long.MIN_VALUE;
        for (int i = 0; i + 1 < 3 * n; i++) {
            if (min[i + 1] != Long.MAX_VALUE && max[i] != -1) {
                ans = Math.max(ans, max[i] - min[i + 1]);
            }
        }
        io.out.println(ans);
    }
}