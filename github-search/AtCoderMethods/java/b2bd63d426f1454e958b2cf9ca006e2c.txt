static boolean solve(long K, int N) {
    long C = K / N + N - 1;
    long[] A = new long[N];
    for (int i = 0; i < N; i++) {
        A[i] = C;
    }
    for (int i = 0; i < (K % N); i++) {
        long max = 0;
        int p = 0;
        for (int j = 0; j < N; j++) {
            if (A[j] > A[p]) {
                p = j;
                max = A[j];
            }
        }
        for (int j = 0; j < N; j++) {
            if ((A[j] + N + 1 > max) && (A[j] < A[p])) {
                p = j;
            }
        }
        for (int j = 0; j < N; j++) {
            A[j] = A[j] - 1;
        }
        A[p] = A[p] + N + 1;
    }
    for (int i = 0; i < N; i++) {
        if (A[i] < 0) {
            return false;
        }
        if (A[i] > MAX_COUNT) {
            return false;
        }
    }
    System.out.println(N);
    for (int i = 0; i < N; i++) {
        System.out.println(A[i] + " ");
    }
    return true;
}