public static void main(String[] args) {
    long N = sc.nextLong();
    long A = sc.nextLong();
    long B = sc.nextLong();
    long[] h = new long[(int) N];
    long maxA = 0;
    long maxB = 0;
    for (int i = 0; i < N; i++) {
        h[i] = sc.nextLong();
        if ((h[i] - 1) / A + 1 > maxA) {
            maxA = (h[i] - 1) / A + 1;
        }
        if ((h[i] - 1) / B + 1 > maxB) {
            maxB = (h[i] - 1) / B + 1;
        }
    }
    long l = maxA;
    long r = maxB;
    while (l < r) {
        long m = (l + r) / 2;
        
        long cnt = 0;
        for (int i = 0; i < N; i++) {
            if (h[i] - B * m > 0) {
                cnt += (h[i] - B * m - 1) / (A - B) + 1;
            }
        }
        if (cnt <= m) {
            cnt = 0;
            for (int i = 0; i < N; i++) {
                if (h[i] - B * (m - 1) > 0) {
                    cnt += (h[i] - B * (m - 1) - 1) / (A - B) + 1;
                }
            }
            if (cnt > (m - 1)) {
                l = m;
                break;
            } else {
                r = m - 1;
            }
        } else {
            l = m + 1;
        }
    }
    System.out.println(l);
}