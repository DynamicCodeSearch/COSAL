public static void main(String[] args) {
    IO io = new IO();
    int n = io.nextInt();
    int m = io.nextInt();
    Road[] road = new Road[m];
    for (int i = 0; i < m; i++) {
        road[i] = new Road(io.nextInt() - 1, io.nextInt() - 1, io.nextInt());
    }
    Arrays.sort(road, (r1, r2) -> -Integer.compare(r1.y, r2.y));
    int qq = io.nextInt();
    Query[] query = new Query[qq];
    for (int i = 0; i < qq; i++) {
        query[i] = new Query(i, io.nextInt() - 1, io.nextInt());
    }
    Arrays.sort(query, (q1, q2) -> -Integer.compare(q1.w, q2.w));
    UnionFind uf = new UnionFind(n);
    int[] ans = new int[qq];
    int ind = 0;
    for (int i = 0; i < qq; i++) {
        while (ind < m && road[ind].y > query[i].w) {
            uf.union(road[ind].a, road[ind].b);
            ind++;
        }
        ans[query[i].i] = uf.size(query[i].v);
    }
    for (int i = 0; i < qq; i++) {
        io.println(ans[i]);
    }
    io.flush();
}