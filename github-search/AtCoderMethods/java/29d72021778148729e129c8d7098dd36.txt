static void solve() {
    int n = ni();
    int K = ni();
    int[] a = na(n);
    if (Arrays.stream(a).sum() == K) {
        out.println(1);
        return;
    }
    if (Arrays.stream(a).sum() == 0) {
        out.println(0);
        return;
    }
    
    long[] pre = new long[n + 1];
    Arrays.fill(pre, Long.MAX_VALUE / 10);
    pre[0] = 0;
    long[] cum = new long[n + 1];
    for (int i = 0; i < n; i++) cum[i + 1] = cum[i] + a[i];
    for (int i = 0; i < n; i++) {
        for (int j = n - 1; j >= 0; j--) {
            
            if (pre[j] == Long.MAX_VALUE / 10)
                continue;
            long x = cum[i] == 0 ? 1 : (long) pre[j] * a[i] / cum[i] + 1;
            if (x <= a[i]) {
                pre[j + 1] = Math.min(pre[j + 1], pre[j] + x);
            }
        }
    
    }
    for (int i = n; i >= 0; i--) {
        if (pre[i] <= K) {
            out.println(i);
            return;
        }
    }
}