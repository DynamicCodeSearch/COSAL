static void search(int h, int w) {
    boolean isMax = true;
    if (h + 1 < H && a[h][w] < a[h + 1][w]) {
        isMax = false;
        if (paths[h + 1][w] == 0) {
            paths[h + 1][w]++;
            search(h + 1, w);
            paths[h][w] += paths[h + 1][w] % mod;
        } else {
            paths[h][w] += paths[h + 1][w] % mod;
        }
    }
    if (h - 1 >= 0 && a[h][w] < a[h - 1][w]) {
        isMax = false;
        if (paths[h - 1][w] == 0) {
            paths[h - 1][w]++;
            search(h - 1, w);
            paths[h][w] += paths[h - 1][w] % mod;
        } else {
            paths[h][w] += paths[h - 1][w] % mod;
        }
    }
    if (w + 1 < W && a[h][w] < a[h][w + 1]) {
        isMax = false;
        if (paths[h][w + 1] == 0) {
            paths[h][w + 1]++;
            search(h, w + 1);
            paths[h][w] += paths[h][w + 1] % mod;
        } else {
            paths[h][w] += paths[h][w + 1] % mod;
        }
    }
    if (w - 1 >= 0 && a[h][w] < a[h][w - 1]) {
        isMax = false;
        if (paths[h][w - 1] == 0) {
            paths[h][w - 1]++;
            search(h, w - 1);
            paths[h][w] += paths[h][w - 1] % mod;
        } else {
            paths[h][w] += paths[h][w - 1] % mod;
        }
    }
    if (isMax) {
        paths[h][w] = 1;
    }
}