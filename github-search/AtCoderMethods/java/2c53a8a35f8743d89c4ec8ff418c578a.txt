static void solve() {
    int n = ni();
    int[][] a = new int[n][];
    int[][] b = new int[n][];
    for (int i = 0; i < n; i++) {
        a[i] = na(n);
        b[i] = Arrays.copyOf(a[i], n);
    }
    for (int k = 0; k < n; k++) {
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (b[i][j] > b[i][k] + b[k][j]) {
                    b[i][j] = b[i][k] + b[k][j];
                }
            }
        }
    }
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            if (a[i][j] != b[i][j]) {
                out.println(-1);
                return;
            }
        }
    }
    long ret = 0;
    for (int i = 0; i < n; i++) {
        inner: for (int j = i + 1; j < n; j++) {
            for (int k = 0; k < n; k++) {
                if (k != i && k != j) {
                    if (a[i][j] == a[i][k] + a[k][j])
                        continue inner;
                }
            }
            ret += a[i][j];
        }
    }
    out.println(ret);
}