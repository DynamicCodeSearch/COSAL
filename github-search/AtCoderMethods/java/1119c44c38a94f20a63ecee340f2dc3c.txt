static void solve() {
    int n = ni();
    int[][] xy = new int[n][];
    int max = -1;
    int min = Integer.MAX_VALUE;
    for (int i = 0; i < n; i++) {
        xy[i] = na(2);
        if (xy[i][0] > xy[i][1]) {
            int d = xy[i][0];
            xy[i][0] = xy[i][1];
            xy[i][1] = d;
        }
        for (int u = 0; u < 2; u++) {
            if (xy[i][u] > max)
                max = xy[i][u];
            if (xy[i][u] < min)
                min = xy[i][u];
        }
    }
    
    int lmin = Integer.MAX_VALUE;
    for (int i = 0; i < n; i++) {
        lmin = Math.min(lmin, xy[i][1]);
    }
    int rmax = 0;
    for (int i = 0; i < n; i++) {
        rmax = Math.max(rmax, xy[i][0]);
    }
    long ans = (long) (max - lmin) * (rmax - min);
    long[] es = new long[2 * n];
    int p = 0;
    for (int i = 0; i < n; i++) {
        es[p++] = (long) xy[i][0] << 32 | 0 << 20 | i;
        es[p++] = (long) xy[i][1] << 32 | 1 << 20 | i;
    }
    Arrays.sort(es);
    int h = rmax;
    for (long e : es) {
        ans = Math.min(ans, (long) (max - min) * (h - (e >>> 32)));
        h = Math.max(h, xy[(int) (e & (1 << 20) - 1)][1]);
        if (e << ~20 < 0)
            break;
    }
    out.println(ans);

}