static void solve() {
    int n = in.nextInt();
    int m = in.nextInt();
    int[] a = new int[m];
    int[] b = new int[m];
    int[] y = new int[m];
    for (int i = 0; i < m; i++) {
        a[i] = in.nextInt() - 1;
        b[i] = in.nextInt() - 1;
        y[i] = in.nextInt();
    }
    int q = in.nextInt();
    int[][] h = new int[q][3];
    for (int i = 0; i < q; i++) {
        h[i][0] = in.nextInt() - 1;
        h[i][1] = in.nextInt();
        h[i][2] = i;
    }
    Arrays.sort(h, new Comparator<int[]>() {

        public int compare(int[] a, int[] b) {
            if (a[1] != b[1])
                return b[1] - a[1];
            return a[0] - b[0];
        }
    });
    ans = new int[q];
    kruskal(a, b, y, n, h, q);
    for (int i = 0; i < q; i++) {
        out.println(ans[i]);
    }
}