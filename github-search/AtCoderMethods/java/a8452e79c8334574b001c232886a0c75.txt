@SuppressWarnings("unchecked")
public static void main(String[] args) throws Exception {
    int n = sc.nextInt(), w = sc.nextInt();
    long ctr = 0;
    a = new Pair[n];
    for (int i = 0; i < n; i++) {
        a[i] = new Pair(sc.nextInt(), sc.nextInt());
        if (m1.get(a[i].a) == null) {
            m1.put(a[i].a, ctr);
            m2.put(ctr++, a[i].a);
        }
    }
    while (m2.size() < 4) {
        m1.put(0L, ctr);
        m2.put(ctr++, 0L);
    }
    int m = 4;
    al = new ArrayList[m];
    for (int i = 0; i < m; i++) {
        al[i] = new ArrayList<Long>();
    }
    for (int i = 0; i < n; i++) {
        int curr = (int) (long) m1.get(a[i].a);
        al[curr].add(a[i].b);
    }
    long[][] pre = new long[m][n + 1];
    for (int i = 0; i < m; i++) {
        Collections.sort(al[i], Collections.reverseOrder());
        long sum = 0;
        for (int j = 0; j < al[i].size(); j++) {
            sum += al[i].get(j);
            pre[i][j + 1] = sum;
        }
    }
    long res = 0;
    for (int i = 0; i <= al[0].size(); i++) {
        for (int j = 0; j <= al[1].size(); j++) {
            for (int k = 0; k <= al[2].size(); k++) {
                long val1 = (m2.get(0L) * i) + (m2.get(1L) * j) + (m2.get(2L) * k);
                if (val1 <= w) {
                    long now = w - val1;
                    long curr = pre[0][i] + pre[1][j] + pre[2][k];
                    res = Math.max(res, curr);
                    for (int x = 0; x <= al[3].size(); x++) {
                        long now2 = (x * m2.get(3L));
                        if (now2 <= now) {
                            res = Math.max(res, curr + pre[3][x]);
                        }
                    }
                }
            }
        }
    }
    out.println(res);
    out.close();
}