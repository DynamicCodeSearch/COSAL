void solve() {
    int n = ni(), m = ni();
    int[] c = new int[n];
    for (int i = 0; i < m; ++i) {
        int x = ni() - 1;
        int y = ni() - 1;
        c[y] |= 1 << x;
    }
    long[][] dp = new long[n + 1][1 << n];
    dp[0][0] = 1;
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < 1 << n; ++j) {
            if (dp[i][j] == 0)
                continue;
            for (int k = 0; k < n; ++k) {
                if ((j & (1 << k)) != 0)
                    continue;
                if ((j & c[k]) != c[k])
                    continue;
                dp[i + 1][j | (1 << k)] += dp[i][j];
            }
        }
    }
    out.println(dp[n][(1 << n) - 1]);
}