private static long CLong(int n, int r) {
    if (r > n) {
        return 0;
    }
    if (n > LIMIT) {
        throw new IllegalArgumentException(Integer.toString(n));
    }
    if (cache == null) {
        cache = new long[LIMIT + 1][];
        cache[0] = new long[1];
        cache[0][0] = 1;
        to = 0;
    }
    if (cache[n] == null) {
        for (int i = to + 1; i <= n; i++) {
            cache[i] = new long[i + 1];
            for (int j = 0; j <= i; j++) {
                if (j == 0 || j == i) {
                    cache[i][j] = 1;
                } else {
                    if (Long.MAX_VALUE - cache[i - 1][j - 1] < cache[i - 1][j]) {
                        throw new IllegalArgumentException("Overflow");
                    } else {
                        cache[i][j] = cache[i - 1][j - 1] + cache[i - 1][j];
                    }
                }
            }
        }
        to = n;
    }
    return cache[n][r];
}