void solve() throws IOException {
    int n = nextInt();
    int k = nextInt();
    Point[] points = new Point[n];
    TreeSet<Long> setx = new TreeSet<>();
    TreeSet<Long> sety = new TreeSet<>();
    for (int i = 0; i < n; i++) {
        points[i] = new Point(nextLong(), nextLong());
        setx.add(points[i].x);
        sety.add(points[i].y);
    }
    long min = Long.MAX_VALUE;
    for (Long x1 : setx) {
        for (Long x2 : setx) {
            for (Long y1 : sety) {
                for (Long y2 : sety) {
                    long mxx = Math.max(x1, x2);
                    long mnx = Math.min(x1, x2);
                    long mxy = Math.max(y1, y2);
                    long mny = Math.min(y1, y2);
                    int cnt = 0;
                    for (int q = 0; q < n; q++) {
                        if (mnx <= points[q].x && points[q].x <= mxx && mny <= points[q].y && points[q].y <= mxy) {
                            cnt++;
                        }
                    }
                    if (cnt >= k) {
                        min = Math.min(min, (mxx - mnx) * (mxy - mny));
                    }
                }
            }
        }
    }
    out.println(min);
}