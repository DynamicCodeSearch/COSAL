public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    long N = sc.nextLong();
    long A = sc.nextLong();
    long B = sc.nextLong();
    long C = sc.nextLong();
    long D = sc.nextLong();
    long[] inv = new long[1001];
    inv[1] = 1;
    for (int i = 2; i < inv.length; ++i) {
        inv[i] = MODULO - inv[(int) (MODULO % i)] * (MODULO / i) % MODULO;
    }
    long[] fac = new long[1001];
    long[] invfac = new long[1001];
    fac[0] = 1;
    invfac[0] = 1;
    for (int i = 1; i <= 1000; ++i) {
        fac[i] = (fac[i - 1] * i) % MODULO;
        invfac[i] = (invfac[i - 1] * inv[i]) % MODULO;
    }
    long[] dp = new long[1001];
    dp[0] = 1;
    for (long i = A; i <= B; ++i) {
        long[] ndp = Arrays.copyOf(dp, dp.length);
        for (int j = 0; j < 1000; ++j) {
            if (dp[j] == 0)
                continue;
            for (long k = C; i * k + j <= N && k <= D; ++k) {
                ndp[(int) (i * k + j)] += dp[j] * fac[(int) (N - j)] % MODULO * invfac[(int) (N - j - i * k)] % MODULO * invfac[(int) k] % MODULO * pow(invfac[(int) i], k) % MODULO;
                ndp[(int) (i * k + j)] %= MODULO;
            }
        }
        dp = ndp;
    }
    System.out.println(dp[(int) N]);
}