void solve() throws IOException {
    
    int n = nextInt();
    int k = nextInt();
    int[] a = new int[n];
    int[] ways = new int[k + 1];
    ways[0] = 1;
    for (int i = 0; i < n; i++) {
        a[i] = nextInt();
        a[i] = Math.min(a[i], k);
        for (int j = k; j >= a[i]; j--) {
            ways[j] += ways[j - a[i]];
            if (ways[j] >= P) {
                ways[j] -= P;
            }
        }
    }
    int ret = 0;
    outer: for (int i = 0; i < n; i++) {
        int[] waysWO = ways.clone();
        for (int j = a[i]; j <= k; j++) {
            waysWO[j] -= waysWO[j - a[i]];
            if (waysWO[j] < 0) {
                waysWO[j] += P;
            }
        }
        for (int j = k - a[i]; j < k; j++) {
            if (waysWO[j] > 0) {
                continue outer;
            }
        }
        ret++;
    }
    out.println(ret);
}