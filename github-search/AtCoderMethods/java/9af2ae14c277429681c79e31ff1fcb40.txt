void solve() {
    int n = ni();
    int[] a = na(n + 1);
    int[] t = new int[n + 1];
    int d = 0, l = -1, r = -1;
    for (int i : a) {
        if (++t[i] == 2) {
            d = i;
        }
    }
    for (int i = 0; i < a.length; ++i) {
        if (d == a[i]) {
            if (l == -1) {
                l = i;
            } else {
                r = i;
            }
        }
    }
    int p = n - r + l;
    long mod = (long) 10e8 + 7;
    Combination2 c = new Combination2(n + 2, mod);
    for (int i = 1; i <= n + 1; ++i) {
        long v = c.combination(n + 1, i);
        if (p >= i - 1) {
            v -= c.combination(p, i - 1);
            if (v < 0) {
                v += mod;
            }
        }
        out.println(v);
    }
}