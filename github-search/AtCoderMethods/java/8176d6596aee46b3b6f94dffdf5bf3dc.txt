public static void main(String[] args) {
    InputReader in = new InputReader(System.in);
    PrintWriter out = new PrintWriter(System.out);
    long n = in.nextInt();
    long k = in.nextInt();
    long[] divisors = new long[2000];
    int di = 0;
    for (long i = 1; i * i <= n; i++) {
        if (n % i == 0) {
            long j = n / i;
            divisors[di++] = i;
            if (i < j) {
                divisors[di++] = j;
            }
        }
    }
    divisors = Arrays.copyOf(divisors, di);
    Arrays.sort(divisors);
    long[] ptn = new long[di];
    for (int i = 0; i < di; i++) {
        long cycle = divisors[i];
        long A = pow(k, (cycle + 1) / 2);
        for (int j = 0; j < i; j++) {
            if (cycle % divisors[j] == 0) {
                A = (A - ptn[j] + MOD) % MOD;
            }
        }
        ptn[i] = A;
    }
    long total = 0;
    for (int i = 0; i < di; i++) {
        long cycle = divisors[i];
        total += ptn[i] * (cycle % 2 == 0 ? cycle / 2 : cycle) % MOD;
    }
    total %= MOD;
    out.println(total);
    out.flush();
}