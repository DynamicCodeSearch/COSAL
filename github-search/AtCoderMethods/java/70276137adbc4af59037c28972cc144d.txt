static void solve() {
    int n = ni();
    int[] a = na(n + 1);
    int x = 0;
    for (int v : a) {
        x ^= v;
    }
    for (int i = 1; i <= n; i++) {
        x ^= i;
    }
    int[] ps = new int[2];
    int p = 0;
    for (int i = 0; i <= n; i++) {
        if (a[i] == x) {
            ps[p++] = i;
        }
    }
    int mod = 1000000007;
    int[][] fif = enumFIF(300000, mod);
    for (int k = 1; k <= n + 1; k++) {
        long ans = C(n + 1, k, mod, fif) - C(ps[0] + (n + 1 - ps[1]) - 1, k - 1, mod, fif);
        if (ans < 0)
            ans += mod;
        out.println(ans);
    }
}