private static void solve() {
    int n = sc.nextInt();
    Map<Integer, Integer> tm = new TreeMap<>();
    for (int i = 0; i < n; i++) {
        int a = sc.nextInt();
        if (!tm.containsKey(a)) {
            tm.put(a, 1);
        } else {
            tm.put(a, tm.get(a) + 1);
        }
    }
    List<Integer> r = new ArrayList<>();
    List<Integer> c = new ArrayList<>();
    for (Entry<Integer, Integer> e : tm.entrySet()) {
        if (e.getValue() > 1) {
            r.add(e.getKey());
            c.add(e.getValue());
        }
    }
    if (c.size() > 0 && c.get(c.size() - 1) >= 4) {
        pr.println((long) r.get(r.size() - 1) * r.get(r.size() - 1));
    } else if (r.size() < 2) {
        pr.println(0);
    } else {
        long s = (long) r.get(r.size() - 1) * r.get(r.size() - 2);
        pr.println(s);
    }
}