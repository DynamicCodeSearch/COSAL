public void solve() {
    N = nextInt();
    K = nextInt();
    A = new int[N];
    for (int i = 0; i < N; i++) {
        A[i] = nextInt();
    }
    int ans = 0;
    boolean[][] a1 = new boolean[N][K];
    boolean[][] a2 = new boolean[N][K];
    a1[0][0] = true;
    for (int i = 0; i < N - 1; i++) {
        for (int j = 0; j < K; j++) {
            if (a1[i][j]) {
                a1[i + 1][j] = true;
                if (j + A[i] < K) {
                    a1[i + 1][j + A[i]] = true;
                }
            }
        }
    }
    a2[N - 1][0] = true;
    for (int i = N - 1; i > 0; i--) {
        for (int j = 0; j < K; j++) {
            if (a2[i][j]) {
                a2[i - 1][j] = true;
                if (j + A[i] < K) {
                    a2[i - 1][j + A[i]] = true;
                }
            }
        }
    }
    int[][] bit2 = new int[N][K + 1];
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < K; j++) {
            bit2[i][j + 1] = bit2[i][j];
            if (a2[i][j]) {
                bit2[i][j + 1]++;
            }
        }
    }
    for (int i = 0; i < N; i++) {
        if (A[i] >= K)
            continue;
        int kk = K - A[i];
        boolean flg = false;
        for (int j = 0; j < K; j++) {
            if (a1[i][j]) {
                if (bit2[i][K - j] - bit2[i][Math.max(kk - j, 0)] > 0) {
                    flg = true;
                    break;
                }
            }
        }
        if (!flg) {
            ans++;
        }
    }
    out.println(ans);
}