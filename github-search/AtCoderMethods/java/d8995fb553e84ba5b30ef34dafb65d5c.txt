boolean can(int bit) {
    boolean[] sheep = new boolean[n];
    sheep[0] = (bit & 1) == 0;
    sheep[1] = (bit & 2) == 0;
    for (int i = 2; i <= n + 1; i++) {
        if (sheep[(i - 1) % n] ^ cs[(i - 1) % n] == 'x') {
            
            sheep[i % n] = sheep[i - 2];
        } else {
            sheep[i % n] = !sheep[i - 2];
        }
    }
    if (sheep[0] != ((bit & 1) == 0))
        return false;
    if (sheep[1] != ((bit & 2) == 0))
        return false;
    ans = new char[n];
    for (int i = 0; i < n; i++) ans[i] = sheep[i] ? 'S' : 'W';
    return true;
}