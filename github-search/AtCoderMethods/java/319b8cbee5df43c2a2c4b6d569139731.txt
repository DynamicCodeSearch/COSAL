public static void main(String[] args) {
    FastScanner sc = new FastScanner();
    PrintWriter out = new PrintWriter(System.out);
    int n = sc.nextInt();
    Node[] nodes = new Node[n];
    for (int i = 0; i < n; i++) {
        nodes[i] = new Node(i);
    }
    for (int i = 0; i < n - 1; i++) {
        int a = sc.nextInt() - 1;
        int b = sc.nextInt() - 1;
        nodes[a].nexts.add(nodes[b]);
        nodes[b].nexts.add(nodes[a]);
    }
    int[] mass = new int[n];
    Set<Node> black = new HashSet<>();
    black.add(nodes[0]);
    Set<Node> white = new HashSet<>();
    white.add(nodes[n - 1]);
    Set<Node> tmp = new HashSet<>();
    while (!black.isEmpty() || !white.isEmpty()) {
        tmp.clear();
        for (Node node : black) {
            if (mass[node.id] != 0)
                continue;
            mass[node.id] = 1;
            for (Node next : node.nexts) {
                if (mass[next.id] == 0) {
                    tmp.add(next);
                }
            }
        }
        black.clear();
        black.addAll(tmp);
        tmp.clear();
        for (Node node : white) {
            if (mass[node.id] != 0)
                continue;
            mass[node.id] = -1;
            for (Node next : node.nexts) {
                if (mass[next.id] == 0) {
                    tmp.add(next);
                }
            }
        }
        white.clear();
        white.addAll(tmp);
    }
    int total = 0;
    for (int i = 0; i < n; i++) {
        total += mass[i];
    }
    out.println(total > 0 ? "Fennec" : "Snuke");
    out.flush();
}