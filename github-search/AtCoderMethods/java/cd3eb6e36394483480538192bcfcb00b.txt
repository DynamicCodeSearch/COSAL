private void solve(Scanner sc) {
    int N = sc.nextInt();
    int M = sc.nextInt();
    int[] a = new int[M];
    int[] b = new int[M];
    int[] c = new int[M];
    for (int i = 0; i < M; ++i) {
        a[i] = sc.nextInt() - 1;
        b[i] = sc.nextInt() - 1;
        c[i] = sc.nextInt() * -1;
    }
    
    long[] dist = new long[N];
    Arrays.fill(dist, Long.MAX_VALUE);
    dist[0] = 0;
    for (int i = 0; i < N - 1; ++i) {
        for (int j = 0; j < M; ++j) {
            if (dist[a[j]] == Long.MAX_VALUE) {
                continue;
            }
            if (dist[b[j]] > dist[a[j]] + c[j]) {
                dist[b[j]] = dist[a[j]] + c[j];
            }
        }
    }
    long ans = -dist[N - 1];
    boolean[] neg = new boolean[N];
    for (int i = 0; i < N; ++i) {
        for (int j = 0; j < M; ++j) {
            if (dist[a[j]] == Long.MAX_VALUE) {
                continue;
            }
            if (dist[b[j]] > dist[a[j]] + c[j]) {
                dist[b[j]] = dist[a[j]] + c[j];
                neg[b[j]] = true;
            }
            if (neg[a[j]]) {
                neg[b[j]] = true;
            }
        }
    }
    if (neg[N - 1]) {
        _out.println("inf");
    } else {
        _out.println(ans);
    }
}