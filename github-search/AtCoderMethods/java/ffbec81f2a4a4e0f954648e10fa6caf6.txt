public void solve() {
    int N = io.ri();
    for (int i = 0; i < N; i++) gr.add(new ArrayList<>());
    for (int i = 0; i < N - 1; i++) {
        int u = io.ri() - 1;
        int v = io.ri() - 1;
        gr.get(v).add(u);
        gr.get(u).add(v);
    }
    int black = 1;
    int white = 1;
    List<Integer> blist = new ArrayList<>();
    List<Integer> wlist = new ArrayList<>();
    blist.add(0);
    wlist.add(N - 1);
    int BLACK = 1;
    int WHITE = 2;
    int[] color = new int[N];
    color[0] = BLACK;
    color[N - 1] = WHITE;
    boolean proceed = true;
    for (; proceed; ) {
        proceed = false;
        List<Integer> nextB = new ArrayList<>();
        for (int i = 0; i < blist.size(); i++) {
            int cur = blist.get(i);
            List<Integer> ch = gr.get(cur);
            for (int j = 0; j < ch.size(); j++) {
                int next = ch.get(j);
                if (color[next] == 0) {
                    proceed = true;
                    color[next] = BLACK;
                    nextB.add(next);
                    black++;
                }
            }
        }
        blist = nextB;
        List<Integer> nextW = new ArrayList<>();
        for (int i = 0; i < wlist.size(); i++) {
            int cur = wlist.get(i);
            List<Integer> ch = gr.get(cur);
            for (int j = 0; j < ch.size(); j++) {
                int next = ch.get(j);
                if (color[next] == 0) {
                    proceed = true;
                    color[next] = WHITE;
                    nextW.add(next);
                    white++;
                }
            }
        }
        wlist = nextW;
    }
    io.writeLine(black > white ? "Fennec" : "Snuke");
}