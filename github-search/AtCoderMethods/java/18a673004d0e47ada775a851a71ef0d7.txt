public void solve(int testNumber, InputReader in, OutputWriter out) {
    long x = in.nextInt();
    int k = in.nextInt();
    int[] r = in.readIntArray(k);
    int q = in.nextInt();
    long lo = 0, hi = x;
    int ridx = 0;
    long curtime = 0;
    long highvalue = x;
    long lowvalue = 0;
    int dir = -1;
    long delta = 0;
    while (q-- > 0) {
        int t = in.nextInt(), a = in.nextInt();
        while (ridx < k && r[ridx] <= t) {
            long pass = r[ridx] - curtime;
            if (dir > 0) {
                highvalue = Math.min(x, highvalue + pass);
                lowvalue = Math.min(x, lowvalue + pass);
                lo = Math.min(x, lo + pass);
                hi = Math.min(x, hi + pass);
            } else {
                highvalue = Math.max(0, highvalue - pass);
                lowvalue = Math.max(0, lowvalue - pass);
                lo = Math.max(0, lo - pass);
                hi = Math.max(0, hi - pass);
            }
            delta += pass * dir;
            curtime = r[ridx];
            dir = -dir;
            ridx++;
        }
        long pass = t - curtime;
        if (dir > 0) {
            highvalue = Math.min(x, highvalue + pass);
            lowvalue = Math.min(x, lowvalue + pass);
            lo = Math.min(x, lo + pass);
            hi = Math.min(x, hi + pass);
        } else {
            highvalue = Math.max(0, highvalue - pass);
            lowvalue = Math.max(0, lowvalue - pass);
            lo = Math.max(0, lo - pass);
            hi = Math.max(0, hi - pass);
        }
        delta += pass * dir;
        if (a + delta > hi)
            out.println(highvalue);
        else if (a + delta < lo)
            out.println(lowvalue);
        else
            out.println(a + delta);
        curtime = t;
    }
}