private void solve(Scanner sc, PrintWriter out) {
    N = sc.nextInt();
    int maxH = Integer.MIN_VALUE;
    for (int i = 0; i < N; ++i) {
        int w = sc.nextInt();
        int h = sc.nextInt();
        boxList.add(new Pair<>(w, h));
        maxH = Math.max(maxH, h);
    }
    Collections.sort(boxList, (a, b) -> {
        if (a.a.equals(b.a)) {
            return b.b - a.b;
        } else {
            return a.a - b.a;
        }
    });
    BIT<Integer> bit = new BIT<>(maxH, Integer::max, 0);
    int[] dp = new int[N];
    int max = 0;
    for (int i = 0; i < N; ++i) {
        Pair<Integer> box = boxList.get(i);
        dp[i] = bit.reduce(box.b - 1, 0) + 1;
        bit.update(box.b, dp[i]);
        max = Math.max(max, dp[i]);
    }
    out.println(max);
}