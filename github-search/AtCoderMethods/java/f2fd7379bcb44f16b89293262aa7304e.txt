private boolean check(int n, int m) {
    sat2.clear();
    for (int i = 1; i < k - 1; i++) {
        int j = (i - 1) / 2;
        sat2.addEdge(2 * j, 2 * i);
    }
    for (int i = 0; i < 2 * n; i++) {
        int j = i / 2 + k / 2 - 1;
        sat2.addEdge(2 * j, (q[i] ^ 1) + 2 * k);
    }
    int l = 0;
    int r = 0;
    for (int i = 0; i < 2 * n; i++) {
        while (x[i] - x[l] >= m) l++;
        while (r < 2 * n && x[r] - x[i] < m) r++;
        ban(l, i, q[i] + 2 * k, 0, 0, k);
    }
    return sat2.solve() != null;
}