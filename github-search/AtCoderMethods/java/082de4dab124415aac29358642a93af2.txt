private static void solve(FastScanner cin, PrintWriter cout) {
    
    assert Objects.equals(solve(4, 5, new int[][] { { 1, 4, 1 }, { 2, 3, 1 }, { 3, 2, 1 }, { 3, 4, 1 }, { 1, 2, 1 } }), "inf");
    
    assert Objects.equals(solve(3, 3, new int[][] { { 1, 2, 4 }, { 2, 3, 3 }, { 1, 3, 5 } }), "7");
    assert Objects.equals(solve(2, 2, new int[][] { { 1, 2, 1 }, { 2, 1, 1 } }), "inf");
    assert Objects.equals(solve(6, 5, new int[][] { { 1, 2, -1000000000 }, { 2, 3, -1000000000 }, { 3, 4, -1000000000 }, { 4, 5, -1000000000 }, { 5, 6, -1000000000 } }), "-5000000000");
    int n = cin.nextInt();
    int m = cin.nextInt();
    int[][] abcs = new int[m][];
    for (int i = 0; i < abcs.length; i++) abcs[i] = new int[] { cin.nextInt(), cin.nextInt(), cin.nextInt() };
    String ans = solve(n, m, abcs);
    cout.println(ans);
}