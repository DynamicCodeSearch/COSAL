public static void main(String[] $) {
    if (w == 1) {
        for (int i = 0; i < n; ++i) {
            for (int j = 0; j < a[i]; ++j) {
                System.out.println(i + 1);
            }
        }
        return;
    }
    int[][] f = new int[h][w];
    Arrays.stream(f).forEach(o -> Arrays.fill(o, -1));
    int x = 0, y = 0, dx = 1, dy = 0;
    int color = 0;
    try {
        while (true) {
            --a[color];
            f[y][x] = color + 1;
            if (a[color] == 0)
                ++color;
            x += dx;
            y += dy;
            if (x == w - 1) {
                if (y % 2 == 0) {
                    dx = 0;
                    dy = 1;
                } else {
                    dx = -1;
                    dy = 0;
                }
            }
            if (x == 0) {
                if (y % 2 == 1) {
                    dx = 0;
                    dy = 1;
                } else {
                    dx = 1;
                    dy = 0;
                }
            }
        }
    } catch (Exception e) {
    }
    Arrays.stream(f).map(o -> Arrays.stream(o).mapToObj(String::valueOf).collect(Collectors.joining(" "))).forEach(System.out::println);
}