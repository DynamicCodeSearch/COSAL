public static void main(String[] args) {
    Scanner scan = new Scanner(System.in);
    int n = scan.nextInt();
    int m = scan.nextInt();
    long[] dp = new long[1 << n];
    
    dp[0] = 1L;
    int[][] zyoken = new int[m][2];
    for (int i = 0; i < m; i++) {
        zyoken[i][0] = scan.nextInt();
        zyoken[i][1] = scan.nextInt();
    }
    HashSet<Integer> q = new HashSet<>();
    HashSet<Integer> dummyQ = new HashSet<>();
    dummyQ.add(0);
    while (!dummyQ.isEmpty()) {
        for (int bitmask : dummyQ) {
            for (int i = 0; i < n; i++) {
                
                if ((bitmask & (1 << i)) == 0) {
                    
                    boolean flag = false;
                    LABEL: for (int j = 0; j < m; j++) {
                        
                        if (zyoken[j][1] == (i + 1)) {
                            for (int k = 0; k < n; k++) {
                                
                                if ((bitmask & (1 << k)) != 0) {
                                    if (zyoken[j][0] != (k + 1))
                                        continue;
                                    
                                    flag = true;
                                    
                                    break LABEL;
                                }
                            }
                        }
                    }
                    int newbit = (bitmask | (1 << i));
                    if (flag) {
                    
                    } else {
                        
                        dp[newbit] += dp[bitmask];
                        q.add(newbit);
                    }
                }
            }
        }
        HashSet<Integer> dum = dummyQ;
        dummyQ = q;
        q = dum;
        q = new HashSet<>();
    
    }
    
    System.out.println(dp[(1 << n) - 1]);
}