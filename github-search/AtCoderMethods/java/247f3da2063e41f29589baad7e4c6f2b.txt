void solve() throws IOException {
    int n = in.nextInt();
    int m = in.nextInt();
    int[] a = new int[n];
    LazySegTree st = new LazySegTree(m * 2 + 2);
    long sum = 0;
    for (int i = 0; i < n; i++) {
        a[i] = in.nextInt() - 1;
        if (i > 0) {
            if (a[i - 1] < a[i]) {
                sum += a[i] - a[i - 1];
                st.add(a[i - 1] + 2, a[i], 1);
                if (a[i - 1] + 2 - a[i] - 1 < 0)
                    st.add(a[i] + 1, a[i] + 1, a[i - 1] + 2 - a[i] - 1);
            } else {
                sum += a[i] + m - a[i - 1];
                st.add(a[i - 1] + 2, a[i] + m, 1);
                if (-(a[i] + m - a[i - 1] - 2) - 1 < 0)
                    st.add(a[i] + m + 1, a[i] + m + 1, -(a[i] + m - a[i - 1] - 2) - 1);
            }
        }
    }
    long ans = 0;
    for (int i = 0; i < m; i++) {
        ans = Math.max(ans, st.sum(0, i) + st.sum(0, i + m));
    }
    System.out.println(sum - ans);
}