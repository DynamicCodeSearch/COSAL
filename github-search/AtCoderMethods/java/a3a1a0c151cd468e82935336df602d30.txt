private void solve(Scanner sc) {
    N = sc.nextInt();
    M = sc.nextInt();
    for (int i = 0; i <= N; ++i) {
        list.add(new ArrayList<>());
    }
    l = new int[M];
    r = new int[M];
    x = new int[M];
    for (int i = 0; i < M; ++i) {
        l[i] = sc.nextInt();
        r[i] = sc.nextInt();
        x[i] = sc.nextInt();
        list.get(r[i]).add(i);
    }
    dp = new int[N + 1][N + 1][N + 1];
    dp[0][0][0] = 1;
    for (int ri = 0; ri < N; ++ri) {
        for (int gi = 0; gi < N; ++gi) {
            for (int bi = 0; bi < N; ++bi) {
                if (dp[ri][gi][bi] == 0) {
                    continue;
                }
                if (check(ri, gi, bi)) {
                    int d = max(ri, gi, bi);
                    dp[d + 1][gi][bi] = (int) (((long) dp[d + 1][gi][bi] + dp[ri][gi][bi]) % MOD);
                    dp[ri][d + 1][bi] = (int) (((long) dp[ri][d + 1][bi] + dp[ri][gi][bi]) % MOD);
                    dp[ri][gi][d + 1] = (int) (((long) dp[ri][gi][d + 1] + dp[ri][gi][bi]) % MOD);
                }
            }
        }
    }
    long ans = 0;
    for (int i = 0; i < N; ++i) {
        for (int j = 0; j < N; ++j) {
            if (check(N, i, j)) {
                ans = (ans + dp[N][i][j] + dp[j][N][i] + dp[i][j][N]) % MOD;
            }
        }
    }
    _out.println(ans % MOD);
}