public void solve(int testNumber, InputReader in, OutputWriter out) {
    int n = in.nextInt(), m = in.nextInt();
    char[][] s = new char[n][m];
    for (int i = 0; i < n; i++) s[i] = in.next().toCharArray();
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    int ans = Math.max(n, m);
    int[][] dp = new int[n][m];
    int[][] pr = new int[n][m];
    for (int col = 1; col < m; col++) {
        dp[0][col] = 1;
        pr[0][col] = (s[0][col] == s[0][col - 1]) ? 1 : 0;
        for (int row = 1; row < n; row++) {
            pr[row][col] = (s[row][col] == s[row][col - 1]) ? 1 : 0;
            if (pr[row][col] == pr[row - 1][col])
                dp[row][col] = dp[row - 1][col] + 1;
            else
                dp[row][col] = 1;
        }
    }
    int[][] imos = new int[n + 3][m + 3];
    for (int i = 0; i < n; i++) {
        paint(dp[i], imos);
    }
    long count = 0;
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= m + 1; j++) {
            imos[i][j] += imos[i][j - 1];
        }
        for (int j = 1; j <= m + 1; j++) {
            imos[i][j] += imos[i][j - 1];
        }
    }
    for (int j = 1; j <= m; j++) {
        for (int i = n; i >= 1; i--) {
            imos[i][j] += imos[i + 1][j];
        }
    }
    for (int i = 1; i <= n; i++) for (int j = 1; j <= m; j++) {
        if (imos[i][j] > 0)
            ans = Math.max(ans, i * (j + 1));
    }
    out.println(ans);
}