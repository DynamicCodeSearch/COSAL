void solver() {
    int N = ni();
    int[] x = new int[N];
    for (int i = 0; i < N; i++) x[i] = ni();
    int L = ni();
    int[][] to = new int[N][17];
    for (int i = 0; i < N; i++) Arrays.fill(to[i], -1);
    int ni = 1;
    for (int i = 0; i < N; i++) {
        ni = Math.max(ni, i + 1);
        for (; ni < N && x[ni] - x[i] <= L; ni++) {
            to[i][0] = ni;
        }
        ni--;
    }
    for (int i = 1; i < 17; i++) {
        for (int j = 0; j < N && to[j][i - 1] != -1; j++) {
            to[j][i] = to[to[j][i - 1]][i - 1];
        }
    }
    int Q = ni();
    for (int i = 0; i < Q; i++) {
        int a = ni() - 1;
        int b = ni() - 1;
        if (a > b) {
            int d = a;
            a = b;
            b = d;
        }
        int sum = 0;
        for (int j = 16; j >= 0; j--) {
            if (to[a][j] != -1 && to[a][j] <= b) {
                a = to[a][j];
                sum += 1L << j;
            }
        }
        if (a != b)
            sum++;
        out.println(sum);
    }
}