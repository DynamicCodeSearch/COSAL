public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int a = sc.nextInt() - 1;
    int b = sc.nextInt() - 1;
    int M = sc.nextInt();
    int[] x = new int[M];
    int[] y = new int[M];
    int[][] dp = new int[N][N];
    for (int i = 0; i < M; i++) {
        x[i] = sc.nextInt() - 1;
        y[i] = sc.nextInt() - 1;
        dp[x[i]][y[i]] = 1;
        dp[y[i]][x[i]] = 1;
    }
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
            if (i != j && dp[i][j] == 0)
                dp[i][j] = 1000;
        }
    }
    
    for (int k = 1; k <= N; k++) {
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                dp[i][j] = Math.min(dp[i][j], dp[i][k - 1] + dp[k - 1][j]);
            }
        }
    }
    
    int[][] dag = new int[N][N];
    for (int i = 0; i < M; i++) {
        if (dp[a][x[i]] == dp[a][y[i]] + 1)
            dag[y[i]][x[i]] = 1;
        if (dp[a][x[i]] == dp[a][y[i]] - 1)
            dag[x[i]][y[i]] = 1;
    }
    
    HashMap<Integer, ArrayList<Integer>> map = new HashMap<Integer, ArrayList<Integer>>();
    for (int i = 0; i < N; i++) {
        int dist = dp[a][i];
        if (map.containsKey(dist)) {
            ArrayList<Integer> list = map.get(dist);
            list.add(i);
            map.put(dist, list);
        } else {
            ArrayList<Integer> list = new ArrayList<Integer>();
            list.add(i);
            map.put(dist, list);
        }
    }
    
    long[] dp2 = new long[N];
    dp2[a] = 1;
    int d = dp[a][b];
    long MOD = 1000000007;
    for (int i = 0; i < d; i++) {
        ArrayList<Integer> list = map.get(i);
        for (int j = 0; j < list.size(); j++) {
            int v = list.get(j);
            for (int k = 0; k < N; k++) {
                if (dag[v][k] == 1)
                    dp2[k] = (dp2[k] + dp2[v]) % MOD;
            }
        }
    }
    System.out.println(dp2[b]);
}