public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    boolean[][] m = new boolean[N][N];
    for (int i = 0; i < M; i++) {
        int a = sc.nextInt() - 1;
        int b = sc.nextInt() - 1;
        m[a][b] = m[b][a] = true;
    }
    int[][] dp = new int[1 << N][N];
    dp[1][0] = 1;
    for (int i = 1; i < N; i++) {
        int comb = (1 << i) - 1;
        while (comb < (1 << N)) {
            for (int j = 0; j < N; j++) {
                if ((comb & (1 << j)) == 0) {
                    for (int k = 0; k < N; k++) {
                        if (m[k][j]) {
                            dp[comb | (1 << j)][j] += dp[comb][k];
                        }
                    }
                }
            }
            int x = comb & -comb;
            int y = comb + x;
            comb = ((comb & ~y) / x >> 1) | y;
        }
    }
    int ans = 0;
    for (int i = 0; i < N; i++) ans += dp[(1 << N) - 1][i];
    System.out.println(ans);
    sc.close();
}