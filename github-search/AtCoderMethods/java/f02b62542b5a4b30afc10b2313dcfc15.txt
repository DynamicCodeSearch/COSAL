void run() {
    int n = ni();
    Box[] list = new Box[n];
    for (int i = 0; i < n; ++i) {
        int w = ni();
        int h = ni();
        Box b = new Box();
        b.w = w;
        b.h = h;
        list[i] = b;
    }
    Arrays.sort(list, (a, b) -> {
        if (a.h == b.h) {
            return b.w - a.w;
        } else {
            return a.h - b.h;
        }
    });
    BIT<Integer> bit = new BIT<>(100000, Integer::max, 0);
    int[] dp = new int[n + 1];
    for (int i = 1; i <= n; ++i) {
        dp[i] = bit.reduce(list[i - 1].w - 1, 0) + 1;
        bit.update(list[i - 1].w, dp[i]);
    }
    int max = 0;
    for (int i = 1; i <= n; ++i) {
        max = Math.max(max, dp[i]);
    }
    System.out.println(max);
}