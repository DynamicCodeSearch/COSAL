public static int[][][] enumPartitions(int n) {
    int[][][] dp = new int[n + 1][][];
    dp[1] = new int[][] { { 0, 1 } };
    for (int i = 2; i <= n; i++) {
        dp[i] = new int[6000][];
        int f = 0;
        Set<Integer> hset = new HashSet<Integer>();
        for (int[] r : dp[i - 1]) {
            int[] nex = Arrays.copyOf(r, i + 1);
            for (int j = 0; j <= i - 1; j++) {
                if (j > 0 && nex[j] == 0)
                    continue;
                if (j > 0)
                    nex[j]--;
                nex[j + 1]++;
                int h = Arrays.hashCode(nex);
                if (!hset.contains(h)) {
                    dp[i][f++] = Arrays.copyOf(nex, i + 1);
                    hset.add(h);
                }
                if (j > 0)
                    nex[j]++;
                nex[j + 1]--;
            }
        }
        dp[i] = Arrays.copyOf(dp[i], f);
    }
    return dp;
}