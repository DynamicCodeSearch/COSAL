void solve() throws IOException {
    int n = in.nextInt();
    int a = in.nextInt();
    int b = in.nextInt();
    long[] v = new long[n];
    for (int i = 0; i < n; i++) {
        v[i] = in.nextLong();
    }
    Arrays.sort(v);
    long sum = 0;
    for (int i = 0; i < a; i++) {
        sum += v[n - 1 - i];
    }
    long least = v[n - a];
    int lower = 0;
    for (int i = n - a; i < n; i++) {
        if (v[i] != least)
            break;
        lower++;
    }
    int count = 0;
    for (int i = 0; i < n; i++) {
        if (v[i] == least)
            count++;
    }
    long[][] comb = pascalT(51);
    int add = b - a;
    long ans = 0;
    if (v[n - 1] == least) {
        for (int i = lower; i <= Math.min(count, lower + add); i++) {
            ans += comb[count][i];
        }
    } else {
        ans = comb[count][lower];
    }
    System.out.println((double) sum / a);
    System.out.println(ans);
}