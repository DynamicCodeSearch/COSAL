static void solve() {
    int n = ni();
    long[][] co = new long[n][];
    for (int i = 0; i < n; i++) {
        co[i] = new long[] { ni(), ni() };
    }
    int mod = 998244353;
    long all = pow(2, n, mod) - n * (n - 1) / 2 - n - 1;
    for (int i = 0; i < n; i++) {
        inner: for (int j = i + 1; j < n; j++) {
            int on = 0;
            for (int k = 0; k < n; k++) {
                if (onSameLine(co[i], co[j], co[k])) {
                    if (!isACB(co[i], co[j], co[k]))
                        continue inner;
                    on++;
                }
            }
            assert on >= 2;
            all -= pow(2, on, mod) - on * (on - 1) / 2 - on - 1;
        }
    }
    all %= mod;
    if (all < 0)
        all += mod;
    out.println(all);
}