void solve() throws IOException {
    int n = nextInt();
    g = new List[n];
    for (int i = 0; i < n; i++) {
        g[i] = new ArrayList<>();
    }
    for (int i = 0; i < n - 1; i++) {
        int v = nextInt() - 1;
        int u = nextInt() - 1;
        g[v].add(u);
        g[u].add(v);
    }
    int k = nextInt();
    fixed = new boolean[n];
    val = new int[n];
    int root = -1;
    for (int i = 0; i < k; i++) {
        int v = nextInt() - 1;
        fixed[v] = true;
        val[v] = nextInt();
        root = v;
    }
    
    low = new int[n];
    high = new int[n];
    anything = new boolean[n];
    boolean hasAns = dfs1(root, -1);
    out.println(hasAns ? "Yes" : "No");
    if (hasAns) {
        outp = new int[n];
        outp[root] = val[root];
        dfs2(root, -1, val[root]);
        for (int x : outp) {
            out.println(x);
        }
    }
}