private void solve() {
    try {
        int N = scanner.nextInt();
        int M = scanner.nextInt();
        int[] a = new int[N];
        int[] b = new int[N];
        int[] c = new int[M];
        int[] d = new int[M];
        for (int i = 0; i < N; i++) {
            a[i] = scanner.nextInt();
            b[i] = scanner.nextInt();
        }
        for (int i = 0; i < M; i++) {
            c[i] = scanner.nextInt();
            d[i] = scanner.nextInt();
        }
        for (int i = 0; i < N; i++) {
            long min = Long.MAX_VALUE;
            int minIndex = 0;
            for (int j = 0; j < M; j++) {
                long manhattan = Math.abs(a[i] - c[j]) + Math.abs(b[i] - d[j]);
                if (manhattan < min) {
                    min = manhattan;
                    minIndex = j;
                }
            }
            System.out.println(minIndex + 1);
        }
    } catch (Exception e) {
        e.printStackTrace();
    }
}