public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int M = sc.nextInt();
    int count = 0;
    Queue<State> queue = new LinkedList<>();
    List<List<Integer>> paths = new ArrayList<>(N);
    for (int i = 0; i < N; i++) {
        paths.add(i, new ArrayList<>());
    }
    int x, y;
    for (int i = 0; i < M; i++) {
        x = sc.nextInt();
        y = sc.nextInt();
        paths.get(x - 1).add(y);
        paths.get(y - 1).add(x);
    }
    
    
    
    int[] visited = new int[N];
    visited[0] = 1;
    queue.add(new State(visited, 1));
    while (!queue.isEmpty()) {
        State state = queue.poll();
        int now = state.now;
        
        if (state.isAllVisited()) {
            count += 1;
        } else {
            for (Integer i : paths.get(now - 1)) {
                if (state.visited[i - 1] == 0) {
                    int[] v = state.visited.clone();
                    v[i - 1] = 1;
                    queue.add(new State(v, i));
                }
            }
        }
    }
    System.out.println(count);
}