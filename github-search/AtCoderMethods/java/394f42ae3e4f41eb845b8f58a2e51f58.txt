private static boolean isNeeded(int target) {
    int k = K - a[target];
    if (k < 0) {
        return true;
    }
    int index = 0;
    boolean[][] dp = new boolean[N][K];
    for (int x = 0; x < N; x++) {
        dp[x][0] = true;
    }
    for (int x = 1; x < N; x++) {
        if (index == target)
            index++;
        for (int y = 0; y < K; y++) {
            if (dp[x - 1][y]) {
                dp[x][y] = true;
                int tmp = y + a[index];
                if (tmp < K)
                    dp[x][tmp] = true;
            }
        }
        index++;
    }
    for (int y = k; y < K; y++) {
        if (dp[N - 1][y]) {
            return true;
        }
    }
    return false;
}