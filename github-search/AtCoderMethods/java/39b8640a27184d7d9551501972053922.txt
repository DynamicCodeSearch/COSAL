public long[] getDist(int s) {
    PriorityQueue<Pair> Q = new PriorityQueue<>();
    Q.add(new Pair(s, 0));
    long[] dist = new long[n];
    Arrays.fill(dist, INF);
    boolean[] used = new boolean[n];
    while (!Q.isEmpty()) {
        Pair p = Q.poll();
        if (used[p.x])
            continue;
        used[p.x] = true;
        dist[p.x] = p.y;
        for (Pair edge : G[p.x]) {
            Q.add(new Pair(edge.x, p.y + edge.y));
        }
    }
    return dist;
}