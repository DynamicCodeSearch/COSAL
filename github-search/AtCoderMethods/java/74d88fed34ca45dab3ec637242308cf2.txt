public static void main(String[] args) {
    FastScanner sc = new FastScanner();
    int H = sc.nextInt();
    int W = sc.nextInt();
    char[][] map = new char[H][];
    for (int i = 0; i < H; i++) {
        map[i] = sc.next().toCharArray();
    }
    for (int i = 0; i < H; i++) {
        for (int j = 0; j < W; j++) {
            char c = map[i][j];
            if (c == 'S') {
                input(0, i + 1, INF);
                input(0, H + j + 1, INF);
            } else if (c == 'T') {
                input(i + 1, H + W + 1, INF);
                input(H + j + 1, H + W + 1, INF);
            }
            if (c != '.') {
                input(i + 1, H + j + 1, 1);
                input(H + j + 1, i + 1, 1);
            }
        }
    }
    int n = H + W + 2;
    from = Arrays.copyOf(from, ptr);
    to = Arrays.copyOf(to, ptr);
    w = Arrays.copyOf(w, ptr);
    int[][][] g = packWD(n, from, to, w);
    int ret = maximumFlowFF(g, 0, n - 1, INF);
    System.out.println(ret >= INF ? -1 : ret);
}