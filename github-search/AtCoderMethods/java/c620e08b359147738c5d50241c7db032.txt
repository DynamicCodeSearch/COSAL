
public void run() throws IOException {
    int TEST_CASE = 1;
    while (TEST_CASE-- != 0) {
        h = io.nextInt();
        w = io.nextInt();
        mp = new char[h][];
        for (int i = 0; i < h; i++) mp[i] = io.next();
        for (int y = 0; y < h; y++) {
            for (int x = 0; x < w; x++) if (mp[y][x] == 'S') {
                for (int x2 = 0; x2 < w; x2++) if (mp[y][x2] == 'T') {
                    io.out.println(-1);
                    return;
                }
                for (int y2 = 0; y2 < h; y2++) if (mp[y2][x] == 'T') {
                    io.out.println(-1);
                    return;
                }
            }
        }
        int S = w + h, T = S + 1;
        Dinic flow = new Dinic(T + 1);
        for (int y = 0; y < h; y++) {
            for (int x = 0; x < w; x++) if (mp[y][x] != '.') {
                if (mp[y][x] == 'S') {
                    flow.AddEdge(S, x, 1 << 29);
                    flow.AddEdge(S, y + w, 1 << 29);
                } else if (mp[y][x] == 'T') {
                    flow.AddEdge(x, T, 1 << 29);
                    flow.AddEdge(y + w, T, 1 << 29);
                } else {
                    flow.AddEdge(y + w, x, 1);
                    flow.AddEdge(x, y + w, 1);
                }
            }
        }
        io.out.println(flow.MaxFlow(S, T));
    }
}