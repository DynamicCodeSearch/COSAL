public static long rec(long[] init, long[] arr, long k, long mod) {
    if (init.length == arr.length) {
        arr = Arrays.copyOf(arr, arr.length + 1);
    }
    int n = init.length;
    if (k < n) {
        return init[(int) k];
    }
    long[][] mat = new long[n + 1][n + 1];
    for (int i = 0; i < n - 1; i++) {
        mat[i][i + 1] = 1;
    }
    for (int i = 0; i <= n; i++) {
        mat[n - 1][i] = arr[i];
    }
    mat[n][n] = 1;
    mat = powMod(mat, k - n + 1, mod);
    long ret = 0;
    for (int i = 0; i < n; i++) {
        ret += mat[n - 1][i] * init[i];
    }
    ret += mat[n - 1][n];
    return ret;
}