public void solve(int testNumber, FastScanner in, PrintWriter out) {
    
    n = in.nextInt();
    int min = Integer.MAX_VALUE;
    int max = Integer.MIN_VALUE;
    ps = new Point[2 * n];
    for (int i = 0; i < n; i++) {
        int x = in.nextInt();
        int y = in.nextInt();
        min = Math.min(min, x);
        min = Math.min(min, y);
        max = Math.max(max, x);
        max = Math.max(max, y);
        ps[2 * i] = new Point(x, i, true);
        ps[2 * i + 1] = new Point(y, i, false);
    }
    Arrays.sort(ps);
    {
        maxNodeId = 0;
        initTree(0, 0, ps.length - 1, true);
        solver = new SAT2Solver(n + (maxNodeId + 1));
    }
    int l = 0;
    int r = max - min + 1;
    while (r - l > 1) {
        int m = l + (r - l) / 2;
        if (can(m)) {
            l = m;
        } else {
            r = m;
        }
    }
    out.println(l);
}