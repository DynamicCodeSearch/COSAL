long solve() {
    long result = 0;
    int N = in.nextInt();
    int[][] graph = new int[N][N];
    boolean[][] check = new boolean[N][N];
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
            graph[i][j] = in.nextInt();
            check[i][j] = true;
        }
    }
    for (int k = 0; k < N; k++) {
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                if (graph[i][j] > graph[i][k] + graph[k][j]) {
                    return -1;
                } else if (i != j && i != k && j != k && graph[i][j] == graph[i][k] + graph[k][j]) {
                    check[i][j] = false;
                }
            }
        }
    }
    for (int i = 0; i < N; i++) {
        for (int j = i; j < N; j++) {
            if (check[i][j]) {
                result += graph[i][j];
            }
        }
    }
    return result;
}