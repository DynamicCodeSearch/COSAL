public static void main(String[] args) {
    FastScanner sc = new FastScanner();
    int N = sc.nextInt();
    int[][] p = sc.nextIntTable(N, 4);
    double[][] d = new double[N][N];
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
            if (i != j) {
                
                double v = Math.min(p[i][2], p[j][3]);
                double dx = p[i][0] - p[j][0];
                double dy = p[i][1] - p[j][1];
                double len = Math.sqrt(dx * dx + dy * dy);
                d[i][j] = len / v;
            } else {
                d[i][j] = Integer.MAX_VALUE;
            }
        }
    }
    double[] ret = dijk(d, 0);
    Arrays.sort(ret);
    double max = 0;
    for (int i = 1; i < N; i++) {
        double time = N - i - 1;
        max = Math.max(max, time + ret[i]);
    }
    System.out.printf("%.9f\n", max);
}