private static long[] solve2(char[] s, int lp, long l, long r) {
    int MAX = 2000;
    long[] ans = new long[26];
    S = s;
    wl = new long[MAX];
    wl[0] = s.length;
    wl[1] = s.length + lp;
    wcnt = new long[MAX][26];
    for (int i = 0; i < s.length; i++) {
        wcnt[0][s[i] - 'a']++;
        wcnt[1][s[i] - 'a']++;
    }
    for (int i = 0; i < lp; i++) {
        wcnt[1][s[i] - 'a']++;
    }
    for (int i = 2; i < MAX; i++) {
        wl[i] = wl[i - 1] + wl[i - 2];
        for (int c = 0; c < 26; c++) {
            wcnt[i][c] = wcnt[i - 1][c] + wcnt[i - 2][c];
        }
        if (wl[i] > r) {
            long[] R = solveRec(r, i);
            long[] L = solveRec(l, i);
            for (int c = 0; c < 26; c++) {
                ans[c] = R[c] - L[c];
            }
            break;
        }
    }
    return ans;
}