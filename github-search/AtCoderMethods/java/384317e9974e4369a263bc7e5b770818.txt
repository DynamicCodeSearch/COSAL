static void solve() throws IOException {
    int N = readInt();
    long A = readLong();
    long B = readLong();
    long[] a = readArrL(N);
    if (A == 1) {
        Arrays.sort(a);
        for (int i = 0; i < N; i++) {
            System.out.print(a[i] + " ");
        }
        System.out.println();
    } else {
        int idx = 0;
        long max = a[0];
        for (int i = 0; i < N; i++) {
            if (a[i] >= max) {
                idx = i;
                max = Math.max(max, a[i]);
            }
        }
        long j = 0;
        for (; j < B; j++) {
            int idx2 = 0;
            long min = Long.MAX_VALUE;
            for (int i = 0; i < N; i++) {
                if (a[i] < min) {
                    idx2 = i;
                    min = Math.min(min, a[i]);
                }
            }
            if (a[idx2] * A >= a[idx]) {
                break;
            }
            a[idx2] = a[idx2] * A;
        }
        if (j == B) {
            Arrays.sort(a);
            for (int i = 0; i < N; i++) {
                System.out.print(a[i] + " ");
            }
            System.out.println();
        } else {
            long M = B - j;
            long t = M % N;
            long s = M / N;
            long p = pow(A, s + 1);
            long q = pow(A, s);
            Arrays.sort(a);
            for (long i = t; i < N; i++) {
                System.out.print(((a[(int) i] * q) % MOD) + " ");
            }
            for (long i = 0; i < t; i++) {
                System.out.print(((a[(int) i] * p) % MOD) + " ");
            }
            System.out.println();
        }
    }
}