def bfs(edges, N, used):
    from collections import deque
    ret = 0
    nodes = [Node() for _ in range(N)]
    que = deque(list(range(N)))
    for e in edges:
        nodes[e[0]].dest.append(e[1])
        nodes[e[1]].in_degree += 1
    while len(que) > 0:
        n = que.popleft()
        if used[n]:
            continue
        if nodes[n].in_degree > nodes[n].cur_inputs:
            continue
        ret += 1
        used[n] = True
        for d in nodes[n].dest:
            nodes[d].cur_inputs += 1
            que.append(d)
    return ret