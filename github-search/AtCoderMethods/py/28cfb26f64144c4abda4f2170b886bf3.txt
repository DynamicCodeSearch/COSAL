def dfs(s):
    if s == (1<<n) - 1: return 0.0
    if dp[s] != float("inf"): return dp[s]
    for i in xrange(m):
        ev = 0.0
        same = 1.0
        cnt = 0
        for j in xrange(c[i]):
            nx = s | (1<<idol[i][j])
            if (nx == s):
                cnt += 1
                ev += cost[i] * p[i][j]
                same -= p[i][j]
            else:
                ev += (dfs(nx) + cost[i]) * p[i][j]
        if same == 0: continue
        if cnt == c[i]: continue
        dp[s] = min(dp[s], ev / same)
    return dp[s]