def main():
    n,m = LI()
    e = collections.defaultdict(set)
    k = []
    for _ in range(m):
        a,b = LI_()
        e[a].add(b)
        e[b].add(a)
        k.append((a,b))


    def search(s):
        d = [inf] * n
        d[s] = 0
        q = []
        heapq.heappush(q, (0, s))
        v = collections.defaultdict(bool)
        while len(q):
            k, u = heapq.heappop(q)
            if v[u]:
                continue
            v[u] = True

            for uv in e[u]:
                ud = 1
                if v[uv]:
                    continue
                vd = k + ud
                if d[uv] > vd:
                    d[uv] = vd
                    heapq.heappush(q, (vd, uv))

        return d

    r = 0
    for a,b in k:
        e[a].remove(b)
        e[b].remove(a)
        d = search(0)
        if max(d) == inf:
            r += 1
        e[a].add(b)
        e[b].add(a)

    return r