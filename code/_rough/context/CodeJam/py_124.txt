### Py Tokens: map, zip, int, xrange, sum, split, readline, infile 

### Py functions

def func_405eb56f23694510bd0d2aaf2c1dd209(g, infile, l, u, w):
    L = [map(int, infile.readline().split()) for i in xrange(l)]
    U = [map(int, infile.readline().split()) for i in xrange(u)]
    w += 1
    h = [0.0] * w
    hl = [0.0] * w
    for i in xrange(1, l):
        dx = L[i][0] - L[i - 1][0]
        d = 1.0 * (L[i][1] - L[i - 1][1]) / dx
        for x in xrange(dx + 1):
            h[x + L[i - 1][0]] = x * d + L[i - 1][1]
    l, L = u, U
    for i in xrange(1, l):
        dx = L[i][0] - L[i - 1][0]
        d = 1.0 * (L[i][1] - L[i - 1][1]) / dx
        for x in xrange(dx + 1):
            hl[x + L[i - 1][0]] = x * d + L[i - 1][1]
    h = [(x - y) for x, y in zip(hl, h)]
    a = sum((h[i] + h[i - 1]) * 0.5 for i in xrange(1, w))
    d = a / g
    r = []
    i = 0
    c = 0
    return h

def func_356e7f0c525e41dbb7e12203d944820a(g, infile, l, u, w):
    L = [map(int, infile.readline().split()) for i in xrange(l)]
    U = [map(int, infile.readline().split()) for i in xrange(u)]
    w += 1
    h = [0.0] * w
    hl = [0.0] * w
    for i in xrange(1, l):
        dx = L[i][0] - L[i - 1][0]
        d = 1.0 * (L[i][1] - L[i - 1][1]) / dx
        for x in xrange(dx + 1):
            h[x + L[i - 1][0]] = x * d + L[i - 1][1]
    l, L = u, U
    for i in xrange(1, l):
        dx = L[i][0] - L[i - 1][0]
        d = 1.0 * (L[i][1] - L[i - 1][1]) / dx
        for x in xrange(dx + 1):
            hl[x + L[i - 1][0]] = x * d + L[i - 1][1]
    h = [(x - y) for x, y in zip(hl, h)]
    a = sum((h[i] + h[i - 1]) * 0.5 for i in xrange(1, w))
    d = a / g
    r = []
    i = 0
    return h

def func_6aaccdde99c74ae8bd35a04fb7e105f8(g, infile, l, u, w):
    L = [map(int, infile.readline().split()) for i in xrange(l)]
    U = [map(int, infile.readline().split()) for i in xrange(u)]
    w += 1
    h = [0.0] * w
    hl = [0.0] * w
    for i in xrange(1, l):
        dx = L[i][0] - L[i - 1][0]
        d = 1.0 * (L[i][1] - L[i - 1][1]) / dx
        for x in xrange(dx + 1):
            h[x + L[i - 1][0]] = x * d + L[i - 1][1]
    l, L = u, U
    for i in xrange(1, l):
        dx = L[i][0] - L[i - 1][0]
        d = 1.0 * (L[i][1] - L[i - 1][1]) / dx
        for x in xrange(dx + 1):
            hl[x + L[i - 1][0]] = x * d + L[i - 1][1]
    h = [(x - y) for x, y in zip(hl, h)]
    a = sum((h[i] + h[i - 1]) * 0.5 for i in xrange(1, w))
    d = a / g
    r = []
    i = 0
    return g

def func_ea72cb006c8c409e987940af76ab924d(g, infile, l, u, w):
    L = [map(int, infile.readline().split()) for i in xrange(l)]
    U = [map(int, infile.readline().split()) for i in xrange(u)]
    w += 1
    h = [0.0] * w
    hl = [0.0] * w
    for i in xrange(1, l):
        dx = L[i][0] - L[i - 1][0]
        d = 1.0 * (L[i][1] - L[i - 1][1]) / dx
        for x in xrange(dx + 1):
            h[x + L[i - 1][0]] = x * d + L[i - 1][1]
    l, L = u, U
    for i in xrange(1, l):
        dx = L[i][0] - L[i - 1][0]
        d = 1.0 * (L[i][1] - L[i - 1][1]) / dx
        for x in xrange(dx + 1):
            hl[x + L[i - 1][0]] = x * d + L[i - 1][1]
    h = [(x - y) for x, y in zip(hl, h)]
    a = sum((h[i] + h[i - 1]) * 0.5 for i in xrange(1, w))
    d = a / g
    r = []
    return g

def func_388c813ccd9b4c99b379ce0ec2a925cc(g, infile, l, u, w):
    L = [map(int, infile.readline().split()) for i in xrange(l)]
    U = [map(int, infile.readline().split()) for i in xrange(u)]
    w += 1
    h = [0.0] * w
    hl = [0.0] * w
    for i in xrange(1, l):
        dx = L[i][0] - L[i - 1][0]
        d = 1.0 * (L[i][1] - L[i - 1][1]) / dx
        for x in xrange(dx + 1):
            h[x + L[i - 1][0]] = x * d + L[i - 1][1]
    l, L = u, U
    for i in xrange(1, l):
        dx = L[i][0] - L[i - 1][0]
        d = 1.0 * (L[i][1] - L[i - 1][1]) / dx
        for x in xrange(dx + 1):
            hl[x + L[i - 1][0]] = x * d + L[i - 1][1]
    h = [(x - y) for x, y in zip(hl, h)]
    a = sum((h[i] + h[i - 1]) * 0.5 for i in xrange(1, w))
    d = a / g
    r = []
    i = 0
    c = 0
    return d

*********************************

#### Score: 5.07010


#### Java Tokens: next, nextint, sum, int 

public static int func_ba24df6f75b54d548814735d906e471c(Scanner sc) { 
 int n = sc.nextInt();
int p = sc.nextInt();
int q = sc.nextInt();
int r = sc.nextInt();
int s = sc.nextInt();
long[] a = new long[n];
long sum = 0;
for (int i = 0; i < n; i++) {
    a[i] = ((long) i * p + q) % r + s;
    sum += a[i];
}
return s;
}


public static int func_8dc48b3b058b4f38bed00ed8158ee936(int n, int p, int q, Scanner sc) { 
 int r = sc.nextInt();
int s = sc.nextInt();
long[] a = new long[n];
long sum = 0;
for (int i = 0; i < n; i++) {
    a[i] = ((long) i * p + q) % r + s;
    sum += a[i];
}
return s;
}


public static int func_73a0132685e845409e06fe5593834e10(int n, int p, int q, Scanner sc) { 
 int r = sc.nextInt();
int s = sc.nextInt();
long[] a = new long[n];
long sum = 0;
for (int i = 0; i < n; i++) {
    a[i] = ((long) i * p + q) % r + s;
    sum += a[i];
}
int x = 0, y = 0;
return r;
}


*********************************

#### Score: 4.78177


#### Java Tokens: next, min, nextint, sum, int 

public static int func_d7c9bf330c774ea695a4f431ff2fa890(Scanner in) { 
 int n = in.nextInt();
int p = in.nextInt(), q = in.nextInt(), r = in.nextInt(), s = in.nextInt();
long sum = 0;
long[] a = new long[n];
for (int i = 0; i < n; i++) {
    a[i] = (((long) i * p + q) % r + s);
    sum += a[i];
}
long min = sum;
long si = 0, sj = 0;
return p;
}


public static long[] func_dccc9d24d5fe49cfa8046a087c522b8d(int n, Scanner in) { 
 int p = in.nextInt(), q = in.nextInt(), r = in.nextInt(), s = in.nextInt();
long sum = 0;
long[] a = new long[n];
for (int i = 0; i < n; i++) {
    a[i] = (((long) i * p + q) % r + s);
    sum += a[i];
}
long min = sum;
return a;
}


public static long func_9db14b554ff64a309e49eb0263af4567(Scanner in) { 
 int n = in.nextInt();
int p = in.nextInt(), q = in.nextInt(), r = in.nextInt(), s = in.nextInt();
long sum = 0;
long[] a = new long[n];
for (int i = 0; i < n; i++) {
    a[i] = (((long) i * p + q) % r + s);
    sum += a[i];
}
long min = sum;
long si = 0, sj = 0;
return min;
}


*********************************

#### Score: 4.78177


#### Java Tokens: next, nextint, tmp, sum, int 

public static int func_1feee362c3dc433089f190c1203378bd(Scanner sc) { 
 int n = sc.nextInt();
int p = sc.nextInt();
int q = sc.nextInt();
int r = sc.nextInt();
int s = sc.nextInt();
long[] a = new long[n];
long sum = 0;
for (int i = 0; i < n; i++) {
    a[i] = ((long) i * p + q) % r + s;
    sum += a[i];
}
int x = 0, y = 0;
long tmp = 0;
for (int i = 0; i < n; i++) {
    tmp += a[i];
    if (tmp * 3 <= sum) {
        x = i;
    }
    if (tmp * 3 <= sum * 2) {
        y = i;
    }
}
return q;
}


public static int func_51ff495e6edf4a4483d5feec6a127a81(int n, int p, int q, Scanner sc) { 
 int r = sc.nextInt();
int s = sc.nextInt();
long[] a = new long[n];
long sum = 0;
for (int i = 0; i < n; i++) {
    a[i] = ((long) i * p + q) % r + s;
    sum += a[i];
}
int x = 0, y = 0;
long tmp = 0;
for (int i = 0; i < n; i++) {
    tmp += a[i];
    if (tmp * 3 <= sum) {
        x = i;
    }
    if (tmp * 3 <= sum * 2) {
        y = i;
    }
}
return s;
}


public static int func_e905f03df0d3440ea5d1e58bdb5bd8ef(Scanner sc) { 
 int n = sc.nextInt();
int p = sc.nextInt();
int q = sc.nextInt();
int r = sc.nextInt();
int s = sc.nextInt();
long[] a = new long[n];
long sum = 0;
for (int i = 0; i < n; i++) {
    a[i] = ((long) i * p + q) % r + s;
    sum += a[i];
}
int x = 0, y = 0;
long tmp = 0;
return s;
}


*********************************

#### Score: 4.52720


#### Java Tokens: next, nextint, tmp, ans, sum, int 

public static int func_d15abf18ad7e42d69d2e0cd7bea84aa1(int n, int p, Scanner sc) { 
 int q = sc.nextInt();
int r = sc.nextInt();
int s = sc.nextInt();
long[] a = new long[n];
long sum = 0;
for (int i = 0; i < n; i++) {
    a[i] = ((long) i * p + q) % r + s;
    sum += a[i];
}
int x = 0, y = 0;
long tmp = 0;
for (int i = 0; i < n; i++) {
    tmp += a[i];
    if (tmp * 3 <= sum) {
        x = i;
    }
    if (tmp * 3 <= sum * 2) {
        y = i;
    }
}
double ans = 0;
return s;
}


public static int func_1e27ba878463494c918d4b8555df245c(int n, int p, Scanner sc) { 
 int q = sc.nextInt();
int r = sc.nextInt();
int s = sc.nextInt();
long[] a = new long[n];
long sum = 0;
for (int i = 0; i < n; i++) {
    a[i] = ((long) i * p + q) % r + s;
    sum += a[i];
}
int x = 0, y = 0;
long tmp = 0;
for (int i = 0; i < n; i++) {
    tmp += a[i];
    if (tmp * 3 <= sum) {
        x = i;
    }
    if (tmp * 3 <= sum * 2) {
        y = i;
    }
}
double ans = 0;
return q;
}


public static int func_7d57c9f25b3b4d68b875622c5c9411ab(int n, int p, Scanner sc) { 
 int q = sc.nextInt();
int r = sc.nextInt();
int s = sc.nextInt();
long[] a = new long[n];
long sum = 0;
for (int i = 0; i < n; i++) {
    a[i] = ((long) i * p + q) % r + s;
    sum += a[i];
}
int x = 0, y = 0;
long tmp = 0;
for (int i = 0; i < n; i++) {
    tmp += a[i];
    if (tmp * 3 <= sum) {
        x = i;
    }
    if (tmp * 3 <= sum * 2) {
        y = i;
    }
}
double ans = 0;
return y;
}


*********************************

#### Score: 4.44365


#### Java Tokens: split, string, trim, line 

public static double[] func_de3a96ea49a441999168791bd2f96e09(int n, String line) { 
 String[] ss = line.trim().split(" ");
double[] l = new double[n];
return l;
}


public static String[] func_b4974e8e9363455792fd54d845a37f4a(int n, String line) { 
 String[] ss = line.trim().split(" ");
double[] l = new double[n];
return ss;
}


*********************************

#### Score: 4.44365


#### Java Tokens: split, trim, \s+, line 

public static String[] func_25b90e8e1098474fac3336d0bce37fc5(String line) { 
 if (line == null)
    return null;
return line.trim().split("\\s+");

}


public static String[] func_1f59c1d4a9344a6b853d00f3689bb53e(String line) { 
 if (line == null)
    return null;
return line.trim().split("\\s+");

}


*********************************

#### Score: 4.09814


#### Java Tokens: next, beforehalf, half, nextint, best, sum, int, beforehalfsum 

public static long func_eea237da523c48979f2af872bd17374e(int N, long q, long p, long r, Scanner in) { 
 long s = in.nextInt();
long[] A = new long[N];
for (int n = 0; n < N; n++) {
    A[n] = (n * p + q) % r + s;
}
long[] best = new long[N];
int beforeHalf = 0;
long beforeHalfSum = 0;
return s;
}


public static int func_8ea3224b72af4442a1bf756ef8ada3b2(int N, long q, long p, Scanner in) { 
 long r = in.nextInt();
long s = in.nextInt();
long[] A = new long[N];
for (int n = 0; n < N; n++) {
    A[n] = (n * p + q) % r + s;
}
long[] best = new long[N];
int beforeHalf = 0;
long beforeHalfSum = 0;
return beforeHalf;
}


public static long func_cfa345a37df74b58a2ad0f406318ab15(int N, Scanner in) { 
 long p = in.nextInt();
long q = in.nextInt();
long r = in.nextInt();
long s = in.nextInt();
long[] A = new long[N];
for (int n = 0; n < N; n++) {
    A[n] = (n * p + q) % r + s;
}
long[] best = new long[N];
int beforeHalf = 0;
long beforeHalfSum = 0;
long sum = 0;
return beforeHalfSum;
}


*********************************

#### Score: 3.97412


#### Java Tokens: println, system, split, string, trim, line 

public static double[] func_9c67c7d6aee64322bd546ba81fc30fdb(int n, String line) { 
 System.out.println(line);
String[] ss = line.trim().split(" ");
double[] l = new double[n];
return l;
}


public static String[] func_0ad43d263a4d4d45b74d9545d11cd9b4(int n, String line) { 
 System.out.println(line);
String[] ss = line.trim().split(" ");
double[] l = new double[n];
return ss;
}


public static String[] func_721614ebd5444a7697fbeed6bd5a0e70(String line) { 
 System.out.println(line);
String[] ss = line.trim().split(" ");
return ss;
}


*********************************

#### Score: 3.91566


#### Java Tokens: next, input, nextint, data, e13, mid, sum, cando, int 

public static int func_9037c534e4ec410db781a2944a88a38d(Scanner input) { 
 int n = input.nextInt();
int p = input.nextInt(), q = input.nextInt(), r = input.nextInt(), s = input.nextInt();
int[] data = new int[n];
for (int i = 0; i < n; i++) {
    data[i] = (int) (((long) i * p + q) % r + s);
}
long lo = 1, hi = (long) 1e13;
while (lo < hi - 1) {
    long mid = (lo + hi) / 2;
    // System.out.println(mid);
    if (a.canDo(data, mid))
        hi = mid;
    else
        lo = mid;
}
if (!a.canDo(data, lo))
    lo++;
// System.out.println(lo);
long sum = 0;
return p;
}


public static int func_f958fa0368c44301810cfcb8209b19a1(int n, Scanner input) { 
 int p = input.nextInt(), q = input.nextInt(), r = input.nextInt(), s = input.nextInt();
int[] data = new int[n];
for (int i = 0; i < n; i++) {
    data[i] = (int) (((long) i * p + q) % r + s);
}
long lo = 1, hi = (long) 1e13;
while (lo < hi - 1) {
    long mid = (lo + hi) / 2;
    // System.out.println(mid);
    if (a.canDo(data, mid))
        hi = mid;
    else
        lo = mid;
}
if (!a.canDo(data, lo))
    lo++;
// System.out.println(lo);
long sum = 0;
return s;
}


public static int func_444d1db73c6f403797d3305e7a0a8bb5(Scanner input) { 
 int n = input.nextInt();
int p = input.nextInt(), q = input.nextInt(), r = input.nextInt(), s = input.nextInt();
int[] data = new int[n];
for (int i = 0; i < n; i++) {
    data[i] = (int) (((long) i * p + q) % r + s);
}
long lo = 1, hi = (long) 1e13;
while (lo < hi - 1) {
    long mid = (lo + hi) / 2;
    // System.out.println(mid);
    if (a.canDo(data, mid))
        hi = mid;
    else
        lo = mid;
}
if (!a.canDo(data, lo))
    lo++;
// System.out.println(lo);
long sum = 0;
for (int i = 0; i < n; i++) sum += data[i];
return r;
}


*********************************

#### Score: 3.91566


#### Java Tokens: next, min, nextint, max, sum, j--, math, int, tour 

public static int func_94b1660b52fd4443865eec97994d15df(int n, Scanner in) { 
 int p = in.nextInt(), q = in.nextInt(), r = in.nextInt(), s = in.nextInt();
long sum = 0;
long[] a = new long[n];
for (int i = 0; i < n; i++) {
    a[i] = (((long) i * p + q) % r + s);
    sum += a[i];
}
long min = sum;
long si = 0, sj = 0;
for (int i = 0, j = n - 1; i <= j; ) {
    if (si + a[i] < sj + a[j]) {
        si += a[i++];
    } else {
        sj += a[j--];
    }
    min = Math.min(min, Tour.max(sum - si - sj, si, sj));
}
return s;
}


public static long func_407bff985c0846f2a4527a5f953ad102(Scanner in) { 
 int n = in.nextInt();
int p = in.nextInt(), q = in.nextInt(), r = in.nextInt(), s = in.nextInt();
long sum = 0;
long[] a = new long[n];
for (int i = 0; i < n; i++) {
    a[i] = (((long) i * p + q) % r + s);
    sum += a[i];
}
long min = sum;
long si = 0, sj = 0;
for (int i = 0, j = n - 1; i <= j; ) {
    if (si + a[i] < sj + a[j]) {
        si += a[i++];
    } else {
        sj += a[j--];
    }
    min = Math.min(min, Tour.max(sum - si - sj, si, sj));
}
return sum;
}


public static int func_0e322c7706e04058ac38135165d33c73(int n, Scanner in) { 
 int p = in.nextInt(), q = in.nextInt(), r = in.nextInt(), s = in.nextInt();
long sum = 0;
long[] a = new long[n];
for (int i = 0; i < n; i++) {
    a[i] = (((long) i * p + q) % r + s);
    sum += a[i];
}
long min = sum;
long si = 0, sj = 0;
for (int i = 0, j = n - 1; i <= j; ) {
    if (si + a[i] < sj + a[j]) {
        si += a[i++];
    } else {
        sj += a[j--];
    }
    min = Math.min(min, Tour.max(sum - si - sj, si, sj));
}
return p;
}

