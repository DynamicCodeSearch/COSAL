### Py Tokens: sort, map, zip, int, case, range, split, close, readline, infile 

### Py functions

def func_98befe8e0280459493db7b1e2a8639e7(T, infile):
    for t in range(1, T + 1):
        n = int(infile.readline())
        l = map(int, infile.readline().split())
        p = map(int, infile.readline().split())
        a = zip(l, p, range(n))
        a.sort(lambda x, y: x[0] * y[1] - x[1] * y[0])
        print 'Case #%d:' % t,
        for x in a:
            print x[2],
        print 
    infile.close()
    return T

*********************************

#### Score: 7.78742


#### Java Tokens: next, println, system, nextint, string, solve, close, int, case 

public static PrintWriter func_5f57a2edef1041caa821806cabf7e9d2(PrintWriter out, Scanner in) { 
 int T = in.nextInt();
for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
out.close();
return out;
}


public static PrintWriter func_635e262b1c0747db8dc8487584a21618(PrintWriter out, Scanner in) { 
 int T = in.nextInt();
for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
out.close();
return out;
}


public static PrintWriter func_8a2c51d4894943cfb610a6c0d7c52954(PrintWriter out, Scanner in) { 
 int T = in.nextInt();
for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
out.close();
return out;
}


*********************************

#### Score: 7.78742


#### Java Tokens: next, print, println, nextint, len, oppa, close, int, case 

public static PrintWriter func_4961a51e396740f1a0a0180470083812(int tN, PrintWriter pw, Scanner sc) { 
 for (int tn = 0; tn < tN; tn++) {
    int n = sc.nextInt();
    int[] p = new int[n];
    int[] len = new int[n];
    for (int i = 0; i < n; i++) {
        p[i] = sc.nextInt();
    }
    for (int i = 0; i < n; i++) {
        len[i] = sc.nextInt();
    }
    boolean[] oppa = new boolean[n];
    pw.print("Case #" + (tn + 1) + ":");
    c: for (int i = 0; i < n; i++) {
        int be = -1;
        for (int j = 0; j < n; j++) {
            if (!oppa[j]) {
                if (be == -1 || len[j] * p[be] > len[be] * p[j]) {
                    be = j;
                }
            }
        }
        oppa[be] = true;
        pw.print(" " + be);
    }
    pw.println();
}
pw.close();
return pw;
}


*********************************

#### Score: 7.43857


#### Java Tokens: next, output, sol, input, print, nextint, run, close, int, case 

public static PrintWriter func_1444e94513c44091ae8d288971a555fa(PrintWriter output, Scanner input) { 
 A sol = new A();
int t = input.nextInt();
for (int i = 0; i < t; i++) {
    output.print("Case #" + (i + 1) + ": ");
    sol.run(input, output);
}
input.close();
output.close();
return output;
}


public static A func_65a4334e0eb845aa9b2a100a0d66ce4f(PrintWriter output, Scanner input) { 
 A sol = new A();
int t = input.nextInt();
for (int i = 0; i < t; i++) {
    output.print("Case #" + (i + 1) + ": ");
    sol.run(input, output);
}
input.close();
output.close();
return sol;
}


public static PrintWriter func_3aeadd57bb984c3f8e79c995adee2257(PrintWriter output, Scanner input) { 
 A sol = new A();
int t = input.nextInt();
for (int i = 0; i < t; i++) {
    output.print("Case #" + (i + 1) + ": ");
    sol.run(input, output);
}
input.close();
return output;
}


*********************************

#### Score: 7.43857


#### Java Tokens: next, output, input, sol, print, nextint, run, close, int, case 

public static PrintWriter func_eb1e26ee4713463880a6568f9c8edd62(A sol, PrintWriter output, Scanner input) { 
 int t = input.nextInt();
for (int i = 0; i < t; i++) {
    output.print("Case #" + (i + 1) + ": ");
    sol.run(input, output);
}
input.close();
return output;
}


public static int func_879c93f6d7ae44919b4e10e27ad3420c(A sol, PrintWriter output, Scanner input) { 
 int t = input.nextInt();
for (int i = 0; i < t; i++) {
    output.print("Case #" + (i + 1) + ": ");
    sol.run(input, output);
}
input.close();
output.close();
return t;
}


public static PrintWriter func_cefe389c428946a5aef40a3e840efe00(A sol, PrintWriter output, Scanner input) { 
 int t = input.nextInt();
for (int i = 0; i < t; i++) {
    output.print("Case #" + (i + 1) + ": ");
    sol.run(input, output);
}
input.close();
output.close();
return output;
}


*********************************

#### Score: 7.12131


#### Java Tokens: next, print, println, nextint, len, nextline, line, oppa, close, int, case 

public static PrintWriter func_57a8e7ccd652408899745ab0f694b422(int tN, PrintWriter pw, Scanner sc) { 
 sc.nextLine();
for (int tn = 0; tn < tN; tn++) {
    int n = sc.nextInt();
    int[] p = new int[n];
    int[] len = new int[n];
    for (int i = 0; i < n; i++) {
        p[i] = sc.nextInt();
    }
    for (int i = 0; i < n; i++) {
        len[i] = sc.nextInt();
    }
    boolean[] oppa = new boolean[n];
    pw.print("Case #" + (tn + 1) + ":");
    c: for (int i = 0; i < n; i++) {
        int be = -1;
        for (int j = 0; j < n; j++) {
            if (!oppa[j]) {
                if (be == -1 || len[j] * p[be] > len[be] * p[j]) {
                    be = j;
                }
            }
        }
        oppa[be] = true;
        pw.print(" " + be);
    }
    pw.println();
}
pw.close();
return pw;
}


public static int func_aa0d2a61f895408d9e19bb9a62c12818(PrintWriter pw, Scanner sc) { 
 int tN = sc.nextInt();
sc.nextLine();
for (int tn = 0; tn < tN; tn++) {
    int n = sc.nextInt();
    int[] p = new int[n];
    int[] len = new int[n];
    for (int i = 0; i < n; i++) {
        p[i] = sc.nextInt();
    }
    for (int i = 0; i < n; i++) {
        len[i] = sc.nextInt();
    }
    boolean[] oppa = new boolean[n];
    pw.print("Case #" + (tn + 1) + ":");
    c: for (int i = 0; i < n; i++) {
        int be = -1;
        for (int j = 0; j < n; j++) {
            if (!oppa[j]) {
                if (be == -1 || len[j] * p[be] > len[be] * p[j]) {
                    be = j;
                }
            }
        }
        oppa[be] = true;
        pw.print(" " + be);
    }
    pw.println();
}
pw.close();
return tN;
}


public static PrintWriter func_071c380574ab4774b4afe8840c36e53e(PrintWriter pw, Scanner sc) { 
 int tN = sc.nextInt();
sc.nextLine();
for (int tn = 0; tn < tN; tn++) {
    int n = sc.nextInt();
    int[] p = new int[n];
    int[] len = new int[n];
    for (int i = 0; i < n; i++) {
        p[i] = sc.nextInt();
    }
    for (int i = 0; i < n; i++) {
        len[i] = sc.nextInt();
    }
    boolean[] oppa = new boolean[n];
    pw.print("Case #" + (tn + 1) + ":");
    c: for (int i = 0; i < n; i++) {
        int be = -1;
        for (int j = 0; j < n; j++) {
            if (!oppa[j]) {
                if (be == -1 || len[j] * p[be] > len[be] * p[j]) {
                    be = j;
                }
            }
        }
        oppa[be] = true;
        pw.print(" " + be);
    }
    pw.println();
}
pw.close();
return pw;
}


*********************************

#### Score: 7.05735


#### Java Tokens: println, system, string, solve, close, case 

public static PrintWriter func_97edbcadaa1e4fce96a75ba7c7ce5f7c(int T, PrintWriter out, Scanner in) { 
 for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
out.close();
return out;
}


public static PrintWriter func_3d5d8d6284bd4a7c9b061b4b7e550c8b(int T, PrintWriter out, Scanner in) { 
 for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
out.close();
return out;
}


public static PrintWriter func_d9b019cc717e4c3b8c9b99f9e5d88aa1(int T, PrintWriter out, Scanner in) { 
 for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
out.close();
return out;
}


*********************************

#### Score: 6.69099


#### Java Tokens: output, sol, input, print, run, close, case 

public static A func_824d0ee0873c406db6d4a91abeeb84cf(int t, A sol, PrintWriter output, Scanner input) { 
 for (int i = 0; i < t; i++) {
    output.print("Case #" + (i + 1) + ": ");
    sol.run(input, output);
}
input.close();
return sol;
}


public static A func_255ac3bfd7514c3e999c0421d463e0ad(int t, A sol, PrintWriter output, Scanner input) { 
 for (int i = 0; i < t; i++) {
    output.print("Case #" + (i + 1) + ": ");
    sol.run(input, output);
}
input.close();
output.close();
return sol;
}


public static PrintWriter func_4ba97d86cfb141d8908d3783bd5f689b(int t, A sol, PrintWriter output, Scanner input) { 
 for (int i = 0; i < t; i++) {
    output.print("Case #" + (i + 1) + ": ");
    sol.run(input, output);
}
input.close();
return output;
}


*********************************

#### Score: 5.95766


#### Java Tokens: next, area, println, system, nextint, scan, arrays, sort, point, int, case 

public static double func_bd9e8d6df69647369237e4345fcbc70f(int ca, Scanner scan) { 
 A.a = new Point[A.L + A.U];
A.l = new Point[A.L];
A.u = new Point[A.U];
for (int i = 0; i < A.L; i++) {
    A.l[i] = A.a[i] = new Point(scan.nextInt(), scan.nextInt(), false);
}
for (int i = 0; i < A.U; i++) {
    A.u[i] = A.a[i + A.L] = new Point(scan.nextInt(), scan.nextInt(), true);
}
Arrays.sort(A.a);
System.out.println("Case #" + ca + ":");
// Find total area
double area = A.area(0, A.W);
return area;
}


public static double func_2a34ea0e18e442de966cec9dcdb4a5ff(int ca, Scanner scan) { 
 A.l = new Point[A.L];
A.u = new Point[A.U];
for (int i = 0; i < A.L; i++) {
    A.l[i] = A.a[i] = new Point(scan.nextInt(), scan.nextInt(), false);
}
for (int i = 0; i < A.U; i++) {
    A.u[i] = A.a[i + A.L] = new Point(scan.nextInt(), scan.nextInt(), true);
}
Arrays.sort(A.a);
System.out.println("Case #" + ca + ":");
// Find total area
double area = A.area(0, A.W);
return area;
}


public static double func_2e9d3d3a15f747179f4fdfa79118301d(int ca, Scanner scan) { 
 A.u = new Point[A.U];
for (int i = 0; i < A.L; i++) {
    A.l[i] = A.a[i] = new Point(scan.nextInt(), scan.nextInt(), false);
}
for (int i = 0; i < A.U; i++) {
    A.u[i] = A.a[i + A.L] = new Point(scan.nextInt(), scan.nextInt(), true);
}
Arrays.sort(A.a);
System.out.println("Case #" + ca + ":");
// Find total area
double area = A.area(0, A.W);
return area;
}


*********************************

#### Score: 5.95766


#### Java Tokens: next, area, println, system, nextint, scan, arrays, sort, int, point, case 

public static double func_d6df039c55b540d5b28481a9d5e19faf(int ca, Scanner scan) { 
 A.L = scan.nextInt();
A.U = scan.nextInt();
A.G = scan.nextInt();
A.a = new Point[A.L + A.U];
A.l = new Point[A.L];
A.u = new Point[A.U];
for (int i = 0; i < A.L; i++) {
    A.l[i] = A.a[i] = new Point(scan.nextInt(), scan.nextInt(), false);
}
for (int i = 0; i < A.U; i++) {
    A.u[i] = A.a[i + A.L] = new Point(scan.nextInt(), scan.nextInt(), true);
}
Arrays.sort(A.a);
System.out.println("Case #" + ca + ":");
// Find total area
double area = A.area(0, A.W);
return area;
}


public static double func_ee12f7788d5a41dea11cead152775b5f(int ca, Scanner scan) { 
 A.G = scan.nextInt();
A.a = new Point[A.L + A.U];
A.l = new Point[A.L];
A.u = new Point[A.U];
for (int i = 0; i < A.L; i++) {
    A.l[i] = A.a[i] = new Point(scan.nextInt(), scan.nextInt(), false);
}
for (int i = 0; i < A.U; i++) {
    A.u[i] = A.a[i + A.L] = new Point(scan.nextInt(), scan.nextInt(), true);
}
Arrays.sort(A.a);
System.out.println("Case #" + ca + ":");
// Find total area
double area = A.area(0, A.W);
return area;
}


public static double func_21a554155ac44c14a8d2adc4ca30e088(int ca, Scanner scan) { 
 A.U = scan.nextInt();
A.G = scan.nextInt();
A.a = new Point[A.L + A.U];
A.l = new Point[A.L];
A.u = new Point[A.U];
for (int i = 0; i < A.L; i++) {
    A.l[i] = A.a[i] = new Point(scan.nextInt(), scan.nextInt(), false);
}
for (int i = 0; i < A.U; i++) {
    A.u[i] = A.a[i + A.L] = new Point(scan.nextInt(), scan.nextInt(), true);
}
Arrays.sort(A.a);
System.out.println("Case #" + ca + ":");
// Find total area
double area = A.area(0, A.W);
return area;
}


*********************************

#### Score: 5.71832


#### Java Tokens: next, area, println, system, nextint, scan, arrays, sort, lastx, point, int, case 

public static double func_6b887d75c4dc484692cb1828ec0c0238(int ca, Scanner scan) { 
 A.u = new Point[A.U];
for (int i = 0; i < A.L; i++) {
    A.l[i] = A.a[i] = new Point(scan.nextInt(), scan.nextInt(), false);
}
for (int i = 0; i < A.U; i++) {
    A.u[i] = A.a[i + A.L] = new Point(scan.nextInt(), scan.nextInt(), true);
}
Arrays.sort(A.a);
System.out.println("Case #" + ca + ":");
// Find total area
double area = A.area(0, A.W);
double lastx = 0;
return area;
}


public static double func_dcf2f2ec3fa7479cb21c2ee20b0f4c76(int ca, Scanner scan) { 
 for (int i = 0; i < A.U; i++) {
    A.u[i] = A.a[i + A.L] = new Point(scan.nextInt(), scan.nextInt(), true);
}
Arrays.sort(A.a);
System.out.println("Case #" + ca + ":");
// Find total area
double area = A.area(0, A.W);
double lastx = 0;
return area;
}


public static double func_7a700a5b95fe4bd7b3dea47eb1c7a031(int ca, Scanner scan) { 
 for (int i = 0; i < A.L; i++) {
    A.l[i] = A.a[i] = new Point(scan.nextInt(), scan.nextInt(), false);
}
for (int i = 0; i < A.U; i++) {
    A.u[i] = A.a[i + A.L] = new Point(scan.nextInt(), scan.nextInt(), true);
}
Arrays.sort(A.a);
System.out.println("Case #" + ca + ":");
// Find total area
double area = A.area(0, A.W);
double lastx = 0;
return lastx;
}

