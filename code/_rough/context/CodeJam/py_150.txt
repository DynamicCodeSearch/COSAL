### Py Tokens: map, lower, float, append, range, low, readline, infile, upp, split 

### Py functions

def func_39ec589153c5443da961772c39fc18fd(L, U, i, infile):
    Low = []
    Lx = []
    Upp = []
    Ux = []
    for i in range(L):
        Low.append(map(float, infile.readline().split()))
        Lx.append(Low[-1][0])
    for i in range(U):
        Upp.append(map(float, infile.readline().split()))
        Ux.append(Upp[-1][0])
    Lower = []
    return Lower

def func_1ad782c476344718961570f9297b5874(L, Low, U, i, infile):
    Lx = []
    Upp = []
    Ux = []
    for i in range(L):
        Low.append(map(float, infile.readline().split()))
        Lx.append(Low[-1][0])
    for i in range(U):
        Upp.append(map(float, infile.readline().split()))
        Ux.append(Upp[-1][0])
    Lower = []
    return Upp

def func_03255c74fd224dceac4e14d28316baf6(L, Low, U, i, infile):
    Lx = []
    Upp = []
    Ux = []
    for i in range(L):
        Low.append(map(float, infile.readline().split()))
        Lx.append(Low[-1][0])
    for i in range(U):
        Upp.append(map(float, infile.readline().split()))
        Ux.append(Upp[-1][0])
    Lower = []
    return Low

def func_2baadc8a14fc4d44b4ae4c94b38d009d(L, U, i, infile):
    Low = []
    Lx = []
    Upp = []
    Ux = []
    for i in range(L):
        Low.append(map(float, infile.readline().split()))
        Lx.append(Low[-1][0])
    for i in range(U):
        Upp.append(map(float, infile.readline().split()))
        Ux.append(Upp[-1][0])
    Lower = []
    return Upp

def func_31df0973e12f4554b0844f0d3e023bb8(L, U, i, infile):
    Low = []
    Lx = []
    Upp = []
    Ux = []
    for i in range(L):
        Low.append(map(float, infile.readline().split()))
        Lx.append(Low[-1][0])
    for i in range(U):
        Upp.append(map(float, infile.readline().split()))
        Ux.append(Upp[-1][0])
    Lower = []
    return Low

*********************************

#### Score: 4.85862


#### Java Tokens: cur, curlow, curl, low, lowx, prev, lower, get, prevlow, point 

public static int func_0f5e38f971ac4889af173b174ef37e46(int curL, ArrayList<Point> lower, Point curLow) { 
 Point prevLow = lower.get(curL - 1);
int lowX = curLow.x;
return lowX;
}


*********************************

#### Score: 4.50978


#### Java Tokens: low 

public static int func_87c336c8121e4ac78534cf90a7b2649c(int y0, int x0, int x, double k, double[] low) { 
 for (int j = x0 + 1; j <= x; j++) {
    low[j] = k * (j - x0) + y0;
}
x0 = x;
return x0;
}


public static double func_0d63fab717d44d14826d1ee13a3c94b1(int y0, int x0, int x, int y, double[] low) { 
 double k = 1.0 * (y - y0) / (x - x0);
for (int j = x0 + 1; j <= x; j++) {
    low[j] = k * (j - x0) + y0;
}
x0 = x;
return k;
}


public static int func_d75ab25010e74abebc25c10ef89f569d(int y0, int x0, int x, int y, double[] low) { 
 double k = 1.0 * (y - y0) / (x - x0);
for (int j = x0 + 1; j <= x; j++) {
    low[j] = k * (j - x0) + y0;
}
x0 = x;
y0 = y;
return y0;
}


*********************************

#### Score: 4.47520


#### Java Tokens: cur, curlow, curup, curl, low, lowx, prev, lower, get, prevlow, upx, point 

public static int func_9f279d86439649da8e846ebc4962b3cf(int curL, ArrayList<Point> lower, Point curLow, Point curUp) { 
 Point prevLow = lower.get(curL - 1);
int lowX = curLow.x;
int upX = curUp.x;
return lowX;
}


public static int func_8614b46e9e27411d859512c80c59fa39(int curL, ArrayList<Point> lower, Point curLow, Point curUp) { 
 Point prevLow = lower.get(curL - 1);
int lowX = curLow.x;
int upX = curUp.x;
return upX;
}


*********************************

#### Score: 4.44365


#### Java Tokens: split, string, trim, line 

public static double[] func_de3a96ea49a441999168791bd2f96e09(int n, String line) { 
 String[] ss = line.trim().split(" ");
double[] l = new double[n];
return l;
}


public static String[] func_b4974e8e9363455792fd54d845a37f4a(int n, String line) { 
 String[] ss = line.trim().split(" ");
double[] l = new double[n];
return ss;
}


*********************************

#### Score: 4.44365


#### Java Tokens: split, trim, \s+, line 

public static String[] func_25b90e8e1098474fac3336d0bce37fc5(String line) { 
 if (line == null)
    return null;
return line.trim().split("\\s+");

}


public static String[] func_1f59c1d4a9344a6b853d00f3689bb53e(String line) { 
 if (line == null)
    return null;
return line.trim().split("\\s+");

}


*********************************

#### Score: 4.30738


#### Java Tokens: curlow, cur, curl, lower, prev, upper, prevlow, point, low, lowx, get, prevup, curu 

public static int func_08b4d5d444284d22b44d2bf378e98ffe(int curU, int curL, ArrayList<Point> lower, ArrayList<Point> upper) { 
 Point curLow = lower.get(curL);
Point prevUp = upper.get(curU - 1);
Point prevLow = lower.get(curL - 1);
int lowX = curLow.x;
return lowX;
}


*********************************

#### Score: 4.30738


#### Java Tokens: cur, curlow, curl, prev, upper, lower, prevlow, point, low, lowx, get, prevup, curu 

public static int func_a0101918e30a483fa5eea6d518d4d558(int curU, int curL, ArrayList<Point> lower, ArrayList<Point> upper, Point curLow) { 
 Point prevUp = upper.get(curU - 1);
Point prevLow = lower.get(curL - 1);
int lowX = curLow.x;
return lowX;
}


*********************************

#### Score: 4.19815


#### Java Tokens: low, events 

public static int func_9aebe4363cfb4f959f7505a0b8f33c1f(int i, int a, int[] events, A.Point[] low) { 
 int x2 = events[i + 1];
if (low[a + 1].x < x2) {
    ++a;
}
return x2;
}


public static int func_3e76f72a7d1b411893e84f35cff08c1b(int i, int a, int[] events, A.Point[] low) { 
 int x1 = events[i];
int x2 = events[i + 1];
if (low[a + 1].x < x2) {
    ++a;
}
return x1;
}


public static int func_ea04d61d78524f7d925fff3a9ccbf7e7(int i, int a, int[] events, A.Point[] low) { 
 int x1 = events[i];
int x2 = events[i + 1];
if (low[a + 1].x < x2) {
    ++a;
}
return x2;
}


*********************************

#### Score: 4.19815


#### Java Tokens: high, low 

public static int func_f388707605144796a4b526fe90630b7b(long high, long low) { 
 long m = (low + high) / 2;
int i = 0;
long x = 0;
return i;
}


public static long func_4095026e27114ba9a8e9a5cc355f034b(long high, long low) { 
 long m = (low + high) / 2;
int i = 0;
long x = 0;
return m;
}


public static double func_d2d97269ac5346cdaada845feea25bbc(int W) { 
 double low = 0;
double high = W;
return high;
}


*********************************

#### Score: 4.19815


#### Java Tokens: low, pref 

public static long func_d76bbdc2405348bbaf48b1662238610a(int n, int[] a) { 
 long[] pref = new long[n + 1];
for (int i = 0; i < n; i++) {
    pref[i + 1] = pref[i] + a[i];
}
// System.out.println(Arrays.toString(pref));
// System.out.println(Arrays.toString(a));
// can't
long low = 0;
return low;
}


public static long func_c651a2bb71e44c869906dcbc3ef46d1e(int n, int[] a, long[] pref) { 
 for (int i = 0; i < n; i++) {
    pref[i + 1] = pref[i] + a[i];
}
// System.out.println(Arrays.toString(pref));
// System.out.println(Arrays.toString(a));
// can't
long low = 0;
return low;
}


public static long func_2b3fe71c51e64128b7b0c68bf7ab985f(int n, int r, int s, int q, int p) { 
 int[] a = new int[n];
for (int i = 0; i < n; i++) {
    a[i] = (int) (((long) i * p + q) % r + s);
}
long[] pref = new long[n + 1];
for (int i = 0; i < n; i++) {
    pref[i + 1] = pref[i] + a[i];
}
// System.out.println(Arrays.toString(pref));
// System.out.println(Arrays.toString(a));
// can't
long low = 0;
return low;
}

