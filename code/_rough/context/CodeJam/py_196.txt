### Py Tokens: slope, area, uppslope, lowslope, height 

### Py functions

def func_12e30d6ebfb24538a5edaf92eac7963c(area, height, lowslope, uppslope):
    slope = uppslope - lowslope
    area += height + slope / 2
    height += slope
    return area

def func_effcc3a35e184ea4b43cbb7117a15df7(area, height, lowslope, uppslope):
    slope = uppslope - lowslope
    area += height + slope / 2
    height += slope
    return height

def func_6141f97b70c343749db0c3e60ca5c3e1(area, height, lowslope, uppslope):
    slope = uppslope - lowslope
    area += height + slope / 2
    height += slope
    return slope

def func_665291173a65477ebd95f5b4c5e26f57(area, height, lowslope, uppslope):
    slope = uppslope - lowslope
    area += height + slope / 2
    return area

def func_201bc8901e69401780a16722574a085a(area, height, lowslope, uppslope):
    slope = uppslope - lowslope
    area += height + slope / 2
    return area

*********************************

#### Score: 6.22017


#### Java Tokens: area, cur, thisheight, total, curheight, totalarea, height 

public static double func_b957b488707b4459aa30c1213127f664(int curX, double curHeight, double totalArea, double lastX, double thisHeight) { 
 totalArea += (1.0 * curHeight + thisHeight) / 2 * (curX - lastX);
// //System.out.println("dist: " + (curX-lastX));
// //System.out.println("newHeight: " + thisHeight);
// //System.out.println("oldHeight: " + curHeight);
curHeight = thisHeight;
return curHeight;
}


public static double func_2a9ec32a68c645dd86ea9c05fef13140(int curX, double curHeight, double totalArea, double lastX, double thisHeight) { 
 totalArea += (1.0 * curHeight + thisHeight) / 2 * (curX - lastX);
// //System.out.println("dist: " + (curX-lastX));
// //System.out.println("newHeight: " + thisHeight);
// //System.out.println("oldHeight: " + curHeight);
curHeight = thisHeight;
return totalArea;
}


public static double func_db1fd0fb7ff54fb5b94be1f44611aa8e(int lastX, int curX, double thisHeight, double totalArea, double curHeight) { 
 totalArea += (1.0 * curHeight + thisHeight) / 2 * (curX - lastX);
// System.out.println("dist: " + (curX-lastX));
// System.out.println("newHeight: " + thisHeight);
// System.out.println("oldHeight: " + curHeight);
curHeight = thisHeight;
return totalArea;
}


*********************************

#### Score: 6.22017


#### Java Tokens: area, cur, total, curheight, upheight, totalarea, height 

public static double func_4764651797494e2aab3d61d0f22a7c53(int curX, double curHeight, double totalArea, double upHeight, double lastX) { 
 totalArea += ((1.0 * curHeight) + upHeight) / 2 * (curX - lastX);
// //System.out.println("dist: " + (curX-lastX));
// //System.out.println("newHeight: " + upHeight);
// //System.out.println("oldHeight: " + curHeight);
curHeight = upHeight;
return curHeight;
}


public static double func_237e1879599d4bf8a867139145155fd8(int lastX, int curX, double totalArea, double curHeight, double upHeight) { 
 totalArea += ((1.0 * curHeight) + upHeight) / 2 * (curX - lastX);
// System.out.println("dist: " + (curX-lastX));
// System.out.println("newHeight: " + upHeight);
// System.out.println("oldHeight: " + curHeight);
curHeight = upHeight;
return totalArea;
}


public static double func_8b2c128f0c5e483485d2c036bdc710f3(int curX, double curHeight, double totalArea, double upHeight, double lastX) { 
 totalArea += ((1.0 * curHeight) + upHeight) / 2 * (curX - lastX);
// //System.out.println("dist: " + (curX-lastX));
// //System.out.println("newHeight: " + upHeight);
// //System.out.println("oldHeight: " + curHeight);
curHeight = upHeight;
return totalArea;
}


*********************************

#### Score: 5.91689


#### Java Tokens: area, cur, total, lowheight, low, curheight, totalarea, height 

public static double func_4a5728a556d949c19bdd4b3eb3db7f2a(int lastX, int curX, double totalArea, double lowHeight, double curHeight) { 
 totalArea += ((1.0 * curHeight) + lowHeight) / 2 * (curX - lastX);
// System.out.println("dist: " + (curX-lastX));
// System.out.println("newHeight: " + lowHeight);
// System.out.println("oldHeight: " + curHeight);
curHeight = lowHeight;
return curHeight;
}


public static double func_d025967e905b49f8b6baa263b642af50(int curX, double curHeight, double totalArea, double lastX, double lowHeight) { 
 totalArea += ((1.0 * curHeight) + lowHeight) / 2 * (curX - lastX);
// //System.out.println("dist: " + (curX-lastX));
// //System.out.println("newHeight: " + lowHeight);
// //System.out.println("oldHeight: " + curHeight);
curHeight = lowHeight;
return curHeight;
}


public static double func_9393bf25c4cd4f95941386069c799410(int curX, double curHeight, double totalArea, double lastX, double lowHeight) { 
 totalArea += ((1.0 * curHeight) + lowHeight) / 2 * (curX - lastX);
// //System.out.println("dist: " + (curX-lastX));
// //System.out.println("newHeight: " + lowHeight);
// //System.out.println("oldHeight: " + curHeight);
curHeight = lowHeight;
return totalArea;
}


*********************************

#### Score: 5.39668


#### Java Tokens: area, cur, thisheight, total, last, curx, curheight, totalarea, lastx, height 

public static double func_35ace46eecba4b05ae26f83c5134d115(int lastX, int curX, double thisHeight, double totalArea, double curHeight) { 
 totalArea += (1.0 * curHeight + thisHeight) / 2 * (curX - lastX);
// System.out.println("dist: " + (curX-lastX));
// System.out.println("newHeight: " + thisHeight);
// System.out.println("oldHeight: " + curHeight);
curHeight = thisHeight;
lastX = curX;
return totalArea;
}


public static double func_dbb50486bf044c9f8a256755a3c8a1fb(int lastX, int curX, double thisHeight, double totalArea, double curHeight) { 
 totalArea += (1.0 * curHeight + thisHeight) / 2 * (curX - lastX);
// System.out.println("dist: " + (curX-lastX));
// System.out.println("newHeight: " + thisHeight);
// System.out.println("oldHeight: " + curHeight);
curHeight = thisHeight;
lastX = curX;
return curHeight;
}


public static double func_894df05853e74f6aaf71f4eb89ee00c4(int curX, double curHeight, double totalArea, double lastX, double thisHeight) { 
 totalArea += (1.0 * curHeight + thisHeight) / 2 * (curX - lastX);
// //System.out.println("dist: " + (curX-lastX));
// //System.out.println("newHeight: " + thisHeight);
// //System.out.println("oldHeight: " + curHeight);
curHeight = thisHeight;
lastX = curX;
return totalArea;
}


*********************************

#### Score: 5.39668


#### Java Tokens: area, cur, total, last, curx, curheight, upheight, totalarea, lastx, height 

public static double func_44d95011be41478f94cd2dd1465e5aab(int lastX, int curX, double totalArea, double curHeight, double upHeight) { 
 totalArea += ((1.0 * curHeight) + upHeight) / 2 * (curX - lastX);
// System.out.println("dist: " + (curX-lastX));
// System.out.println("newHeight: " + upHeight);
// System.out.println("oldHeight: " + curHeight);
curHeight = upHeight;
lastX = curX;
return totalArea;
}


public static double func_bc92b25cb8a746c5b9f62c8212d89207(int curX, double curHeight, double totalArea, double upHeight, double lastX) { 
 totalArea += ((1.0 * curHeight) + upHeight) / 2 * (curX - lastX);
// //System.out.println("dist: " + (curX-lastX));
// //System.out.println("newHeight: " + upHeight);
// //System.out.println("oldHeight: " + curHeight);
curHeight = upHeight;
lastX = curX;
return curHeight;
}


public static int func_e362de8080fe4e809b6eb7f30397a2f0(int lastX, int curX, double totalArea, double curHeight, double upHeight) { 
 totalArea += ((1.0 * curHeight) + upHeight) / 2 * (curX - lastX);
// System.out.println("dist: " + (curX-lastX));
// System.out.println("newHeight: " + upHeight);
// System.out.println("oldHeight: " + curHeight);
curHeight = upHeight;
lastX = curX;
return lastX;
}


*********************************

#### Score: 5.17191


#### Java Tokens: area, cur, total, lowheight, last, low, curx, curheight, totalarea, lastx, height 

public static double func_c300758cd5884f1a9bb1434118e60ca5(int lastX, int curX, double totalArea, double lowHeight, double curHeight) { 
 totalArea += ((1.0 * curHeight) + lowHeight) / 2 * (curX - lastX);
// System.out.println("dist: " + (curX-lastX));
// System.out.println("newHeight: " + lowHeight);
// System.out.println("oldHeight: " + curHeight);
curHeight = lowHeight;
lastX = curX;
return totalArea;
}


public static double func_cf3a7f89c2334fbc92a71a52a0675195(int curX, double curHeight, double totalArea, double lastX, double lowHeight) { 
 totalArea += ((1.0 * curHeight) + lowHeight) / 2 * (curX - lastX);
// //System.out.println("dist: " + (curX-lastX));
// //System.out.println("newHeight: " + lowHeight);
// //System.out.println("oldHeight: " + curHeight);
curHeight = lowHeight;
lastX = curX;
return totalArea;
}


public static double func_e5fdcac1e06440aaacb388cac9e82856(int lastX, int curX, double totalArea, double lowHeight, double curHeight) { 
 totalArea += ((1.0 * curHeight) + lowHeight) / 2 * (curX - lastX);
// System.out.println("dist: " + (curX-lastX));
// System.out.println("newHeight: " + lowHeight);
// System.out.println("oldHeight: " + curHeight);
curHeight = lowHeight;
lastX = curX;
return curHeight;
}


*********************************

#### Score: 5.06137


#### Java Tokens: width, exp, height 

public static double func_894551d7df1740048adf5d1d0ac4acdd(int width, int j, long height) { 
 double exp = 0;
for (int k = 0; k < width - j; ++k) {
    exp += 36.0 * (height - A.X[k]) / (width - j);
}
return exp;
}


*********************************

#### Score: 4.96662


#### Java Tokens: area, cur, total, curl, last, upper, lower, curheight, curu, totalarea, lastx, height 

public static double func_1dd563f992634ab9877d155fc922a965(Point[] upper, Point[] lower) { 
 double totalArea = 0.0;
int curL = 1;
int curU = 1;
int lastX = 0;
double curHeight = 1.0 * upper[0].y - lower[0].y;
return totalArea;
}


public static int func_a7d464825165439088df7c0b77e845d7(Point[] upper, Point[] lower) { 
 double totalArea = 0.0;
int curL = 1;
int curU = 1;
int lastX = 0;
double curHeight = 1.0 * upper[0].y - lower[0].y;
return curL;
}


public static int func_7732ef7e3ca047ba8e1559171c43499e(Point[] upper, Point[] lower) { 
 double totalArea = 0.0;
int curL = 1;
int curU = 1;
int lastX = 0;
double curHeight = 1.0 * upper[0].y - lower[0].y;
return lastX;
}


*********************************

#### Score: 4.60517


#### Java Tokens: area, cur, curl, last, upper, lower, totalarea, total, size, get, curheight, curu, lastx, height 

public static int func_e3e70a58ce7d44b4bbbebf18cbfe1638(ArrayList<Point> lower, ArrayList<Point> upper) { 
 double curHeight = 1.0 * upper.get(0).y - lower.get(0).y;
int curU = 1;
int curL = 1;
int u = upper.size();
int l = lower.size();
double lastX = 0;
double totalArea = 0.0;
return curU;
}


public static int func_1159e87b8394469dbe07e868e6ab86db(ArrayList<Point> lower, ArrayList<Point> upper) { 
 double curHeight = 1.0 * upper.get(0).y - lower.get(0).y;
int curU = 1;
int curL = 1;
int u = upper.size();
int l = lower.size();
double lastX = 0;
double totalArea = 0.0;
return curL;
}


public static double func_c499649c1d754c51988f784b1c3fbd18(ArrayList<Point> lower, ArrayList<Point> upper) { 
 double curHeight = 1.0 * upper.get(0).y - lower.get(0).y;
int curU = 1;
int curL = 1;
int u = upper.size();
int l = lower.size();
double lastX = 0;
double totalArea = 0.0;
return curHeight;
}


*********************************

#### Score: 4.29711


#### Java Tokens: next, area, cur, curl, nextint, last, lower, upper, totalarea, int, point, total, curheight, curu, lastx, height 

public static int func_b363d81b7db24d88aa47ff9337aeccbc(Scanner in) { 
 // lower points
int l = in.nextInt();
// upper points
int u = in.nextInt();
int // guests
g = in.nextInt();
Point[] lower = new Point[l];
for (int i = 0; i < l; ++i) {
    lower[i] = new Point(in.nextInt(), in.nextInt());
}
Point[] upper = new Point[u];
for (int i = 0; i < u; ++i) {
    upper[i] = new Point(in.nextInt(), in.nextInt());
}
double totalArea = 0.0;
int curL = 1;
int curU = 1;
int lastX = 0;
double curHeight = 1.0 * upper[0].y - lower[0].y;
return curU;
}


public static int func_395729f336cd48f58b71b0fb1151759b(Scanner in) { 
 // lower points
int l = in.nextInt();
// upper points
int u = in.nextInt();
int // guests
g = in.nextInt();
Point[] lower = new Point[l];
for (int i = 0; i < l; ++i) {
    lower[i] = new Point(in.nextInt(), in.nextInt());
}
Point[] upper = new Point[u];
for (int i = 0; i < u; ++i) {
    upper[i] = new Point(in.nextInt(), in.nextInt());
}
double totalArea = 0.0;
int curL = 1;
int curU = 1;
int lastX = 0;
double curHeight = 1.0 * upper[0].y - lower[0].y;
return u;
}


public static int func_8f57eaec01fb4c858842b9b53a4f79db(Scanner in) { 
 int // width
w = in.nextInt();
// lower points
int l = in.nextInt();
// upper points
int u = in.nextInt();
int // guests
g = in.nextInt();
Point[] lower = new Point[l];
for (int i = 0; i < l; ++i) {
    lower[i] = new Point(in.nextInt(), in.nextInt());
}
Point[] upper = new Point[u];
for (int i = 0; i < u; ++i) {
    upper[i] = new Point(in.nextInt(), in.nextInt());
}
double totalArea = 0.0;
int curL = 1;
int curU = 1;
int lastX = 0;
double curHeight = 1.0 * upper[0].y - lower[0].y;
return curU;
}

