### Py Tokens: files, int, lineno, test, y13r5p1, open, lines, codejam 

### Py functions

def func_f2aed6d14a60464f9ee85484cd6bd390(lines):
    c = int(lines[0])
    f = open('codejam/test_files/Y13R5P1/A.out', 'w')
    lineno = 1
    return c

def func_a2a7944e071745bab6b503b9ace33854(lines):
    c = int(lines[0])
    f = open('codejam/test_files/Y13R5P1/A.out', 'w')
    lineno = 1
    return f

*********************************

#### Score: 6.33727


#### Java Tokens: next, println, test, nextint, case, int 

public static PrintWriter func_c8c26e20c8264cafb4030a5259e90a7a(int test, PrintWriter pw, Scanner sc) { 
 pw.println("Case #" + test + ": ");
int w = sc.nextInt();
int l = sc.nextInt();
int u = sc.nextInt();
int g = sc.nextInt();
double sl = 0;
double su = 0;
return pw;
}


public static PrintWriter func_a9e112db93b3410f9a8ef0d6f76e8385(int test, PrintWriter pw, Scanner sc) { 
 pw.println("Case #" + test + ": ");
int w = sc.nextInt();
return pw;
}


public static double func_571532e9809f41ef811e496f09f58193(int test, PrintWriter pw, Scanner sc) { 
 pw.println("Case #" + test + ": ");
int w = sc.nextInt();
int l = sc.nextInt();
int u = sc.nextInt();
int g = sc.nextInt();
double sl = 0;
double su = 0;
return sl;
}


*********************************

#### Score: 5.71845


#### Java Tokens: next, test, nextint, ans, gtest, nextlong, long, int 

public static long func_eeb633c697fb48d1958ca21ec80af71c(int test) { 
 A.gtest = test;
A.ans = 0;
long B = A.nextLong();
int n = A.nextInt();
return B;
}


public static int func_1ac5b6e77c8d4fbbb246f28d15f302e8(int test) { 
 A.gtest = test;
A.ans = 0;
long B = A.nextLong();
int n = A.nextInt();
return n;
}


*********************************

#### Score: 5.65660


#### Java Tokens: next, codejam_round3_a, input, code, nextint, round, jam, lower, codejam, int 

public static int func_763f6ee63677495a9560e77acd16ddfd(Scanner input) { 
 int L = input.nextInt();
int U = input.nextInt();
int G = input.nextInt();
CodeJam_Round3_A.lower = new double[L][2];
return G;
}


public static int func_06de042590ec4be3a95ac02481f3a74b(int L, Scanner input) { 
 int U = input.nextInt();
int G = input.nextInt();
CodeJam_Round3_A.lower = new double[L][2];
return G;
}


public static int func_00056b5954fc4252ad0048cfc8921a16(int L, Scanner input) { 
 int U = input.nextInt();
int G = input.nextInt();
CodeJam_Round3_A.lower = new double[L][2];
return U;
}


*********************************

#### Score: 5.50261


#### Java Tokens: test, i-- 

public static boolean func_ff1ef8a15ff54714a9f41133c41dce62(int i) { 
 i--;
boolean test = false;
return test;
}


*********************************

#### Score: 5.45527


#### Java Tokens: next, test, nextint, left, ans, gtest, nextlong, long, int 

public static int func_d5a36b22764348bc99c358f58d8fbc6e(int test) { 
 A.gtest = test;
A.ans = 0;
long B = A.nextLong();
int n = A.nextInt();
long[] left = new long[A.C];
return n;
}


public static long func_b75eff31377d492dbe8d88e0be2d80c4(int test) { 
 A.gtest = test;
A.ans = 0;
long B = A.nextLong();
int n = A.nextInt();
long[] left = new long[A.C];
for (int i = 0; i < n; i++) {
    left[i] = A.nextLong();
}
return B;
}


public static int func_be1574f24a4b433ebf3041c148520ed7(int test) { 
 A.gtest = test;
A.ans = 0;
long B = A.nextLong();
int n = A.nextInt();
long[] left = new long[A.C];
for (int i = 0; i < n; i++) {
    left[i] = A.nextLong();
}
return n;
}


*********************************

#### Score: 5.20403


#### Java Tokens: next, codejam_round3_a, input, nextdouble, code, nextint, round, double, jam, lower, codejam, int 

public static int func_ad4ec64d20174b498b164ae4adf0e791(Scanner input) { 
 int W = input.nextInt();
int L = input.nextInt();
int U = input.nextInt();
int G = input.nextInt();
CodeJam_Round3_A.lower = new double[L][2];
for (int i = 0; i < L; i++) {
    CodeJam_Round3_A.lower[i][0] = input.nextDouble();
    CodeJam_Round3_A.lower[i][1] = input.nextDouble();
}
return U;
}


public static int func_9d6e96868a844092a34596f5d3391f65(int L, Scanner input) { 
 int G = input.nextInt();
CodeJam_Round3_A.lower = new double[L][2];
for (int i = 0; i < L; i++) {
    CodeJam_Round3_A.lower[i][0] = input.nextDouble();
    CodeJam_Round3_A.lower[i][1] = input.nextDouble();
}
return G;
}


public static int func_5595b44893274dae82611667254a4a37(Scanner input) { 
 int L = input.nextInt();
int U = input.nextInt();
int G = input.nextInt();
CodeJam_Round3_A.lower = new double[L][2];
for (int i = 0; i < L; i++) {
    CodeJam_Round3_A.lower[i][0] = input.nextDouble();
    CodeJam_Round3_A.lower[i][1] = input.nextDouble();
}
return U;
}


*********************************

#### Score: 5.00593


#### Java Tokens: next, codejam_round3_a, nextdouble, code, nextint, double, lower, upper, codejam, int, input, round, jam 

public static int func_c6c3edd779ee4dd283afaab6f13acfaa(int L, Scanner input) { 
 int U = input.nextInt();
int G = input.nextInt();
CodeJam_Round3_A.lower = new double[L][2];
for (int i = 0; i < L; i++) {
    CodeJam_Round3_A.lower[i][0] = input.nextDouble();
    CodeJam_Round3_A.lower[i][1] = input.nextDouble();
}
CodeJam_Round3_A.upper = new double[U][2];
for (int i = 0; i < U; i++) {
    CodeJam_Round3_A.upper[i][0] = input.nextDouble();
    CodeJam_Round3_A.upper[i][1] = input.nextDouble();
}
double g = G;
return G;
}


public static int func_7cd5c4d7750546a08c47c301bf28d3d3(Scanner input) { 
 int L = input.nextInt();
int U = input.nextInt();
int G = input.nextInt();
CodeJam_Round3_A.lower = new double[L][2];
for (int i = 0; i < L; i++) {
    CodeJam_Round3_A.lower[i][0] = input.nextDouble();
    CodeJam_Round3_A.lower[i][1] = input.nextDouble();
}
CodeJam_Round3_A.upper = new double[U][2];
return G;
}


public static int func_a860cd43bd6744adb1736bcbc71ffb10(Scanner input) { 
 int L = input.nextInt();
int U = input.nextInt();
int G = input.nextInt();
CodeJam_Round3_A.lower = new double[L][2];
for (int i = 0; i < L; i++) {
    CodeJam_Round3_A.lower[i][0] = input.nextDouble();
    CodeJam_Round3_A.lower[i][1] = input.nextDouble();
}
CodeJam_Round3_A.upper = new double[U][2];
for (int i = 0; i < U; i++) {
    CodeJam_Round3_A.upper[i][0] = input.nextDouble();
    CodeJam_Round3_A.upper[i][1] = input.nextDouble();
}
return L;
}


*********************************

#### Score: 5.00043


#### Java Tokens: next, nextdouble, println, nextint, test, double, baia, bai, calc, int, case 

public static PrintWriter func_f62fff2b6f254ee39c4b0b5487ec2977(int test, PrintWriter pw, Scanner sc) { 
 BaiA.W = sc.nextDouble();
BaiA.L = sc.nextInt();
BaiA.U = sc.nextInt();
BaiA.G = sc.nextInt();
BaiA.xl = new double[BaiA.L];
BaiA.yl = new double[BaiA.L];
BaiA.xu = new double[BaiA.U];
BaiA.yu = new double[BaiA.U];
for (int i = 0; i < BaiA.L; ++i) {
    BaiA.xl[i] = sc.nextDouble();
    BaiA.yl[i] = sc.nextDouble();
}
for (int i = 0; i < BaiA.U; ++i) {
    BaiA.xu[i] = sc.nextDouble();
    BaiA.yu[i] = sc.nextDouble();
}
double S = -(BaiA.calc(BaiA.W, BaiA.L, BaiA.xl, BaiA.yl) - BaiA.calc(BaiA.W, BaiA.U, BaiA.xu, BaiA.yu)) / BaiA.G;
// System.out.println(S);
pw.println("Case #" + test + ":");
return pw;
}


public static double func_353f07a48d8e44cba58b820488e3f9f4(int test, PrintWriter pw, Scanner sc) { 
 BaiA.U = sc.nextInt();
BaiA.G = sc.nextInt();
BaiA.xl = new double[BaiA.L];
BaiA.yl = new double[BaiA.L];
BaiA.xu = new double[BaiA.U];
BaiA.yu = new double[BaiA.U];
for (int i = 0; i < BaiA.L; ++i) {
    BaiA.xl[i] = sc.nextDouble();
    BaiA.yl[i] = sc.nextDouble();
}
for (int i = 0; i < BaiA.U; ++i) {
    BaiA.xu[i] = sc.nextDouble();
    BaiA.yu[i] = sc.nextDouble();
}
double S = -(BaiA.calc(BaiA.W, BaiA.L, BaiA.xl, BaiA.yl) - BaiA.calc(BaiA.W, BaiA.U, BaiA.xu, BaiA.yu)) / BaiA.G;
// System.out.println(S);
pw.println("Case #" + test + ":");
return S;
}


public static PrintWriter func_d4305ecac25242d2ad55f9ddf3671ab0(int test, PrintWriter pw, Scanner sc) { 
 BaiA.L = sc.nextInt();
BaiA.U = sc.nextInt();
BaiA.G = sc.nextInt();
BaiA.xl = new double[BaiA.L];
BaiA.yl = new double[BaiA.L];
BaiA.xu = new double[BaiA.U];
BaiA.yu = new double[BaiA.U];
for (int i = 0; i < BaiA.L; ++i) {
    BaiA.xl[i] = sc.nextDouble();
    BaiA.yl[i] = sc.nextDouble();
}
for (int i = 0; i < BaiA.U; ++i) {
    BaiA.xu[i] = sc.nextDouble();
    BaiA.yu[i] = sc.nextDouble();
}
double S = -(BaiA.calc(BaiA.W, BaiA.L, BaiA.xl, BaiA.yl) - BaiA.calc(BaiA.W, BaiA.U, BaiA.xu, BaiA.yu)) / BaiA.G;
// System.out.println(S);
pw.println("Case #" + test + ":");
return pw;
}


*********************************

#### Score: 5.00043


#### Java Tokens: next, test, nextint, left, ans, gtest, arrays, sort, nextlong, long, int 

public static int func_da8612e0570f48fc8bec0e0d8324d153(int test) { 
 A.gtest = test;
A.ans = 0;
long B = A.nextLong();
int n = A.nextInt();
long[] left = new long[A.C];
for (int i = 0; i < n; i++) {
    left[i] = A.nextLong();
}
Arrays.sort(left);
return n;
}


public static long func_a8a4b8bcec5d409eaabcb114485d1ddf(int test) { 
 A.gtest = test;
A.ans = 0;
long B = A.nextLong();
int n = A.nextInt();
long[] left = new long[A.C];
for (int i = 0; i < n; i++) {
    left[i] = A.nextLong();
}
Arrays.sort(left);
return B;
}


*********************************

#### Score: 4.83033


#### Java Tokens: println, test, main, case 

public static double func_7f62d660f6d1458286abfc9de86d8e40(int test) { 
 double s = 0;
Main.out.println("Case #" + test + ": ");
return s;
}

