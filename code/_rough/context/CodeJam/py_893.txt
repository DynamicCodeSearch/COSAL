### Py Tokens: part1, range, part, solve, items, problem, sum 

### Py functions

def func_e1addb5cacbd4b509aa4063b76ff6892(N, p, q, r, s):
    """ solve the problem """
    items = [((i * p + q) % r + s) for i in range(N)]
    _sum = sum(items)
    part = _sum / 3
    part1 = 0
    return i

def func_d3b8804018a54a4195a518ca6601f983(N, p, q, r, s):
    """ solve the problem """
    items = [((i * p + q) % r + s) for i in range(N)]
    _sum = sum(items)
    part = _sum / 3
    part1 = 0
    return items

def func_14a3e2ab49314d50b68964426fca815b(N, p, q, r, s):
    """ solve the problem """
    items = [((i * p + q) % r + s) for i in range(N)]
    _sum = sum(items)
    part = _sum / 3
    part1 = 0
    return part

def func_3a2a1622a56f424d94c00193ebb3c49b(N, p, q, r, s):
    """ solve the problem """
    items = [((i * p + q) % r + s) for i in range(N)]
    _sum = sum(items)
    part = _sum / 3
    part1 = 0
    return _sum

*********************************

#### Score: 7.16598


#### Java Tokens: next, println, %.11f, problem, nextint, string, solve, format, #%d:, problema, int, case 

public static long func_b30ce8a524b746eba2ae57d5334cb5f2(int cn, PrintWriter out, Scanner in) { 
 int N = in.nextInt();
long p = in.nextInt();
long q = in.nextInt();
long r = in.nextInt();
long s = in.nextInt();
long[] d = new long[N];
for (int i = 0; i < N; i++) {
    d[i] = (p * i + q) % r + s;
}
out.println(String.format("Case #%d: %.11f", cn, ProblemA.solve(d)));
return s;
}


public static long func_6ee463595df041a9839770b878aeab4a(int cn, int N, PrintWriter out, Scanner in) { 
 long p = in.nextInt();
long q = in.nextInt();
long r = in.nextInt();
long s = in.nextInt();
long[] d = new long[N];
for (int i = 0; i < N; i++) {
    d[i] = (p * i + q) % r + s;
}
out.println(String.format("Case #%d: %.11f", cn, ProblemA.solve(d)));
return q;
}


public static long[] func_c9c262c6aec9494c9eb3d131f5d46778(int cn, int N, PrintWriter out, Scanner in) { 
 long p = in.nextInt();
long q = in.nextInt();
long r = in.nextInt();
long s = in.nextInt();
long[] d = new long[N];
for (int i = 0; i < N; i++) {
    d[i] = (p * i + q) % r + s;
}
out.println(String.format("Case #%d: %.11f", cn, ProblemA.solve(d)));
return d;
}


*********************************

#### Score: 6.88640


#### Java Tokens: next, %.11f, nextint, string, format, #%d:, problema, int, println, problem, flush, solve, case 

public static PrintWriter func_de91750d4b6649988c69d8a6a5fe3306(int T, PrintWriter out, Scanner in) { 
 for (int cn = 1; cn <= T; cn++) {
    int N = in.nextInt();
    long p = in.nextInt();
    long q = in.nextInt();
    long r = in.nextInt();
    long s = in.nextInt();
    long[] d = new long[N];
    for (int i = 0; i < N; i++) {
        d[i] = (p * i + q) % r + s;
    }
    out.println(String.format("Case #%d: %.11f", cn, ProblemA.solve(d)));
}
out.flush();
return out;
}


public static PrintWriter func_ca8773b02362430a9ce577a79990645a(PrintWriter out, Scanner in) { 
 int T = in.nextInt();
for (int cn = 1; cn <= T; cn++) {
    int N = in.nextInt();
    long p = in.nextInt();
    long q = in.nextInt();
    long r = in.nextInt();
    long s = in.nextInt();
    long[] d = new long[N];
    for (int i = 0; i < N; i++) {
        d[i] = (p * i + q) % r + s;
    }
    out.println(String.format("Case #%d: %.11f", cn, ProblemA.solve(d)));
}
out.flush();
return out;
}


public static int func_b42b1079e35b420e8f99e43425421d5b(PrintWriter out, Scanner in) { 
 int T = in.nextInt();
for (int cn = 1; cn <= T; cn++) {
    int N = in.nextInt();
    long p = in.nextInt();
    long q = in.nextInt();
    long r = in.nextInt();
    long s = in.nextInt();
    long[] d = new long[N];
    for (int i = 0; i < N; i++) {
        d[i] = (p * i + q) % r + s;
    }
    out.println(String.format("Case #%d: %.11f", cn, ProblemA.solve(d)));
}
out.flush();
return T;
}


*********************************

#### Score: 6.17157


#### Java Tokens: next, %.11f, nextint, string, format, #%d:, problema, int, printwriter, print, println, system, problem, solve, writer, case 

public static int func_59f4e7b568dd4923a707d3c8dbc048ca(Scanner in) { 
 PrintWriter out = new PrintWriter(System.out);
int T = in.nextInt();
for (int cn = 1; cn <= T; cn++) {
    int N = in.nextInt();
    long p = in.nextInt();
    long q = in.nextInt();
    long r = in.nextInt();
    long s = in.nextInt();
    long[] d = new long[N];
    for (int i = 0; i < N; i++) {
        d[i] = (p * i + q) % r + s;
    }
    out.println(String.format("Case #%d: %.11f", cn, ProblemA.solve(d)));
}
return T;
}


*********************************

#### Score: 5.96723


#### Java Tokens: next, %.11f, nextint, string, format, #%d:, problema, int, printwriter, print, println, system, problem, flush, solve, writer, case 

public static int func_55ff23f3681c48eebca9bb28584c136a(Scanner in) { 
 PrintWriter out = new PrintWriter(System.out);
int T = in.nextInt();
for (int cn = 1; cn <= T; cn++) {
    int N = in.nextInt();
    long p = in.nextInt();
    long q = in.nextInt();
    long r = in.nextInt();
    long s = in.nextInt();
    long[] d = new long[N];
    for (int i = 0; i < N; i++) {
        d[i] = (p * i + q) % r + s;
    }
    out.println(String.format("Case #%d: %.11f", cn, ProblemA.solve(d)));
}
out.flush();
return T;
}


*********************************

#### Score: 5.57661


#### Java Tokens: total, part 

public static double func_d397d5564cfe40b6a27114e059a1b2ee(int G, int g, double total) { 
 double part = g * total / G;
double lb = 0;
return lb;
}


public static double func_70a707fa813f4b1d817a69adeff0f4c4(int G, int g, double total) { 
 double part = g * total / G;
double lb = 0;
return part;
}


public static double func_4a338ec35e204e1cbc6179ae75e170bf(int W, int G, int g, double total) { 
 double part = g * total / G;
double lb = 0;
double ub = W;
return ub;
}


*********************************

#### Score: 5.32148


#### Java Tokens: take, problem, med2, med1, problema, imos, med 

public static long func_6440137d8e64468da7db2c0b1a6637a8(int h, int med2, int med1, long[] imos) { 
 long v1 = ProblemA.take(imos, h, med1);
long v2 = ProblemA.take(imos, h, med2);
return v2;
}


public static long func_233e6cba15c4422a89ca0b457774026b(int h, int med2, int med1, long[] imos) { 
 long v1 = ProblemA.take(imos, h, med1);
long v2 = ProblemA.take(imos, h, med2);
return v1;
}


*********************************

#### Score: 4.87816


#### Java Tokens: println, string, solve, case 

public static PrintWriter func_cca1ef001a3a42e6b8d65300c1775c57(int i, PrintWriter out, Scanner in) { 
 String s = "Case #" + (i + 1) + ": " + new A().solve(in);
out.println(s);
return out;
}


public static String func_8e37437692dd4d6c8ec660a8266a072f(int i, PrintWriter out, Scanner in) { 
 String s = "Case #" + (i + 1) + ": " + new A().solve(in);
out.println(s);
return s;
}


public static PrintWriter func_eb5dfcd3c11a4f6ca6a3e3fba17b9c8b(int i, PrintWriter out, Scanner in) { 
 String s = "Case #" + (i + 1) + ": " + new A().solve(in);
out.println(s);
return out;
}


*********************************

#### Score: 4.83466


#### Java Tokens: take, min, problem, max, med2, med1, problema, imos, med 

public static int func_ee04521fec724ee9b5f4bfee766b5d8c(int min, int h, int max, long[] imos) { 
 int med1 = (min * 2 + max) / 3;
int med2 = (min + max * 2) / 3;
long v1 = ProblemA.take(imos, h, med1);
long v2 = ProblemA.take(imos, h, med2);
return med1;
}


public static int func_3f005fb22c954726b758f3c2c349e7f6(int min, int h, int max, long[] imos) { 
 int med1 = (min * 2 + max) / 3;
int med2 = (min + max * 2) / 3;
long v1 = ProblemA.take(imos, h, med1);
long v2 = ProblemA.take(imos, h, med2);
if (v1 < v2) {
    min = med1;
} else {
    max = med2;
}
return max;
}


public static long func_c4ea65eb52aa4bd28145781d4e329eb6(int min, int h, int max, long[] imos) { 
 int med1 = (min * 2 + max) / 3;
int med2 = (min + max * 2) / 3;
long v1 = ProblemA.take(imos, h, med1);
long v2 = ProblemA.take(imos, h, med2);
if (v1 < v2) {
    min = med1;
} else {
    max = med2;
}
return v2;
}


*********************************

#### Score: 4.83466


#### Java Tokens: take, min, problem, med2, max, med1, problema, imos, med 

public static long func_64c5015828804ebfba5118fde317491e(int min, int h, int max, int med1, long[] imos) { 
 int med2 = (min + max * 2) / 3;
long v1 = ProblemA.take(imos, h, med1);
long v2 = ProblemA.take(imos, h, med2);
return v2;
}


public static long func_d1afe905b1514da6b1d4369e1e8729b6(int min, int h, int max, int med1, long[] imos) { 
 int med2 = (min + max * 2) / 3;
long v1 = ProblemA.take(imos, h, med1);
long v2 = ProblemA.take(imos, h, med2);
if (v1 < v2) {
    min = med1;
} else {
    max = med2;
}
return v1;
}


public static long func_3b3596bb4b8240a6b63096e43f3c6cee(int min, int h, int max, int med1, long[] imos) { 
 int med2 = (min + max * 2) / 3;
long v1 = ProblemA.take(imos, h, med1);
long v2 = ProblemA.take(imos, h, med2);
return v1;
}


*********************************

#### Score: 4.62590


#### Java Tokens: cur, take, min, problem, max, med2, med1, problema, imos, med 

public static int func_4a769162bc534ccb9ce904b051d65cc8(int n, int h, long[] imos) { 
 int min = h;
int max = n - 1;
for (int cur = 0; cur < 40; cur++) {
    int med1 = (min * 2 + max) / 3;
    int med2 = (min + max * 2) / 3;
    long v1 = ProblemA.take(imos, h, med1);
    long v2 = ProblemA.take(imos, h, med2);
    if (v1 < v2) {
        min = med1;
    } else {
        max = med2;
    }
}
return min;
}


public static int func_3dfe43f5bc8a4e8a83732ca3f4b18d0b(int n, int min, int h, long[] imos) { 
 int max = n - 1;
for (int cur = 0; cur < 40; cur++) {
    int med1 = (min * 2 + max) / 3;
    int med2 = (min + max * 2) / 3;
    long v1 = ProblemA.take(imos, h, med1);
    long v2 = ProblemA.take(imos, h, med2);
    if (v1 < v2) {
        min = med1;
    } else {
        max = med2;
    }
}
return max;
}


public static int func_769140862d424990b817a9acfad94552(int n, int h, long[] imos) { 
 int min = h;
int max = n - 1;
for (int cur = 0; cur < 40; cur++) {
    int med1 = (min * 2 + max) / 3;
    int med2 = (min + max * 2) / 3;
    long v1 = ProblemA.take(imos, h, med1);
    long v2 = ProblemA.take(imos, h, med2);
    if (v1 < v2) {
        min = med1;
    } else {
        max = med2;
    }
}
return max;
}

