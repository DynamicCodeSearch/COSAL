### Py Tokens: sort, case, string, int, write, range, split, str, close, readline, append, result 

### Py functions

def func_49736e319c634d83ae5543e1bfb83c9c(f, g, t):
    for i in range(1, t + 1):
        n = int(f.readline())
        l = [int(x) for x in f.readline().split()]
        p = [int(x) for x in f.readline().split()]
        result = 0
        m = []
        for j in range(n):
            m.append([100 - p[j], j])
        m.sort()
        result = str(m[0][1])
        for j in range(1, n):
            result = result + ' ' + str(m[j][1])
        string = 'Case #' + str(i) + ': ' + str(result) + '\n'
        g.write(string)
    f.close()
    return t

def func_c70c5cfe6be1483ca8b602b589304e92(f, g, t):
    for i in range(1, t + 1):
        n = int(f.readline())
        l = [int(x) for x in f.readline().split()]
        p = [int(x) for x in f.readline().split()]
        result = 0
        m = []
        for j in range(n):
            m.append([100 - p[j], j])
        m.sort()
        result = str(m[0][1])
        for j in range(1, n):
            result = result + ' ' + str(m[j][1])
        string = 'Case #' + str(i) + ': ' + str(result) + '\n'
        g.write(string)
    f.close()
    g.close()
    return t

*********************************

#### Score: 11.49404


#### Java Tokens: next, println, system, nextint, string, solve, close, int, case 

public static PrintWriter func_5f57a2edef1041caa821806cabf7e9d2(PrintWriter out, Scanner in) { 
 int T = in.nextInt();
for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
out.close();
return out;
}


public static PrintWriter func_635e262b1c0747db8dc8487584a21618(PrintWriter out, Scanner in) { 
 int T = in.nextInt();
for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
out.close();
return out;
}


public static PrintWriter func_8a2c51d4894943cfb610a6c0d7c52954(PrintWriter out, Scanner in) { 
 int T = in.nextInt();
for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
out.close();
return out;
}


*********************************

#### Score: 11.41510


#### Java Tokens: println, system, string, solve, close, case 

public static PrintWriter func_97edbcadaa1e4fce96a75ba7c7ce5f7c(int T, PrintWriter out, Scanner in) { 
 for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
out.close();
return out;
}


public static PrintWriter func_3d5d8d6284bd4a7c9b061b4b7e550c8b(int T, PrintWriter out, Scanner in) { 
 for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
out.close();
return out;
}


public static PrintWriter func_d9b019cc717e4c3b8c9b99f9e5d88aa1(int T, PrintWriter out, Scanner in) { 
 for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
out.close();
return out;
}


*********************************

#### Score: 9.37945


#### Java Tokens: split, string, trim, line 

public static double[] func_de3a96ea49a441999168791bd2f96e09(int n, String line) { 
 String[] ss = line.trim().split(" ");
double[] l = new double[n];
return l;
}


public static String[] func_b4974e8e9363455792fd54d845a37f4a(int n, String line) { 
 String[] ss = line.trim().split(" ");
double[] l = new double[n];
return ss;
}


*********************************

#### Score: 9.17462


#### Java Tokens: result, println, task, system, string, get, task1, getresult, case 

public static String func_61d176718ba14544853fc17b1a46f1fe(int i) { 
 String result = Task1.getResult();
System.out.println("Case #" + i + ": " + result);
return result;
}


*********************************

#### Score: 8.33188


#### Java Tokens: println, system, split, string, trim, line 

public static double[] func_9c67c7d6aee64322bd546ba81fc30fdb(int n, String line) { 
 System.out.println(line);
String[] ss = line.trim().split(" ");
double[] l = new double[n];
return l;
}


public static String[] func_0ad43d263a4d4d45b74d9545d11cd9b4(int n, String line) { 
 System.out.println(line);
String[] ss = line.trim().split(" ");
double[] l = new double[n];
return ss;
}


public static String[] func_721614ebd5444a7697fbeed6bd5a0e70(String line) { 
 System.out.println(line);
String[] ss = line.trim().split(" ");
return ss;
}


*********************************

#### Score: 8.24635


#### Java Tokens: next, println, system, nextint, string, solve, int, case 

public static PrintWriter func_587164aac1054d6fa3f49bd7c1870515(PrintWriter out, Scanner in) { 
 int T = in.nextInt();
for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
return out;
}


public static int func_3f1576aadf40477d8d1261332ce25a8a(PrintWriter out, Scanner in) { 
 int T = in.nextInt();
for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
return T;
}


public static PrintWriter func_aabe5d00d5094c7bb290dd667ebe6d10(PrintWriter out, Scanner in) { 
 int T = in.nextInt();
for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
return out;
}


*********************************

#### Score: 8.19025


#### Java Tokens: next, game, testnum, perfect, nextint, string, test, num, format, #%d:, perfectgame, int, result, print, ind, case 

public static int func_dd2dbf9dec144281bc5f882fe544318c(int testNum, int n, int[] l) { 
 final int[] d = new int[n];
for (int i = 0; i < n; ++i) {
    l[i] = PerfectGame.in.nextInt();
}
for (int i = 0; i < n; ++i) {
    d[i] = PerfectGame.in.nextInt();
}
final int[] ind = new int[n];
for (int i = 0; i < n; ++i) {
    ind[i] = i;
}
for (int i = 0; i < n; ++i) {
    for (int j = i + 1; j < n; ++j) {
        if ((l[ind[i]] * d[ind[i]] < l[ind[j]] * d[ind[j]]) || (l[ind[i]] * d[ind[i]] == l[ind[j]] * d[ind[j]] && (d[ind[i]] == 0 && ind[i] > ind[j] || (d[ind[i]] != 0 && (l[ind[i]] > l[ind[j]] || (l[ind[i]] == l[ind[j]] && ind[i] > ind[j])))))) {
            int t = ind[i];
            ind[i] = ind[j];
            ind[j] = t;
        }
    }
}
final int result = 0;
PerfectGame.out.print(String.format("Case #%d:", testNum));
return result;
}


public static int func_1baf810e48f3458abca39d550b201bd4(int testNum, int n, int[] l, int[] d) { 
 for (int i = 0; i < n; ++i) {
    l[i] = PerfectGame.in.nextInt();
}
for (int i = 0; i < n; ++i) {
    d[i] = PerfectGame.in.nextInt();
}
final int[] ind = new int[n];
for (int i = 0; i < n; ++i) {
    ind[i] = i;
}
for (int i = 0; i < n; ++i) {
    for (int j = i + 1; j < n; ++j) {
        if ((l[ind[i]] * d[ind[i]] < l[ind[j]] * d[ind[j]]) || (l[ind[i]] * d[ind[i]] == l[ind[j]] * d[ind[j]] && (d[ind[i]] == 0 && ind[i] > ind[j] || (d[ind[i]] != 0 && (l[ind[i]] > l[ind[j]] || (l[ind[i]] == l[ind[j]] && ind[i] > ind[j])))))) {
            int t = ind[i];
            ind[i] = ind[j];
            ind[j] = t;
        }
    }
}
final int result = 0;
PerfectGame.out.print(String.format("Case #%d:", testNum));
for (int i = 0; i < n; ++i) {
    PerfectGame.out.print(" " + ind[i]);
}
return result;
}


public static int func_9b6e7a28851c4286aa6fec44c8ca4c94(int testNum, int n, int[] l, int[] d) { 
 for (int i = 0; i < n; ++i) {
    d[i] = PerfectGame.in.nextInt();
}
final int[] ind = new int[n];
for (int i = 0; i < n; ++i) {
    ind[i] = i;
}
for (int i = 0; i < n; ++i) {
    for (int j = i + 1; j < n; ++j) {
        if ((l[ind[i]] * d[ind[i]] < l[ind[j]] * d[ind[j]]) || (l[ind[i]] * d[ind[i]] == l[ind[j]] * d[ind[j]] && (d[ind[i]] == 0 && ind[i] > ind[j] || (d[ind[i]] != 0 && (l[ind[i]] > l[ind[j]] || (l[ind[i]] == l[ind[j]] && ind[i] > ind[j])))))) {
            int t = ind[i];
            ind[i] = ind[j];
            ind[j] = t;
        }
    }
}
final int result = 0;
PerfectGame.out.print(String.format("Case #%d:", testNum));
return result;
}


*********************************

#### Score: 8.06354


#### Java Tokens: add, string, max, index, integer, arraylist, list, result, size, array, builder, stringbuilder, append 

public static boolean[] func_8a7bff4180934947805842e57e503277(int N, int[] P) { 
 boolean[] u = new boolean[N];
List<Integer> result = new ArrayList<Integer>(N);
while (result.size() < N) {
    int max = -1;
    for (int i = 0; i < N; i++) {
        if (u[i])
            continue;
        if (max == -1)
            max = i;
        else if (P[i] > P[max])
            max = i;
    }
    u[max] = true;
    result.add(max);
}
StringBuilder sb = new StringBuilder();
for (Integer index : result) {
    sb.append(index + " ");
}
return u;
}


public static StringBuilder func_40420e1a67264bd89dd150fbc26cf837(int N, int[] P) { 
 boolean[] u = new boolean[N];
List<Integer> result = new ArrayList<Integer>(N);
while (result.size() < N) {
    int max = -1;
    for (int i = 0; i < N; i++) {
        if (u[i])
            continue;
        if (max == -1)
            max = i;
        else if (P[i] > P[max])
            max = i;
    }
    u[max] = true;
    result.add(max);
}
StringBuilder sb = new StringBuilder();
for (Integer index : result) {
    sb.append(index + " ");
}
return sb;
}


public static List<Integer> func_f05ac0d737f747fb9cfb0f670154f4d8(int N, int[] P) { 
 boolean[] u = new boolean[N];
List<Integer> result = new ArrayList<Integer>(N);
while (result.size() < N) {
    int max = -1;
    for (int i = 0; i < N; i++) {
        if (u[i])
            continue;
        if (max == -1)
            max = i;
        else if (P[i] > P[max])
            max = i;
    }
    u[max] = true;
    result.add(max);
}
StringBuilder sb = new StringBuilder();
for (Integer index : result) {
    sb.append(index + " ");
}
return result;
}


*********************************

#### Score: 8.03843


#### Java Tokens: result, game, print, testnum, perfect, string, test, num, format, #%d:, perfectgame, case 

public static int func_a5c2a17df3fe48c9b0708dc00cd0bb76(int testNum) { 
 final int result = 0;
PerfectGame.out.print(String.format("Case #%d:", testNum));
return result;
}


*********************************

#### Score: 8.02886


#### Java Tokens: println, string, solve, case 

public static PrintWriter func_cca1ef001a3a42e6b8d65300c1775c57(int i, PrintWriter out, Scanner in) { 
 String s = "Case #" + (i + 1) + ": " + new A().solve(in);
out.println(s);
return out;
}


public static String func_8e37437692dd4d6c8ec660a8266a072f(int i, PrintWriter out, Scanner in) { 
 String s = "Case #" + (i + 1) + ": " + new A().solve(in);
out.println(s);
return s;
}


public static PrintWriter func_eb5dfcd3c11a4f6ca6a3e3fba17b9c8b(int i, PrintWriter out, Scanner in) { 
 String s = "Case #" + (i + 1) + ": " + new A().solve(in);
out.println(s);
return out;
}

