### Py Tokens: height, upper, lower, area, uppslope, float, start, lowslope 

### Py functions

def func_d8e47c2e27264fecb62a29d534950e93(i, lower, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return i

def func_abf9f3444cbe4515b1203a058c7b34bd(i, lower, start, upper):
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    height = float(start)
    i = 0
    return i

*********************************

#### Score: 8.84335


#### Java Tokens: cur, upper, get, lower, curheight, curu, height 

public static double func_98ade43ed9ad443788728c811e4d5838(ArrayList<Point> lower, ArrayList<Point> upper) { 
 double curHeight = 1.0 * upper.get(0).y - lower.get(0).y;
int curU = 1;
return curHeight;
}


public static int func_c1dc0a267e0a4bf48e5b8172af43dc23(ArrayList<Point> lower, ArrayList<Point> upper) { 
 double curHeight = 1.0 * upper.get(0).y - lower.get(0).y;
int curU = 1;
return curU;
}


*********************************

#### Score: 8.84335


#### Java Tokens: cur, last, upper, lower, curheight, lastx, height 

public static int func_8a022725c9214d70bcb8353708fc63fa(Point[] upper, Point[] lower) { 
 int lastX = 0;
double curHeight = 1.0 * upper[0].y - lower[0].y;
return lastX;
}


public static double func_456b07764b49421db69aab521398d5d1(Point[] upper, Point[] lower) { 
 int lastX = 0;
double curHeight = 1.0 * upper[0].y - lower[0].y;
return curHeight;
}


*********************************

#### Score: 8.73119


#### Java Tokens: area, cur, total, curl, last, upper, lower, curheight, curu, totalarea, lastx, height 

public static double func_1dd563f992634ab9877d155fc922a965(Point[] upper, Point[] lower) { 
 double totalArea = 0.0;
int curL = 1;
int curU = 1;
int lastX = 0;
double curHeight = 1.0 * upper[0].y - lower[0].y;
return totalArea;
}


public static int func_a7d464825165439088df7c0b77e845d7(Point[] upper, Point[] lower) { 
 double totalArea = 0.0;
int curL = 1;
int curU = 1;
int lastX = 0;
double curHeight = 1.0 * upper[0].y - lower[0].y;
return curL;
}


public static int func_7732ef7e3ca047ba8e1559171c43499e(Point[] upper, Point[] lower) { 
 double totalArea = 0.0;
int curL = 1;
int curU = 1;
int lastX = 0;
double curHeight = 1.0 * upper[0].y - lower[0].y;
return lastX;
}


*********************************

#### Score: 8.40258


#### Java Tokens: cur, last, upper, lower, curheight, curu, lastx, height 

public static double func_bd0484a5b47f46e19c4e1415c2b93780(Point[] upper, Point[] lower) { 
 int curU = 1;
int lastX = 0;
double curHeight = 1.0 * upper[0].y - lower[0].y;
return curHeight;
}


public static int func_c0d314ceb1d94e4db16ed7bdaefbf979(Point[] upper, Point[] lower) { 
 int curU = 1;
int lastX = 0;
double curHeight = 1.0 * upper[0].y - lower[0].y;
return lastX;
}


public static int func_d7518f11013d44698518a3ba0ab8be43(Point[] upper, Point[] lower) { 
 int curU = 1;
int lastX = 0;
double curHeight = 1.0 * upper[0].y - lower[0].y;
return curU;
}


*********************************

#### Score: 8.40258


#### Java Tokens: cur, curl, upper, get, lower, curheight, curu, height 

public static int func_309bf0aa266f4d64b5044601e1cd6b15(ArrayList<Point> lower, ArrayList<Point> upper) { 
 double curHeight = 1.0 * upper.get(0).y - lower.get(0).y;
int curU = 1;
int curL = 1;
return curL;
}


public static int func_d30c898ee9554bc1b419e3c37c1ba920(ArrayList<Point> lower, ArrayList<Point> upper) { 
 double curHeight = 1.0 * upper.get(0).y - lower.get(0).y;
int curU = 1;
int curL = 1;
return curU;
}


public static double func_b37a3ffa6a634b338f80193a774a1c3f(ArrayList<Point> lower, ArrayList<Point> upper) { 
 double curHeight = 1.0 * upper.get(0).y - lower.get(0).y;
int curU = 1;
int curL = 1;
return curHeight;
}


*********************************

#### Score: 8.06951


#### Java Tokens: area, cur, curl, last, upper, lower, totalarea, total, size, get, curheight, curu, lastx, height 

public static int func_e3e70a58ce7d44b4bbbebf18cbfe1638(ArrayList<Point> lower, ArrayList<Point> upper) { 
 double curHeight = 1.0 * upper.get(0).y - lower.get(0).y;
int curU = 1;
int curL = 1;
int u = upper.size();
int l = lower.size();
double lastX = 0;
double totalArea = 0.0;
return curU;
}


public static int func_1159e87b8394469dbe07e868e6ab86db(ArrayList<Point> lower, ArrayList<Point> upper) { 
 double curHeight = 1.0 * upper.get(0).y - lower.get(0).y;
int curU = 1;
int curL = 1;
int u = upper.size();
int l = lower.size();
double lastX = 0;
double totalArea = 0.0;
return curL;
}


public static double func_c499649c1d754c51988f784b1c3fbd18(ArrayList<Point> lower, ArrayList<Point> upper) { 
 double curHeight = 1.0 * upper.get(0).y - lower.get(0).y;
int curU = 1;
int curL = 1;
int u = upper.size();
int l = lower.size();
double lastX = 0;
double totalArea = 0.0;
return curHeight;
}


*********************************

#### Score: 8.00571


#### Java Tokens: cur, curl, size, upper, get, lower, curheight, curu, height 

public static double func_584b7fb545c54271b0ee49d4017766e1(ArrayList<Point> lower, ArrayList<Point> upper) { 
 double curHeight = 1.0 * upper.get(0).y - lower.get(0).y;
int curU = 1;
int curL = 1;
int u = upper.size();
int l = lower.size();
return curHeight;
}


public static int func_39a04d91f91947bb9dad333de1b3dfe9(ArrayList<Point> lower, ArrayList<Point> upper) { 
 double curHeight = 1.0 * upper.get(0).y - lower.get(0).y;
int curU = 1;
int curL = 1;
int u = upper.size();
return curU;
}


public static int func_01d82f8281f347789d4de788cbc0d0d7(ArrayList<Point> lower, ArrayList<Point> upper) { 
 double curHeight = 1.0 * upper.get(0).y - lower.get(0).y;
int curU = 1;
int curL = 1;
int u = upper.size();
int l = lower.size();
return curU;
}


*********************************

#### Score: 8.00571


#### Java Tokens: cur, curl, last, upper, lower, curheight, curu, lastx, height 

public static int func_72cb5deb15334bb1ba31e33ebbe6750c(Point[] upper, Point[] lower) { 
 int curL = 1;
int curU = 1;
int lastX = 0;
double curHeight = 1.0 * upper[0].y - lower[0].y;
return curU;
}


public static double func_6a3349b878c64afaa1ce468caad9242c(Point[] upper, Point[] lower) { 
 int curL = 1;
int curU = 1;
int lastX = 0;
double curHeight = 1.0 * upper[0].y - lower[0].y;
return curHeight;
}


public static int func_8fb7fa3e6bc048b3992666d4ee5a2588(Point[] upper, Point[] lower) { 
 int curL = 1;
int curU = 1;
int lastX = 0;
double curHeight = 1.0 * upper[0].y - lower[0].y;
return curL;
}


*********************************

#### Score: 7.50556


#### Java Tokens: next, area, cur, curl, nextint, last, lower, upper, totalarea, int, point, total, curheight, curu, lastx, height 

public static int func_b363d81b7db24d88aa47ff9337aeccbc(Scanner in) { 
 // lower points
int l = in.nextInt();
// upper points
int u = in.nextInt();
int // guests
g = in.nextInt();
Point[] lower = new Point[l];
for (int i = 0; i < l; ++i) {
    lower[i] = new Point(in.nextInt(), in.nextInt());
}
Point[] upper = new Point[u];
for (int i = 0; i < u; ++i) {
    upper[i] = new Point(in.nextInt(), in.nextInt());
}
double totalArea = 0.0;
int curL = 1;
int curU = 1;
int lastX = 0;
double curHeight = 1.0 * upper[0].y - lower[0].y;
return curU;
}


public static int func_395729f336cd48f58b71b0fb1151759b(Scanner in) { 
 // lower points
int l = in.nextInt();
// upper points
int u = in.nextInt();
int // guests
g = in.nextInt();
Point[] lower = new Point[l];
for (int i = 0; i < l; ++i) {
    lower[i] = new Point(in.nextInt(), in.nextInt());
}
Point[] upper = new Point[u];
for (int i = 0; i < u; ++i) {
    upper[i] = new Point(in.nextInt(), in.nextInt());
}
double totalArea = 0.0;
int curL = 1;
int curU = 1;
int lastX = 0;
double curHeight = 1.0 * upper[0].y - lower[0].y;
return u;
}


public static int func_8f57eaec01fb4c858842b9b53a4f79db(Scanner in) { 
 int // width
w = in.nextInt();
// lower points
int l = in.nextInt();
// upper points
int u = in.nextInt();
int // guests
g = in.nextInt();
Point[] lower = new Point[l];
for (int i = 0; i < l; ++i) {
    lower[i] = new Point(in.nextInt(), in.nextInt());
}
Point[] upper = new Point[u];
for (int i = 0; i < u; ++i) {
    upper[i] = new Point(in.nextInt(), in.nextInt());
}
double totalArea = 0.0;
int curL = 1;
int curU = 1;
int lastX = 0;
double curHeight = 1.0 * upper[0].y - lower[0].y;
return curU;
}


*********************************

#### Score: 7.50556


#### Java Tokens: next, area, cur, curl, nextint, last, upper, lower, totalarea, point, int, total, curheight, curu, lastx, height 

public static int func_5f7e414acc2e4b8cbc9367d4cf1f9010(int u, Point[] lower, Scanner in) { 
 Point[] upper = new Point[u];
for (int i = 0; i < u; ++i) {
    upper[i] = new Point(in.nextInt(), in.nextInt());
}
double totalArea = 0.0;
int curL = 1;
int curU = 1;
int lastX = 0;
double curHeight = 1.0 * upper[0].y - lower[0].y;
return curU;
}


public static double func_2171ff1d6e734ee59f7644f0289582e4(int u, Point[] lower, Scanner in) { 
 Point[] upper = new Point[u];
for (int i = 0; i < u; ++i) {
    upper[i] = new Point(in.nextInt(), in.nextInt());
}
double totalArea = 0.0;
int curL = 1;
int curU = 1;
int lastX = 0;
double curHeight = 1.0 * upper[0].y - lower[0].y;
return curHeight;
}


public static double func_2a55898f55f643f293fc1b22261d6642(int u, Point[] lower, Scanner in) { 
 Point[] upper = new Point[u];
for (int i = 0; i < u; ++i) {
    upper[i] = new Point(in.nextInt(), in.nextInt());
}
double totalArea = 0.0;
int curL = 1;
int curU = 1;
int lastX = 0;
double curHeight = 1.0 * upper[0].y - lower[0].y;
return totalArea;
}

