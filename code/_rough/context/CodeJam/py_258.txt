### Py Tokens: case, range, result, str, string 

### Py functions

def func_5dc361c0233f48d7a127fc0d5d2b0cdd(i, j, m, n, result):
    for j in range(1, n):
        result = result + ' ' + str(m[j][1])
    string = 'Case #' + str(i) + ': ' + str(result) + '\n'
    return i

def func_f8751f006b704e3dbc832eeaf9486e8a(i, j, m, n, result):
    result = str(m[0][1])
    for j in range(1, n):
        result = result + ' ' + str(m[j][1])
    string = 'Case #' + str(i) + ': ' + str(result) + '\n'
    return string

def func_99733bec610949a7a22b5778ac7bc40c(i, j, m, n, result):
    result = str(m[0][1])
    for j in range(1, n):
        result = result + ' ' + str(m[j][1])
    string = 'Case #' + str(i) + ': ' + str(result) + '\n'
    return m

def func_478b7d58c8924d89b530c8bdaf15466d(i, j, m, n, result):
    for j in range(1, n):
        result = result + ' ' + str(m[j][1])
    string = 'Case #' + str(i) + ': ' + str(result) + '\n'
    return n

def func_fbea43e22b25460fa1e2e61357496524(i, j, m, n, result):
    for j in range(1, n):
        result = result + ' ' + str(m[j][1])
    string = 'Case #' + str(i) + ': ' + str(result) + '\n'
    return string

*********************************

#### Score: 9.17462


#### Java Tokens: result, println, task, system, string, get, task1, getresult, case 

public static String func_61d176718ba14544853fc17b1a46f1fe(int i) { 
 String result = Task1.getResult();
System.out.println("Case #" + i + ": " + result);
return result;
}


*********************************

#### Score: 8.03843


#### Java Tokens: result, game, print, testnum, perfect, string, test, num, format, #%d:, perfectgame, case 

public static int func_a5c2a17df3fe48c9b0708dc00cd0bb76(int testNum) { 
 final int result = 0;
PerfectGame.out.print(String.format("Case #%d:", testNum));
return result;
}


*********************************

#### Score: 8.02886


#### Java Tokens: println, string, solve, case 

public static PrintWriter func_cca1ef001a3a42e6b8d65300c1775c57(int i, PrintWriter out, Scanner in) { 
 String s = "Case #" + (i + 1) + ": " + new A().solve(in);
out.println(s);
return out;
}


public static String func_8e37437692dd4d6c8ec660a8266a072f(int i, PrintWriter out, Scanner in) { 
 String s = "Case #" + (i + 1) + ": " + new A().solve(in);
out.println(s);
return s;
}


public static PrintWriter func_eb5dfcd3c11a4f6ca6a3e3fba17b9c8b(int i, PrintWriter out, Scanner in) { 
 String s = "Case #" + (i + 1) + ": " + new A().solve(in);
out.println(s);
return out;
}


*********************************

#### Score: 7.72262


#### Java Tokens: game, testnum, perfect, string, test, num, format, #%d:, perfectgame, result, print, ind, case 

public static int func_1cd60f3080a244bf82c1a2468ed2404b(int testNum, int n, int[] l, int[] d) { 
 final int[] ind = new int[n];
for (int i = 0; i < n; ++i) {
    ind[i] = i;
}
for (int i = 0; i < n; ++i) {
    for (int j = i + 1; j < n; ++j) {
        if ((l[ind[i]] * d[ind[i]] < l[ind[j]] * d[ind[j]]) || (l[ind[i]] * d[ind[i]] == l[ind[j]] * d[ind[j]] && (d[ind[i]] == 0 && ind[i] > ind[j] || (d[ind[i]] != 0 && (l[ind[i]] > l[ind[j]] || (l[ind[i]] == l[ind[j]] && ind[i] > ind[j])))))) {
            int t = ind[i];
            ind[i] = ind[j];
            ind[j] = t;
        }
    }
}
final int result = 0;
PerfectGame.out.print(String.format("Case #%d:", testNum));
for (int i = 0; i < n; ++i) {
    PerfectGame.out.print(" " + ind[i]);
}
return result;
}


public static int func_3518dcc96349411eb6e0f7d44117e1ec(int testNum, int n, int[] l, int[] d) { 
 final int[] ind = new int[n];
for (int i = 0; i < n; ++i) {
    ind[i] = i;
}
for (int i = 0; i < n; ++i) {
    for (int j = i + 1; j < n; ++j) {
        if ((l[ind[i]] * d[ind[i]] < l[ind[j]] * d[ind[j]]) || (l[ind[i]] * d[ind[i]] == l[ind[j]] * d[ind[j]] && (d[ind[i]] == 0 && ind[i] > ind[j] || (d[ind[i]] != 0 && (l[ind[i]] > l[ind[j]] || (l[ind[i]] == l[ind[j]] && ind[i] > ind[j])))))) {
            int t = ind[i];
            ind[i] = ind[j];
            ind[j] = t;
        }
    }
}
final int result = 0;
PerfectGame.out.print(String.format("Case #%d:", testNum));
return result;
}


public static int func_7974d30007b1469b9c914e84aa327788(int testNum, int n, int[] ind, int[] l, int[] d) { 
 for (int i = 0; i < n; ++i) {
    ind[i] = i;
}
for (int i = 0; i < n; ++i) {
    for (int j = i + 1; j < n; ++j) {
        if ((l[ind[i]] * d[ind[i]] < l[ind[j]] * d[ind[j]]) || (l[ind[i]] * d[ind[i]] == l[ind[j]] * d[ind[j]] && (d[ind[i]] == 0 && ind[i] > ind[j] || (d[ind[i]] != 0 && (l[ind[i]] > l[ind[j]] || (l[ind[i]] == l[ind[j]] && ind[i] > ind[j])))))) {
            int t = ind[i];
            ind[i] = ind[j];
            ind[j] = t;
        }
    }
}
final int result = 0;
PerfectGame.out.print(String.format("Case #%d:", testNum));
return result;
}


*********************************

#### Score: 7.72262


#### Java Tokens: game, testnum, perfect, string, test, num, format, #%d:, perfectgame, result, print, case, ind 

public static int func_54ca6b37f8054856bf8f45a40f69f13e(int testNum, int n, int[] ind) { 
 final int result = 0;
PerfectGame.out.print(String.format("Case #%d:", testNum));
for (int i = 0; i < n; ++i) {
    PerfectGame.out.print(" " + ind[i]);
}
return result;
}


*********************************

#### Score: 7.55650


#### Java Tokens: println, system, string, solve, case 

public static PrintWriter func_a9da6b05a0ce45faa258bda28aad5b0f(int T, PrintWriter out, Scanner in) { 
 for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
return out;
}


public static String func_ab11053ceaa243f49593c54daba33b16(int i, PrintWriter out, Scanner in) { 
 String s = "Case #" + (i + 1) + ": " + new A().solve(in);
out.println(s);
System.out.println(s);
return s;
}


public static String func_1defcc3f2c3d43c88a99745adab1e46b(int i, PrintWriter out, Scanner in) { 
 String s = "Case #" + (i + 1) + ": " + new A().solve(in);
out.println(s);
System.out.println(s);
return s;
}


*********************************

#### Score: 7.43199


#### Java Tokens: game, testnum, perfect, string, test, num, format, #%d:, perfectgame, result, print, println, ind, case 

public static int func_27ed8d7330af4706b111704fb3b52fbd(int testNum, int n, int[] l, int[] d) { 
 final int[] ind = new int[n];
for (int i = 0; i < n; ++i) {
    ind[i] = i;
}
for (int i = 0; i < n; ++i) {
    for (int j = i + 1; j < n; ++j) {
        if ((l[ind[i]] * d[ind[i]] < l[ind[j]] * d[ind[j]]) || (l[ind[i]] * d[ind[i]] == l[ind[j]] * d[ind[j]] && (d[ind[i]] == 0 && ind[i] > ind[j] || (d[ind[i]] != 0 && (l[ind[i]] > l[ind[j]] || (l[ind[i]] == l[ind[j]] && ind[i] > ind[j])))))) {
            int t = ind[i];
            ind[i] = ind[j];
            ind[j] = t;
        }
    }
}
final int result = 0;
PerfectGame.out.print(String.format("Case #%d:", testNum));
for (int i = 0; i < n; ++i) {
    PerfectGame.out.print(" " + ind[i]);
}
PerfectGame.out.println();
return result;
}


public static int func_1b1bf8cd8d3247f89adaf25da47e1bf0(int testNum, int n, int[] ind, int[] l, int[] d) { 
 for (int i = 0; i < n; ++i) {
    for (int j = i + 1; j < n; ++j) {
        if ((l[ind[i]] * d[ind[i]] < l[ind[j]] * d[ind[j]]) || (l[ind[i]] * d[ind[i]] == l[ind[j]] * d[ind[j]] && (d[ind[i]] == 0 && ind[i] > ind[j] || (d[ind[i]] != 0 && (l[ind[i]] > l[ind[j]] || (l[ind[i]] == l[ind[j]] && ind[i] > ind[j])))))) {
            int t = ind[i];
            ind[i] = ind[j];
            ind[j] = t;
        }
    }
}
final int result = 0;
PerfectGame.out.print(String.format("Case #%d:", testNum));
for (int i = 0; i < n; ++i) {
    PerfectGame.out.print(" " + ind[i]);
}
PerfectGame.out.println();
return result;
}


public static int func_cc244b916a4f4bebb74ba0d7ee5c1a64(int testNum, int n, int[] ind, int[] l, int[] d) { 
 for (int i = 0; i < n; ++i) {
    ind[i] = i;
}
for (int i = 0; i < n; ++i) {
    for (int j = i + 1; j < n; ++j) {
        if ((l[ind[i]] * d[ind[i]] < l[ind[j]] * d[ind[j]]) || (l[ind[i]] * d[ind[i]] == l[ind[j]] * d[ind[j]] && (d[ind[i]] == 0 && ind[i] > ind[j] || (d[ind[i]] != 0 && (l[ind[i]] > l[ind[j]] || (l[ind[i]] == l[ind[j]] && ind[i] > ind[j])))))) {
            int t = ind[i];
            ind[i] = ind[j];
            ind[j] = t;
        }
    }
}
final int result = 0;
PerfectGame.out.print(String.format("Case #%d:", testNum));
for (int i = 0; i < n; ++i) {
    PerfectGame.out.print(" " + ind[i]);
}
PerfectGame.out.println();
return result;
}


*********************************

#### Score: 7.43199


#### Java Tokens: game, testnum, perfect, string, test, num, format, #%d:, perfectgame, result, print, println, case, ind 

public static int func_bf7bfc4c0a134e7dad6c6e9b0ea5a803(int testNum, int n, int[] ind) { 
 final int result = 0;
PerfectGame.out.print(String.format("Case #%d:", testNum));
for (int i = 0; i < n; ++i) {
    PerfectGame.out.print(" " + ind[i]);
}
PerfectGame.out.println();
return result;
}


*********************************

#### Score: 7.13946


#### Java Tokens: println, system, string, solve, close, case 

public static PrintWriter func_97edbcadaa1e4fce96a75ba7c7ce5f7c(int T, PrintWriter out, Scanner in) { 
 for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
out.close();
return out;
}


public static PrintWriter func_3d5d8d6284bd4a7c9b061b4b7e550c8b(int T, PrintWriter out, Scanner in) { 
 for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
out.close();
return out;
}


public static PrintWriter func_d9b019cc717e4c3b8c9b99f9e5d88aa1(int T, PrintWriter out, Scanner in) { 
 for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
out.close();
return out;
}


*********************************

#### Score: 6.91514


#### Java Tokens: next, game, testnum, perfect, nextint, string, test, num, format, #%d:, perfectgame, int, result, print, ind, case 

public static int func_dd2dbf9dec144281bc5f882fe544318c(int testNum, int n, int[] l) { 
 final int[] d = new int[n];
for (int i = 0; i < n; ++i) {
    l[i] = PerfectGame.in.nextInt();
}
for (int i = 0; i < n; ++i) {
    d[i] = PerfectGame.in.nextInt();
}
final int[] ind = new int[n];
for (int i = 0; i < n; ++i) {
    ind[i] = i;
}
for (int i = 0; i < n; ++i) {
    for (int j = i + 1; j < n; ++j) {
        if ((l[ind[i]] * d[ind[i]] < l[ind[j]] * d[ind[j]]) || (l[ind[i]] * d[ind[i]] == l[ind[j]] * d[ind[j]] && (d[ind[i]] == 0 && ind[i] > ind[j] || (d[ind[i]] != 0 && (l[ind[i]] > l[ind[j]] || (l[ind[i]] == l[ind[j]] && ind[i] > ind[j])))))) {
            int t = ind[i];
            ind[i] = ind[j];
            ind[j] = t;
        }
    }
}
final int result = 0;
PerfectGame.out.print(String.format("Case #%d:", testNum));
return result;
}


public static int func_1baf810e48f3458abca39d550b201bd4(int testNum, int n, int[] l, int[] d) { 
 for (int i = 0; i < n; ++i) {
    l[i] = PerfectGame.in.nextInt();
}
for (int i = 0; i < n; ++i) {
    d[i] = PerfectGame.in.nextInt();
}
final int[] ind = new int[n];
for (int i = 0; i < n; ++i) {
    ind[i] = i;
}
for (int i = 0; i < n; ++i) {
    for (int j = i + 1; j < n; ++j) {
        if ((l[ind[i]] * d[ind[i]] < l[ind[j]] * d[ind[j]]) || (l[ind[i]] * d[ind[i]] == l[ind[j]] * d[ind[j]] && (d[ind[i]] == 0 && ind[i] > ind[j] || (d[ind[i]] != 0 && (l[ind[i]] > l[ind[j]] || (l[ind[i]] == l[ind[j]] && ind[i] > ind[j])))))) {
            int t = ind[i];
            ind[i] = ind[j];
            ind[j] = t;
        }
    }
}
final int result = 0;
PerfectGame.out.print(String.format("Case #%d:", testNum));
for (int i = 0; i < n; ++i) {
    PerfectGame.out.print(" " + ind[i]);
}
return result;
}


public static int func_9b6e7a28851c4286aa6fec44c8ca4c94(int testNum, int n, int[] l, int[] d) { 
 for (int i = 0; i < n; ++i) {
    d[i] = PerfectGame.in.nextInt();
}
final int[] ind = new int[n];
for (int i = 0; i < n; ++i) {
    ind[i] = i;
}
for (int i = 0; i < n; ++i) {
    for (int j = i + 1; j < n; ++j) {
        if ((l[ind[i]] * d[ind[i]] < l[ind[j]] * d[ind[j]]) || (l[ind[i]] * d[ind[i]] == l[ind[j]] * d[ind[j]] && (d[ind[i]] == 0 && ind[i] > ind[j] || (d[ind[i]] != 0 && (l[ind[i]] > l[ind[j]] || (l[ind[i]] == l[ind[j]] && ind[i] > ind[j])))))) {
            int t = ind[i];
            ind[i] = ind[j];
            ind[j] = t;
        }
    }
}
final int result = 0;
PerfectGame.out.print(String.format("Case #%d:", testNum));
return result;
}

