### Py Tokens: files, map, format, int, lines, y13r5p1, case, range, test, solve, split, msg, open, codejam, lineno 

### Py functions

def func_310b47479de6401e8193cce21640bd3c(c, lines):
    f = open('codejam/test_files/Y13R5P1/A.out', 'w')
    lineno = 1
    for i in range(1, c + 1):
        b, n = map(int, lines[lineno].split())
        x = map(int, lines[lineno + 1].split())
        r = solve(b, x[:n])
        lineno += 2
        msg = 'Case #{}: {:.9f}'.format(i, r)
        print msg
        print  >> f, msg
    return f

def func_9b85c977fd5e45fdaeacce94cb57af57(c, lines):
    f = open('codejam/test_files/Y13R5P1/A.out', 'w')
    lineno = 1
    for i in range(1, c + 1):
        b, n = map(int, lines[lineno].split())
        x = map(int, lines[lineno + 1].split())
        r = solve(b, x[:n])
        lineno += 2
        msg = 'Case #{}: {:.9f}'.format(i, r)
        print msg
        print  >> f, msg
    return c

*********************************

#### Score: 9.89628


#### Java Tokens: next, println, %.11f, problem, nextint, string, solve, format, #%d:, problema, int, case 

public static long func_b30ce8a524b746eba2ae57d5334cb5f2(int cn, PrintWriter out, Scanner in) { 
 int N = in.nextInt();
long p = in.nextInt();
long q = in.nextInt();
long r = in.nextInt();
long s = in.nextInt();
long[] d = new long[N];
for (int i = 0; i < N; i++) {
    d[i] = (p * i + q) % r + s;
}
out.println(String.format("Case #%d: %.11f", cn, ProblemA.solve(d)));
return s;
}


public static long func_6ee463595df041a9839770b878aeab4a(int cn, int N, PrintWriter out, Scanner in) { 
 long p = in.nextInt();
long q = in.nextInt();
long r = in.nextInt();
long s = in.nextInt();
long[] d = new long[N];
for (int i = 0; i < N; i++) {
    d[i] = (p * i + q) % r + s;
}
out.println(String.format("Case #%d: %.11f", cn, ProblemA.solve(d)));
return q;
}


public static long[] func_c9c262c6aec9494c9eb3d131f5d46778(int cn, int N, PrintWriter out, Scanner in) { 
 long p = in.nextInt();
long q = in.nextInt();
long r = in.nextInt();
long s = in.nextInt();
long[] d = new long[N];
for (int i = 0; i < N; i++) {
    d[i] = (p * i + q) % r + s;
}
out.println(String.format("Case #%d: %.11f", cn, ProblemA.solve(d)));
return d;
}


*********************************

#### Score: 9.50330


#### Java Tokens: next, %.11f, nextint, string, format, #%d:, problema, int, println, problem, flush, solve, case 

public static PrintWriter func_de91750d4b6649988c69d8a6a5fe3306(int T, PrintWriter out, Scanner in) { 
 for (int cn = 1; cn <= T; cn++) {
    int N = in.nextInt();
    long p = in.nextInt();
    long q = in.nextInt();
    long r = in.nextInt();
    long s = in.nextInt();
    long[] d = new long[N];
    for (int i = 0; i < N; i++) {
        d[i] = (p * i + q) % r + s;
    }
    out.println(String.format("Case #%d: %.11f", cn, ProblemA.solve(d)));
}
out.flush();
return out;
}


public static PrintWriter func_ca8773b02362430a9ce577a79990645a(PrintWriter out, Scanner in) { 
 int T = in.nextInt();
for (int cn = 1; cn <= T; cn++) {
    int N = in.nextInt();
    long p = in.nextInt();
    long q = in.nextInt();
    long r = in.nextInt();
    long s = in.nextInt();
    long[] d = new long[N];
    for (int i = 0; i < N; i++) {
        d[i] = (p * i + q) % r + s;
    }
    out.println(String.format("Case #%d: %.11f", cn, ProblemA.solve(d)));
}
out.flush();
return out;
}


public static int func_b42b1079e35b420e8f99e43425421d5b(PrintWriter out, Scanner in) { 
 int T = in.nextInt();
for (int cn = 1; cn <= T; cn++) {
    int N = in.nextInt();
    long p = in.nextInt();
    long q = in.nextInt();
    long r = in.nextInt();
    long s = in.nextInt();
    long[] d = new long[N];
    for (int i = 0; i < N; i++) {
        d[i] = (p * i + q) % r + s;
    }
    out.println(String.format("Case #%d: %.11f", cn, ProblemA.solve(d)));
}
out.flush();
return T;
}


*********************************

#### Score: 8.68460


#### Java Tokens: next, println, test, nextint, case, int 

public static PrintWriter func_c8c26e20c8264cafb4030a5259e90a7a(int test, PrintWriter pw, Scanner sc) { 
 pw.println("Case #" + test + ": ");
int w = sc.nextInt();
int l = sc.nextInt();
int u = sc.nextInt();
int g = sc.nextInt();
double sl = 0;
double su = 0;
return pw;
}


public static PrintWriter func_a9e112db93b3410f9a8ef0d6f76e8385(int test, PrintWriter pw, Scanner sc) { 
 pw.println("Case #" + test + ": ");
int w = sc.nextInt();
return pw;
}


public static double func_571532e9809f41ef811e496f09f58193(int test, PrintWriter pw, Scanner sc) { 
 pw.println("Case #" + test + ": ");
int w = sc.nextInt();
int l = sc.nextInt();
int u = sc.nextInt();
int g = sc.nextInt();
double sl = 0;
double su = 0;
return sl;
}


*********************************

#### Score: 8.65967


#### Java Tokens: println, print, system, test, perfect, casenum, num, solve, processing, case 

public static PrintWriter func_0f6e2a337f2a414cbbd6ad86be134486(int caseNum, PrintWriter pw, Scanner sc) { 
 System.out.println("Processing test case " + (caseNum + 1));
pw.print("Case #" + (caseNum + 1) + ":");
new Perfect().solve(sc, pw);
return pw;
}


*********************************

#### Score: 8.65967


#### Java Tokens: cheaters, println, print, system, test, casenum, num, solve, processing, case 

public static PrintWriter func_be029e682a5b49958d4d0d5e38aecc2d(int caseNum, PrintWriter pw, Scanner sc) { 
 System.out.println("Processing test case " + (caseNum + 1));
pw.print("Case #" + (caseNum + 1) + ": ");
new Cheaters().solve(sc, pw);
return pw;
}


*********************************

#### Score: 8.49854


#### Java Tokens: next, %.11f, nextint, string, format, #%d:, problema, int, printwriter, print, println, system, problem, solve, writer, case 

public static int func_59f4e7b568dd4923a707d3c8dbc048ca(Scanner in) { 
 PrintWriter out = new PrintWriter(System.out);
int T = in.nextInt();
for (int cn = 1; cn <= T; cn++) {
    int N = in.nextInt();
    long p = in.nextInt();
    long q = in.nextInt();
    long r = in.nextInt();
    long s = in.nextInt();
    long[] d = new long[N];
    for (int i = 0; i < N; i++) {
        d[i] = (p * i + q) % r + s;
    }
    out.println(String.format("Case #%d: %.11f", cn, ProblemA.solve(d)));
}
return T;
}


*********************************

#### Score: 8.47191


#### Java Tokens: next, game, testnum, perfect, nextint, string, test, num, format, #%d:, perfectgame, int, result, print, ind, case 

public static int func_dd2dbf9dec144281bc5f882fe544318c(int testNum, int n, int[] l) { 
 final int[] d = new int[n];
for (int i = 0; i < n; ++i) {
    l[i] = PerfectGame.in.nextInt();
}
for (int i = 0; i < n; ++i) {
    d[i] = PerfectGame.in.nextInt();
}
final int[] ind = new int[n];
for (int i = 0; i < n; ++i) {
    ind[i] = i;
}
for (int i = 0; i < n; ++i) {
    for (int j = i + 1; j < n; ++j) {
        if ((l[ind[i]] * d[ind[i]] < l[ind[j]] * d[ind[j]]) || (l[ind[i]] * d[ind[i]] == l[ind[j]] * d[ind[j]] && (d[ind[i]] == 0 && ind[i] > ind[j] || (d[ind[i]] != 0 && (l[ind[i]] > l[ind[j]] || (l[ind[i]] == l[ind[j]] && ind[i] > ind[j])))))) {
            int t = ind[i];
            ind[i] = ind[j];
            ind[j] = t;
        }
    }
}
final int result = 0;
PerfectGame.out.print(String.format("Case #%d:", testNum));
return result;
}


public static int func_1baf810e48f3458abca39d550b201bd4(int testNum, int n, int[] l, int[] d) { 
 for (int i = 0; i < n; ++i) {
    l[i] = PerfectGame.in.nextInt();
}
for (int i = 0; i < n; ++i) {
    d[i] = PerfectGame.in.nextInt();
}
final int[] ind = new int[n];
for (int i = 0; i < n; ++i) {
    ind[i] = i;
}
for (int i = 0; i < n; ++i) {
    for (int j = i + 1; j < n; ++j) {
        if ((l[ind[i]] * d[ind[i]] < l[ind[j]] * d[ind[j]]) || (l[ind[i]] * d[ind[i]] == l[ind[j]] * d[ind[j]] && (d[ind[i]] == 0 && ind[i] > ind[j] || (d[ind[i]] != 0 && (l[ind[i]] > l[ind[j]] || (l[ind[i]] == l[ind[j]] && ind[i] > ind[j])))))) {
            int t = ind[i];
            ind[i] = ind[j];
            ind[j] = t;
        }
    }
}
final int result = 0;
PerfectGame.out.print(String.format("Case #%d:", testNum));
for (int i = 0; i < n; ++i) {
    PerfectGame.out.print(" " + ind[i]);
}
return result;
}


public static int func_9b6e7a28851c4286aa6fec44c8ca4c94(int testNum, int n, int[] l, int[] d) { 
 for (int i = 0; i < n; ++i) {
    d[i] = PerfectGame.in.nextInt();
}
final int[] ind = new int[n];
for (int i = 0; i < n; ++i) {
    ind[i] = i;
}
for (int i = 0; i < n; ++i) {
    for (int j = i + 1; j < n; ++j) {
        if ((l[ind[i]] * d[ind[i]] < l[ind[j]] * d[ind[j]]) || (l[ind[i]] * d[ind[i]] == l[ind[j]] * d[ind[j]] && (d[ind[i]] == 0 && ind[i] > ind[j] || (d[ind[i]] != 0 && (l[ind[i]] > l[ind[j]] || (l[ind[i]] == l[ind[j]] && ind[i] > ind[j])))))) {
            int t = ind[i];
            ind[i] = ind[j];
            ind[j] = t;
        }
    }
}
final int result = 0;
PerfectGame.out.print(String.format("Case #%d:", testNum));
return result;
}


*********************************

#### Score: 8.40660


#### Java Tokens: next, nextint, test, casenum, num, cnt, casecnt, int, cheaters, println, print, system, solve, processing, case 

public static PrintWriter func_896f57c2e8aa4eb1b56eed6e190ad261(PrintWriter pw, Scanner sc) { 
 int caseCnt = sc.nextInt();
for (int caseNum = 0; caseNum < caseCnt; caseNum++) {
    System.out.println("Processing test case " + (caseNum + 1));
    pw.print("Case #" + (caseNum + 1) + ": ");
    new Cheaters().solve(sc, pw);
}
return pw;
}


public static int func_950eabbe4c274f529b582c1c42fba69d(PrintWriter pw, Scanner sc) { 
 int caseCnt = sc.nextInt();
for (int caseNum = 0; caseNum < caseCnt; caseNum++) {
    System.out.println("Processing test case " + (caseNum + 1));
    pw.print("Case #" + (caseNum + 1) + ": ");
    new Cheaters().solve(sc, pw);
}
return caseCnt;
}


*********************************

#### Score: 8.40660


#### Java Tokens: next, nextint, test, perfect, casenum, num, cnt, casecnt, int, println, print, system, solve, processing, case 

public static int func_f88706193b744a4db4350bd01f1a8d9a(PrintWriter pw, Scanner sc) { 
 int caseCnt = sc.nextInt();
for (int caseNum = 0; caseNum < caseCnt; caseNum++) {
    System.out.println("Processing test case " + (caseNum + 1));
    pw.print("Case #" + (caseNum + 1) + ":");
    new Perfect().solve(sc, pw);
}
return caseCnt;
}


public static PrintWriter func_125af6ec70374e2a920637c57deaed08(PrintWriter pw, Scanner sc) { 
 int caseCnt = sc.nextInt();
for (int caseNum = 0; caseNum < caseCnt; caseNum++) {
    System.out.println("Processing test case " + (caseNum + 1));
    pw.print("Case #" + (caseNum + 1) + ":");
    new Perfect().solve(sc, pw);
}
return pw;
}


*********************************

#### Score: 8.36891


#### Java Tokens: result, game, print, testnum, perfect, string, test, num, format, #%d:, perfectgame, case 

public static int func_a5c2a17df3fe48c9b0708dc00cd0bb76(int testNum) { 
 final int result = 0;
PerfectGame.out.print(String.format("Case #%d:", testNum));
return result;
}

