### Py Tokens: info, upper, lower, int, range, split, readline, fin 

### Py functions

def func_99bbfe1e01914288be72523bf135a92f(fin, i, info):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    return info

def func_3727af1699434d8981c65cbb82f7ea14(fin, i, info):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    return lower

def func_22c7d64a62974b9b97226219bc81c18f(fin, i, info):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    return upper

def func_fff1e85772b24369b3597b2a174669e0(fin, i, info):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    return i

def func_3fb93a7a52e24f30ae949b134c4ff463(fin, i, info):
    lower = [[int(i) for i in fin.readline().split()] for j in range(info[1])]
    upper = [[int(i) for i in fin.readline().split()] for j in range(info[2])]
    return info

*********************************

#### Score: 7.54332


#### Java Tokens: next, nextint, lower, upper, point, int 

public static Point[] func_88f582a302a74754a6172f5351050534(int u, int l, Scanner in) { 
 Point[] lower = new Point[l];
for (int i = 0; i < l; ++i) {
    lower[i] = new Point(in.nextInt(), in.nextInt());
}
Point[] upper = new Point[u];
return lower;
}


public static Point[] func_2acacabb9eab481db2f9422761422a08(int u, int l, Scanner in) { 
 Point[] lower = new Point[l];
for (int i = 0; i < l; ++i) {
    lower[i] = new Point(in.nextInt(), in.nextInt());
}
Point[] upper = new Point[u];
return upper;
}


*********************************

#### Score: 7.54332


#### Java Tokens: next, nextint, lower, upper, int, point 

public static int func_f79f76c8b8394259ba5d3ff02f5e16a0(Scanner in) { 
 // lower points
int l = in.nextInt();
// upper points
int u = in.nextInt();
int // guests
g = in.nextInt();
Point[] lower = new Point[l];
for (int i = 0; i < l; ++i) {
    lower[i] = new Point(in.nextInt(), in.nextInt());
}
Point[] upper = new Point[u];
return g;
}


public static int func_31e6357e45b24d7889fa4cdad859452b(Scanner in) { 
 int // width
w = in.nextInt();
// lower points
int l = in.nextInt();
// upper points
int u = in.nextInt();
int // guests
g = in.nextInt();
Point[] lower = new Point[l];
for (int i = 0; i < l; ++i) {
    lower[i] = new Point(in.nextInt(), in.nextInt());
}
Point[] upper = new Point[u];
for (int i = 0; i < u; ++i) {
    upper[i] = new Point(in.nextInt(), in.nextInt());
}
return w;
}


public static Point[] func_978373b2b2c1406ca5a5011c2683a647(int u, int l, Scanner in) { 
 int // guests
g = in.nextInt();
Point[] lower = new Point[l];
for (int i = 0; i < l; ++i) {
    lower[i] = new Point(in.nextInt(), in.nextInt());
}
Point[] upper = new Point[u];
return lower;
}


*********************************

#### Score: 6.60564


#### Java Tokens: size, upper, lower 

public static int func_2f79491f19b54a30ad516ae05177d605(ArrayList<Point> lower, ArrayList<Point> upper) { 
 int u = upper.size();
int l = lower.size();
return l;
}


public static int func_2ddf71a890e64c73ad89d2f3eda1a899(ArrayList<Point> lower, ArrayList<Point> upper) { 
 int u = upper.size();
int l = lower.size();
return u;
}


public static ArrayList<Point> func_99683052cf9c428f93ad5d0e9a9385a3(ArrayList<Point> lower, ArrayList<Point> upper) { 
 int u = upper.size();
int l = lower.size();
return upper;
}


*********************************

#### Score: 6.48111


#### Java Tokens: next, area, total, nextint, lower, upper, totalarea, int, point 

public static int func_a86ea935ccb04587b63a355333ef6a76(Scanner in) { 
 // lower points
int l = in.nextInt();
// upper points
int u = in.nextInt();
int // guests
g = in.nextInt();
Point[] lower = new Point[l];
for (int i = 0; i < l; ++i) {
    lower[i] = new Point(in.nextInt(), in.nextInt());
}
Point[] upper = new Point[u];
for (int i = 0; i < u; ++i) {
    upper[i] = new Point(in.nextInt(), in.nextInt());
}
double totalArea = 0.0;
return g;
}


public static Point[] func_2d8096e689e841c88861147576eadc45(Scanner in) { 
 // lower points
int l = in.nextInt();
// upper points
int u = in.nextInt();
int // guests
g = in.nextInt();
Point[] lower = new Point[l];
for (int i = 0; i < l; ++i) {
    lower[i] = new Point(in.nextInt(), in.nextInt());
}
Point[] upper = new Point[u];
for (int i = 0; i < u; ++i) {
    upper[i] = new Point(in.nextInt(), in.nextInt());
}
double totalArea = 0.0;
return lower;
}


public static int func_81f77f79797c4ed28e4ecf933e359c06(Scanner in) { 
 int // width
w = in.nextInt();
// lower points
int l = in.nextInt();
// upper points
int u = in.nextInt();
int // guests
g = in.nextInt();
Point[] lower = new Point[l];
for (int i = 0; i < l; ++i) {
    lower[i] = new Point(in.nextInt(), in.nextInt());
}
Point[] upper = new Point[u];
for (int i = 0; i < u; ++i) {
    upper[i] = new Point(in.nextInt(), in.nextInt());
}
double totalArea = 0.0;
return l;
}


*********************************

#### Score: 6.48111


#### Java Tokens: next, println, system, nextint, lower, upper, case, int, point 

public static int func_a1770144a03d4dcd92267cbf1eca1697(int cc, Scanner in) { 
 System.out.println("Case #" + cc + ": ");
int // width
w = in.nextInt();
// lower points
int l = in.nextInt();
// upper points
int u = in.nextInt();
int // guests
g = in.nextInt();
Point[] lower = new Point[l];
for (int i = 0; i < l; ++i) {
    lower[i] = new Point(in.nextInt(), in.nextInt());
}
Point[] upper = new Point[u];
return w;
}


public static int func_13c53349f3014880a2de29a628466e05(int cc, Scanner in) { 
 System.out.println("Case #" + cc + ": ");
int // width
w = in.nextInt();
// lower points
int l = in.nextInt();
// upper points
int u = in.nextInt();
int // guests
g = in.nextInt();
Point[] lower = new Point[l];
for (int i = 0; i < l; ++i) {
    lower[i] = new Point(in.nextInt(), in.nextInt());
}
Point[] upper = new Point[u];
for (int i = 0; i < u; ++i) {
    upper[i] = new Point(in.nextInt(), in.nextInt());
}
return u;
}


public static int func_8c307cae72ea4b0f9ee4f4474e5b6051(int cc, Scanner in) { 
 System.out.println("Case #" + cc + ": ");
int // width
w = in.nextInt();
// lower points
int l = in.nextInt();
// upper points
int u = in.nextInt();
int // guests
g = in.nextInt();
Point[] lower = new Point[l];
for (int i = 0; i < l; ++i) {
    lower[i] = new Point(in.nextInt(), in.nextInt());
}
Point[] upper = new Point[u];
return u;
}


*********************************

#### Score: 6.48111


#### Java Tokens: next, area, total, nextint, lower, upper, totalarea, point, int 

public static double func_20bd94dbc3b54db7a9378ec9921e2a36(int u, int l, Scanner in) { 
 Point[] lower = new Point[l];
for (int i = 0; i < l; ++i) {
    lower[i] = new Point(in.nextInt(), in.nextInt());
}
Point[] upper = new Point[u];
for (int i = 0; i < u; ++i) {
    upper[i] = new Point(in.nextInt(), in.nextInt());
}
double totalArea = 0.0;
return totalArea;
}


public static double func_5487c17b23f34d22a19e1c65ef83b375(int u, int l, Point[] lower, Scanner in) { 
 for (int i = 0; i < l; ++i) {
    lower[i] = new Point(in.nextInt(), in.nextInt());
}
Point[] upper = new Point[u];
for (int i = 0; i < u; ++i) {
    upper[i] = new Point(in.nextInt(), in.nextInt());
}
double totalArea = 0.0;
return totalArea;
}


*********************************

#### Score: 5.93334


#### Java Tokens: next, area, cur, total, curl, nextint, lower, upper, totalarea, point, int 

public static double func_474fcf2d7a08451d8819a46723d56cc6(int u, int l, Scanner in) { 
 Point[] lower = new Point[l];
for (int i = 0; i < l; ++i) {
    lower[i] = new Point(in.nextInt(), in.nextInt());
}
Point[] upper = new Point[u];
for (int i = 0; i < u; ++i) {
    upper[i] = new Point(in.nextInt(), in.nextInt());
}
double totalArea = 0.0;
int curL = 1;
return totalArea;
}


public static int func_676b8308ae894bbf9137d79b96e0fd23(int u, int l, Point[] lower, Scanner in) { 
 for (int i = 0; i < l; ++i) {
    lower[i] = new Point(in.nextInt(), in.nextInt());
}
Point[] upper = new Point[u];
for (int i = 0; i < u; ++i) {
    upper[i] = new Point(in.nextInt(), in.nextInt());
}
double totalArea = 0.0;
int curL = 1;
return curL;
}


public static double func_e0b607e11cee4702aef4698566821e8d(int u, int l, Point[] lower, Scanner in) { 
 for (int i = 0; i < l; ++i) {
    lower[i] = new Point(in.nextInt(), in.nextInt());
}
Point[] upper = new Point[u];
for (int i = 0; i < u; ++i) {
    upper[i] = new Point(in.nextInt(), in.nextInt());
}
double totalArea = 0.0;
int curL = 1;
return totalArea;
}


*********************************

#### Score: 5.93334


#### Java Tokens: next, area, cur, total, curl, nextint, lower, upper, totalarea, int, point 

public static int func_eb1dfda1a4694cbaa9b48d2f76c12388(Scanner in) { 
 int // width
w = in.nextInt();
// lower points
int l = in.nextInt();
// upper points
int u = in.nextInt();
int // guests
g = in.nextInt();
Point[] lower = new Point[l];
for (int i = 0; i < l; ++i) {
    lower[i] = new Point(in.nextInt(), in.nextInt());
}
Point[] upper = new Point[u];
for (int i = 0; i < u; ++i) {
    upper[i] = new Point(in.nextInt(), in.nextInt());
}
double totalArea = 0.0;
int curL = 1;
return w;
}


public static Point[] func_f074d8c37f7f4d818953deaf530af8a4(Scanner in) { 
 // lower points
int l = in.nextInt();
// upper points
int u = in.nextInt();
int // guests
g = in.nextInt();
Point[] lower = new Point[l];
for (int i = 0; i < l; ++i) {
    lower[i] = new Point(in.nextInt(), in.nextInt());
}
Point[] upper = new Point[u];
for (int i = 0; i < u; ++i) {
    upper[i] = new Point(in.nextInt(), in.nextInt());
}
double totalArea = 0.0;
int curL = 1;
return upper;
}


public static Point[] func_38c867a4b7c14e74b2de4768ec706997(int l, Scanner in) { 
 // upper points
int u = in.nextInt();
int // guests
g = in.nextInt();
Point[] lower = new Point[l];
for (int i = 0; i < l; ++i) {
    lower[i] = new Point(in.nextInt(), in.nextInt());
}
Point[] upper = new Point[u];
for (int i = 0; i < u; ++i) {
    upper[i] = new Point(in.nextInt(), in.nextInt());
}
double totalArea = 0.0;
int curL = 1;
return lower;
}


*********************************

#### Score: 5.83797


#### Java Tokens: size, last, upper, lower, lastx 

public static double func_052c8eccdefb487eaf36cb72797024c2(ArrayList<Point> lower, ArrayList<Point> upper) { 
 int u = upper.size();
int l = lower.size();
double lastX = 0;
return lastX;
}


public static ArrayList<Point> func_841846f506c64d949c3eead004f6ca88(ArrayList<Point> lower, ArrayList<Point> upper) { 
 int u = upper.size();
int l = lower.size();
double lastX = 0;
return lower;
}


public static int func_31fb1b921e4b400993fcc498fe66b711(ArrayList<Point> lower, ArrayList<Point> upper) { 
 int u = upper.size();
int l = lower.size();
double lastX = 0;
return u;
}


*********************************

#### Score: 5.83797


#### Java Tokens: cur, curl, size, upper, lower 

public static int func_54f5d6c14dba4b419a3963f02647dd3f(ArrayList<Point> lower, ArrayList<Point> upper) { 
 int curL = 1;
int u = upper.size();
int l = lower.size();
return curL;
}


public static ArrayList<Point> func_f442a76ee1cb450aba4ffc8dae930992(ArrayList<Point> lower, ArrayList<Point> upper) { 
 int curL = 1;
int u = upper.size();
int l = lower.size();
return lower;
}


public static int func_b12c995c5bfd4652bc4eb29652457345(ArrayList<Point> lower, ArrayList<Point> upper) { 
 int curL = 1;
int u = upper.size();
int l = lower.size();
return l;
}

