### Py Tokens: slope, area, uppslope, oldarea, lowslope 

### Py functions

def func_4e939c349ac34db784372c765f94c2a6(area, lowslope, slope, uppslope):
    slope = uppslope - lowslope
    oldarea = area
    return slope

def func_e647f924042146a8af3e7010e632f1f7(area, lowslope, slope, uppslope):
    slope = uppslope - lowslope
    oldarea = area
    return slope

*********************************

#### Score: 3.70124


#### Java Tokens: area 

public static double func_bf9da7196f404e56ae8e3c42bc93d311(int n, A.Point[] p) { 
 double area = 0;
for (int i = 0; i + 1 < n; i++) {
    area += p[i].x * (p[i + 1].y) - p[i].y * p[i + 1].x;
}
return area;
}


public static int func_41e81178f7a24586b1645ef2244863e8(int g, int i, double area) { 
 double na = (area * i) / g;
int j = 0;
return j;
}


public static double func_3476fe9f761545da96bf1b68fd8f4db8(int g, int i, double area) { 
 double na = (area * i) / g;
int j = 0;
return na;
}


*********************************

#### Score: 3.45144


#### Java Tokens: area, remain 

public static double func_0700cc6842054f2794d6db5b8cad74bb(int x0, double area, double x) { 
 double remain = area;
x0 = (int) x;
int x1 = x0 + 1;
return remain;
}


public static int func_b78fe80114d14149b079ca0807b9beac(int x0, double area, double x) { 
 double remain = area;
x0 = (int) x;
return x0;
}


public static double func_019975c34f36423cae7bee9f0f7a8253(int x0, double area, double x) { 
 double remain = area;
x0 = (int) x;
return remain;
}


*********************************

#### Score: 3.45144


#### Java Tokens: area, len 

public static double func_0cca408bacb8461d9c71e56a7ce2a31a(int w, double[] len) { 
 double area = 0;
for (int i = 1; i <= w; i++) {
    area += (len[i - 1] + len[i]) / 2;
}
return area;
}


public static double func_b9a757e01d78459e9902918ef38284f9(int w, int g, double[] len) { 
 double area = 0;
for (int i = 1; i <= w; i++) {
    area += (len[i - 1] + len[i]) / 2;
}
area /= g;
return area;
}


public static double func_b99cd0dbdc854271bb5de21037cf33f2(int w, int g, double area, double[] len) { 
 for (int i = 1; i <= w; i++) {
    area += (len[i - 1] + len[i]) / 2;
}
area /= g;
return area;
}


*********************************

#### Score: 3.45144


#### Java Tokens: area, length 

public static double func_67575dd71ba5442c9d76e1e1e3e5e676(int[] x, double area, double w, double[] y) { 
 for (int i = 0; i < x.length - 1; i++) {
    if (x[i + 1] < w) {
        area += (x[i + 1] - x[i]) * (y[i] + y[i + 1]);
    } else {
        area += (w - x[i]) * (y[i] + (y[i] + (y[i + 1] - y[i]) * (w - x[i]) / (x[i + 1] - x[i])));
        break;
    }
}
return area;

}


public static double func_90c916dc4442482f8d0efb8d8fe75001(int[] x, double w, double[] y) { 
 double area = 0;
for (int i = 0; i < x.length - 1; i++) {
    if (x[i + 1] < w) {
        area += (x[i + 1] - x[i]) * (y[i] + y[i + 1]);
    } else {
        area += (w - x[i]) * (y[i] + (y[i] + (y[i + 1] - y[i]) * (w - x[i]) / (x[i + 1] - x[i])));
        break;
    }
}
return area;
}


*********************************

#### Score: 3.45144


#### Java Tokens: area, need 

public static double func_28bb15c8187d4bf08e22c96d377bb6ed(int i, int g, int X, double area) { 
 double need = i * area / g;
double l = 0;
double r = X;
return need;
}


public static double func_f007387059a6498c9df609ab305900fc(int i, int g, int X, double area) { 
 double need = i * area / g;
double l = 0;
double r = X;
return r;
}


public static double func_0d5f93c61c104aa6a5ef8b6b39e940c1(int i, int g, double area) { 
 double need = i * area / g;
double l = 0;
return l;
}


*********************************

#### Score: 3.45144


#### Java Tokens: area, i-- 

public static double func_a174893426d548868b415870bcd2d7ec(int m, double area, A.Point[] q) { 
 for (int i = m - 1; i > 0; i--) {
    area += q[i].x * q[i - 1].y - q[i].y * q[i - 1].x;
}
return area;
}


*********************************

#### Score: 3.23712


#### Java Tokens: area, len, remain 

public static double func_1cc02f7351a940d7beee273556182bf6(int x0, double area, double x, double[] len) { 
 double remain = area;
x0 = (int) x;
int x1 = x0 + 1;
double k = 1.0 * (len[x1] - len[x0]);
return remain;
}


public static int func_2d2e5b31507e4e37bebac719fc1af207(int x0, double area, double x, double[] len) { 
 double remain = area;
x0 = (int) x;
int x1 = x0 + 1;
double k = 1.0 * (len[x1] - len[x0]);
double y = k * (x - x0) + len[x0];
return x0;
}


public static int func_49ca744cc2ec4eb2a0c6841d185043f5(int x0, double area, double x, double[] len) { 
 double remain = area;
x0 = (int) x;
int x1 = x0 + 1;
double k = 1.0 * (len[x1] - len[x0]);
return x0;
}


*********************************

#### Score: 3.23712


#### Java Tokens: narea, area, testl 

public static double func_328b68f03ba64ae587dc2551f5491587(int g, int pos, double area) { 
 double narea = area / g * pos;
double testl = 0;
return testl;
}


public static double func_d42430276ff04f42aaa9427af4c33dd9(int g, int pos, double area) { 
 double narea = area / g * pos;
double testl = 0;
return narea;
}


*********************************

#### Score: 3.23712


#### Java Tokens: area, xmin, scrt 

public static double func_e176ce3dd5f54823b148e3954deb25c3(int x0, double st, double scrt) { 
 double area = st - scrt;
double xmin = x0;
return xmin;
}


public static double func_0d7aabfc45f943d58583b53b47ef6690(int x0, double st, double scrt) { 
 double area = st - scrt;
double xmin = x0;
return area;
}


*********************************

#### Score: 3.23712


#### Java Tokens: area, lastx, target 

public static double func_373a3869f55643a2a840009a1e4b1553(double area) { 
 double lastx = 0;
double target = area / A.G;
return lastx;
}


public static double func_171e573e7d07460ebeacc3f38fb921c4(double area) { 
 double lastx = 0;
double target = area / A.G;
return target;
}

