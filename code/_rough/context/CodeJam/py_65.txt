### Py Tokens: width, areafromleft, area, needed, left 

### Py functions

def func_2166993ebefe42109d452c5bdf292993(area_from_left, needed, x1, x2):
    area_from_left += needed
    width = x2 - x1
    return area_from_left

def func_c24b6530c8e9498e8e8c3fd8a30207c4(area_from_left, needed, x1, x2):
    area_from_left += needed
    width = x2 - x1
    return area_from_left

def func_48fcab45082a4c84bc508f8f5900e7c8(area_from_left, needed, x1, x2):
    area_from_left += needed
    width = x2 - x1
    return area_from_left

def func_23ff5cc2a219469782e7275cda15520e(area_from_left, needed, x1, x2):
    area_from_left += needed
    width = x2 - x1
    return area_from_left

*********************************

#### Score: 8.27416


#### Java Tokens: width, exp 

public static double func_8cb3d25a275a4c0cbc9d3e24201804e7(int width, int j, long ma, long all, double exp) { 
 exp += ma * 36.0;
exp -= all + ma * width + j;
return exp;
}


*********************************

#### Score: 7.71726


#### Java Tokens: width, exp, height 

public static double func_894551d7df1740048adf5d1d0ac4acdd(int width, int j, long height) { 
 double exp = 0;
for (int k = 0; k < width - j; ++k) {
    exp += 36.0 * (height - A.X[k]) / (width - j);
}
return exp;
}


*********************************

#### Score: 7.23424


#### Java Tokens: min, width, math, exp 

public static long func_dabd8d9d42c54208a3df1ce0a301f3a2(int width, int j, long mh, long all, double exp) { 
 long ma = Math.min(mh, (A.B - all - j) / width);
exp += ma * 36.0;
exp -= all + ma * width + j;
return ma;
}


public static double func_62e38c9f92bf433eb3502ddeb70c0f47(int width, int j, long mh, long all, double exp) { 
 long ma = Math.min(mh, (A.B - all - j) / width);
exp += ma * 36.0;
exp -= all + ma * width + j;
return exp;
}


*********************************

#### Score: 5.66086


#### Java Tokens: area, cur, left, remarea, rem, curleft 

public static double func_39e93559773949fab9c9976333441ffd(int uk, double curLeft, double remArea) { 
 curLeft -= remArea;
uk++;
return curLeft;
}


*********************************

#### Score: 4.24237


#### Java Tokens: left, prof 

public static long func_ecd0026a52a14890922a76947d18521f(int i, long eq, long left) { 
 long up = left;
double prof = -eq - up * i;
return up;
}


public static double func_f5643f9b62c94083b4053bbf00449a3b(int i, long eq, long left) { 
 long up = left;
double prof = -eq - up * i;
return prof;
}


*********************************

#### Score: 4.24237


#### Java Tokens: left, psum 

public static int func_fe7ae15fc3f3445fb4c190bbbfab33c9(int N, int i, long[] psum) { 
 int lo = i + 1, hi = N;
long left = psum[N] - psum[i];
return hi;
}


public static long func_d59dc91b104f4af8941efe502b3365a3(int N, int i, long[] psum) { 
 int lo = i + 1, hi = N;
long left = psum[N] - psum[i];
return left;
}


public static int func_1f48d1d6badb42e0834d0fa43eaa52cb(int N, int i, long[] psum) { 
 int lo = i + 1, hi = N;
long left = psum[N] - psum[i];
return lo;
}


*********************************

#### Score: 4.24237


#### Java Tokens: left, count 

public static long func_8373c4e26e3248279304458be5ea812c(int count, long left, long[] a) { 
 if (left == a[count - 1] - 1) {
    return -1;
} else {
    return left;
}

}


*********************************

#### Score: 4.24237


#### Java Tokens: left, right 

public static double func_f328a2bad7564210944accc2c7503d97(double w) { 
 double left = 0;
double right = w;
return left;
}


public static long func_c4c9d8488eac4e89a49b17b875ec73ca(long right, long left) { 
 long m1 = (left * 2 + right) / 3;
long m2 = (left + right * 2) / 3;
return m1;
}


public static long func_797121d40d924bb2a5d55be16bde3934(long right, long left) { 
 long m1 = (left * 2 + right) / 3;
long m2 = (left + right * 2) / 3;
return m2;
}


*********************************

#### Score: 4.24237


#### Java Tokens: left, mid 

public static long func_86029810632a4d22ad5bff9e5bf5d518(int lo, int mid, int hi, long s1, long left) { 
 long s2 = left - s1;
if (s1 >= s2) {
    hi = mid;
} else {
    lo = mid + 1;
}
return s2;
}


public static int func_704a5ab9fe0c430da23bdf9f39b700b0(int lo, int mid, int hi, long s1, long left) { 
 long s2 = left - s1;
if (s1 >= s2) {
    hi = mid;
} else {
    lo = mid + 1;
}
return lo;
}


public static int func_a279f84f9f9948e6b5959e31c9d1b59a(int lo, int mid, int hi, long s1, long left) { 
 long s2 = left - s1;
if (s1 >= s2) {
    hi = mid;
} else {
    lo = mid + 1;
}
return hi;
}


*********************************

#### Score: 3.97188


#### Java Tokens: left, start, right 

public static int func_5c8003a0b5d14e508056e637da090fbe(int start, int N) { 
 int left = start;
int right = N;
return right;
}


public static int func_f577ef2c850d41878f93f657a77ab29d(int start, int N) { 
 int left = start;
int right = N;
return left;
}

