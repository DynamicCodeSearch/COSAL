### Py Tokens: hmin, xrange, jmin, calc, rmax 

### Py functions

def func_26a25cab5d6544ffb56beb807501c6dd(B, i, rmax, x, y):
    r = calc(x, y, 0)
    if r > rmax:
        rmax = r
    for i in xrange(B):
        jmin = 0
        hmin = y[0]
        for j in xrange(37):
            if y[j] < hmin:
                hmin = y[j]
                jmin = j
        y[jmin] += 1
        r = calc(x, y, i + 1)
        if r > rmax:
            rmax = r
    if y[j] < hmin:
        hmin = y[j]
        jmin = j
    return B

def func_31dd80ab3eaf496ab099f07a081af529(B, i, rmax, x, y):
    r = calc(x, y, 0)
    if r > rmax:
        rmax = r
    for i in xrange(B):
        jmin = 0
        hmin = y[0]
        for j in xrange(37):
            if y[j] < hmin:
                hmin = y[j]
                jmin = j
        y[jmin] += 1
        r = calc(x, y, i + 1)
        if r > rmax:
            rmax = r
    return i

def func_c4df8756f616439b9ca7cf5bdb81aa5f(B, i, rmax, x, y):
    r = calc(x, y, 0)
    if r > rmax:
        rmax = r
    for i in xrange(B):
        jmin = 0
        hmin = y[0]
        for j in xrange(37):
            if y[j] < hmin:
                hmin = y[j]
                jmin = j
        y[jmin] += 1
        r = calc(x, y, i + 1)
        if r > rmax:
            rmax = r
    if y[j] < hmin:
        hmin = y[j]
        jmin = j
    return y

def func_5d05e8ff6e60438bbee94ef429a78386(B, i, rmax, x, y):
    r = calc(x, y, 0)
    if r > rmax:
        rmax = r
    for i in xrange(B):
        jmin = 0
        hmin = y[0]
        for j in xrange(37):
            if y[j] < hmin:
                hmin = y[j]
                jmin = j
        y[jmin] += 1
        r = calc(x, y, i + 1)
        if r > rmax:
            rmax = r
    if y[j] < hmin:
        hmin = y[j]
        jmin = j
    return hmin

def func_702446bd604b4524ab3ac13c83d627bf(i, r, rmax, x, y):
    jmin = 0
    hmin = y[0]
    for j in xrange(37):
        if y[j] < hmin:
            hmin = y[j]
            jmin = j
    y[jmin] += 1
    r = calc(x, y, i + 1)
    if r > rmax:
        rmax = r
    return r

*********************************

#### Score: 5.44164


#### Java Tokens: high, low, baia, mid, bai, calc 

public static double func_2c0ecd58bc3d4c0fb5f5412c34719e10(int i, double S, double low, double high, double mid) { 
 double SS = (BaiA.calc(mid, BaiA.U, BaiA.xu, BaiA.yu) - BaiA.calc(mid, BaiA.L, BaiA.xl, BaiA.yl));
if (SS < S * (i + 1))
    low = mid;
else
    high = mid;
return high;
}


public static double func_4f2abbc3c6bc404ab270952c81b0e437(int i, double S, double low, double high, double mid) { 
 double SS = (BaiA.calc(mid, BaiA.U, BaiA.xu, BaiA.yu) - BaiA.calc(mid, BaiA.L, BaiA.xl, BaiA.yl));
if (SS < S * (i + 1))
    low = mid;
else
    high = mid;
return low;
}


public static double func_01c4171811714ddba68b4f21182386d4(int i, double S, double low, double high, double mid) { 
 double SS = (BaiA.calc(mid, BaiA.U, BaiA.xu, BaiA.yu) - BaiA.calc(mid, BaiA.L, BaiA.xl, BaiA.yl));
if (SS < S * (i + 1))
    low = mid;
else
    high = mid;
return SS;
}


*********************************

#### Score: 5.44164


#### Java Tokens: high, low, mid, baia, bai, calc 

public static double func_d38dbb96e5014d6698719d3f1e5028f5(int i, double S, double low, double high) { 
 double mid = (low + high) / 2;
double SS = (BaiA.calc(mid, BaiA.U, BaiA.xu, BaiA.yu) - BaiA.calc(mid, BaiA.L, BaiA.xl, BaiA.yl));
if (SS < S * (i + 1))
    low = mid;
else
    high = mid;
return mid;
}


public static double func_9a8dd59990c14a548c953f5b32eee8d4(int i, double S, double low, double high) { 
 double mid = (low + high) / 2;
double SS = (BaiA.calc(mid, BaiA.U, BaiA.xu, BaiA.yu) - BaiA.calc(mid, BaiA.L, BaiA.xl, BaiA.yl));
if (SS < S * (i + 1))
    low = mid;
else
    high = mid;
return SS;
}


public static double func_e92a904b78034958a984600503f02c29(int i, double S, double low, double high) { 
 double mid = (low + high) / 2;
double SS = (BaiA.calc(mid, BaiA.U, BaiA.xu, BaiA.yu) - BaiA.calc(mid, BaiA.L, BaiA.xl, BaiA.yl));
if (SS < S * (i + 1))
    low = mid;
else
    high = mid;
return high;
}


*********************************

#### Score: 5.44164


#### Java Tokens: next, nextdouble, double, baia, bai, calc 

public static double func_49f35184c5fd48dab138e65ea294473a(Scanner sc) { 
 BaiA.yu = new double[BaiA.U];
for (int i = 0; i < BaiA.L; ++i) {
    BaiA.xl[i] = sc.nextDouble();
    BaiA.yl[i] = sc.nextDouble();
}
for (int i = 0; i < BaiA.U; ++i) {
    BaiA.xu[i] = sc.nextDouble();
    BaiA.yu[i] = sc.nextDouble();
}
double S = -(BaiA.calc(BaiA.W, BaiA.L, BaiA.xl, BaiA.yl) - BaiA.calc(BaiA.W, BaiA.U, BaiA.xu, BaiA.yu)) / BaiA.G;
return S;
}


public static double func_b5cdf2adc0ea40d79cb94f8765c2401c(Scanner sc) { 
 for (int i = 0; i < BaiA.L; ++i) {
    BaiA.xl[i] = sc.nextDouble();
    BaiA.yl[i] = sc.nextDouble();
}
for (int i = 0; i < BaiA.U; ++i) {
    BaiA.xu[i] = sc.nextDouble();
    BaiA.yu[i] = sc.nextDouble();
}
double S = -(BaiA.calc(BaiA.W, BaiA.L, BaiA.xl, BaiA.yl) - BaiA.calc(BaiA.W, BaiA.U, BaiA.xu, BaiA.yu)) / BaiA.G;
return S;
}


public static double func_2a290afe6b214af38a23e846d95a93d5(Scanner sc) { 
 BaiA.yl = new double[BaiA.L];
BaiA.xu = new double[BaiA.U];
BaiA.yu = new double[BaiA.U];
for (int i = 0; i < BaiA.L; ++i) {
    BaiA.xl[i] = sc.nextDouble();
    BaiA.yl[i] = sc.nextDouble();
}
for (int i = 0; i < BaiA.U; ++i) {
    BaiA.xu[i] = sc.nextDouble();
    BaiA.yu[i] = sc.nextDouble();
}
double S = -(BaiA.calc(BaiA.W, BaiA.L, BaiA.xl, BaiA.yl) - BaiA.calc(BaiA.W, BaiA.U, BaiA.xu, BaiA.yu)) / BaiA.G;
return S;
}


*********************************

#### Score: 5.44164


#### Java Tokens: println, test, baia, bai, calc, case 

public static PrintWriter func_fcefc37770574668b6663d589ccf0990(int test, PrintWriter pw) { 
 double S = -(BaiA.calc(BaiA.W, BaiA.L, BaiA.xl, BaiA.yl) - BaiA.calc(BaiA.W, BaiA.U, BaiA.xu, BaiA.yu)) / BaiA.G;
// System.out.println(S);
pw.println("Case #" + test + ":");
return pw;
}


public static double func_ed9efc7c18ff486fa2eda0f91dcc13e9(int test, PrintWriter pw) { 
 double S = -(BaiA.calc(BaiA.W, BaiA.L, BaiA.xl, BaiA.yl) - BaiA.calc(BaiA.W, BaiA.U, BaiA.xu, BaiA.yu)) / BaiA.G;
// System.out.println(S);
pw.println("Case #" + test + ":");
return S;
}


*********************************

#### Score: 4.91670


#### Java Tokens: high, low, %.8f, mid, baia, bai, calc, printf 

public static double func_a1b144ccddd24cefa220ae8067a63093(int i, double S, double low, double high, PrintWriter pw) { 
 for (int kk = 0; kk < 77; ++kk) {
    double mid = (low + high) / 2;
    double SS = (BaiA.calc(mid, BaiA.U, BaiA.xu, BaiA.yu) - BaiA.calc(mid, BaiA.L, BaiA.xl, BaiA.yl));
    if (SS < S * (i + 1))
        low = mid;
    else
        high = mid;
}
pw.printf("%.8f\n", low);
return high;
}


public static double func_3f23ce5066ae41a8b535ab9a8bf4f2d0(int i, double S, double low, double high, PrintWriter pw) { 
 for (int kk = 0; kk < 77; ++kk) {
    double mid = (low + high) / 2;
    double SS = (BaiA.calc(mid, BaiA.U, BaiA.xu, BaiA.yu) - BaiA.calc(mid, BaiA.L, BaiA.xl, BaiA.yl));
    if (SS < S * (i + 1))
        low = mid;
    else
        high = mid;
}
pw.printf("%.8f\n", low);
return low;
}


public static PrintWriter func_6fe5d522c5384757a9e0173d4bb17eda(int i, double S, double low, double high, PrintWriter pw) { 
 for (int kk = 0; kk < 77; ++kk) {
    double mid = (low + high) / 2;
    double SS = (BaiA.calc(mid, BaiA.U, BaiA.xu, BaiA.yu) - BaiA.calc(mid, BaiA.L, BaiA.xl, BaiA.yl));
    if (SS < S * (i + 1))
        low = mid;
    else
        high = mid;
}
pw.printf("%.8f\n", low);
return pw;
}


*********************************

#### Score: 4.91670


#### Java Tokens: next, nextdouble, nextint, double, baia, bai, calc, int 

public static double func_f0c45db26f28454cba8d9a1619366cfe(Scanner sc) { 
 BaiA.L = sc.nextInt();
BaiA.U = sc.nextInt();
BaiA.G = sc.nextInt();
BaiA.xl = new double[BaiA.L];
BaiA.yl = new double[BaiA.L];
BaiA.xu = new double[BaiA.U];
BaiA.yu = new double[BaiA.U];
for (int i = 0; i < BaiA.L; ++i) {
    BaiA.xl[i] = sc.nextDouble();
    BaiA.yl[i] = sc.nextDouble();
}
for (int i = 0; i < BaiA.U; ++i) {
    BaiA.xu[i] = sc.nextDouble();
    BaiA.yu[i] = sc.nextDouble();
}
double S = -(BaiA.calc(BaiA.W, BaiA.L, BaiA.xl, BaiA.yl) - BaiA.calc(BaiA.W, BaiA.U, BaiA.xu, BaiA.yu)) / BaiA.G;
return S;
}


public static double func_3d10afa99e984f328eb966fa1f5e3b5b(Scanner sc) { 
 BaiA.U = sc.nextInt();
BaiA.G = sc.nextInt();
BaiA.xl = new double[BaiA.L];
BaiA.yl = new double[BaiA.L];
BaiA.xu = new double[BaiA.U];
BaiA.yu = new double[BaiA.U];
for (int i = 0; i < BaiA.L; ++i) {
    BaiA.xl[i] = sc.nextDouble();
    BaiA.yl[i] = sc.nextDouble();
}
for (int i = 0; i < BaiA.U; ++i) {
    BaiA.xu[i] = sc.nextDouble();
    BaiA.yu[i] = sc.nextDouble();
}
double S = -(BaiA.calc(BaiA.W, BaiA.L, BaiA.xl, BaiA.yl) - BaiA.calc(BaiA.W, BaiA.U, BaiA.xu, BaiA.yu)) / BaiA.G;
return S;
}


public static double func_7195333da1634206a492af96a79a3cd4(Scanner sc) { 
 BaiA.G = sc.nextInt();
BaiA.xl = new double[BaiA.L];
BaiA.yl = new double[BaiA.L];
BaiA.xu = new double[BaiA.U];
BaiA.yu = new double[BaiA.U];
for (int i = 0; i < BaiA.L; ++i) {
    BaiA.xl[i] = sc.nextDouble();
    BaiA.yl[i] = sc.nextDouble();
}
for (int i = 0; i < BaiA.U; ++i) {
    BaiA.xu[i] = sc.nextDouble();
    BaiA.yu[i] = sc.nextDouble();
}
double S = -(BaiA.calc(BaiA.W, BaiA.L, BaiA.xl, BaiA.yl) - BaiA.calc(BaiA.W, BaiA.U, BaiA.xu, BaiA.yu)) / BaiA.G;
return S;
}


*********************************

#### Score: 4.91670


#### Java Tokens: high, low, %.8f, baia, mid, bai, calc, printf 

public static double func_32a639e9574b4562a7e0cdeafbdc80e7(int i, double S, PrintWriter pw) { 
 double low = 0, high = BaiA.W;
for (int kk = 0; kk < 77; ++kk) {
    double mid = (low + high) / 2;
    double SS = (BaiA.calc(mid, BaiA.U, BaiA.xu, BaiA.yu) - BaiA.calc(mid, BaiA.L, BaiA.xl, BaiA.yl));
    if (SS < S * (i + 1))
        low = mid;
    else
        high = mid;
}
pw.printf("%.8f\n", low);
return low;
}


public static double func_fdcbc1361b984149ac229ca80616a3d1(int i, double S, PrintWriter pw) { 
 double low = 0, high = BaiA.W;
for (int kk = 0; kk < 77; ++kk) {
    double mid = (low + high) / 2;
    double SS = (BaiA.calc(mid, BaiA.U, BaiA.xu, BaiA.yu) - BaiA.calc(mid, BaiA.L, BaiA.xl, BaiA.yl));
    if (SS < S * (i + 1))
        low = mid;
    else
        high = mid;
}
pw.printf("%.8f\n", low);
return high;
}


*********************************

#### Score: 4.69346


#### Java Tokens: next, nextdouble, println, test, double, baia, bai, calc, case 

public static double func_70c979eb26124cca817bf2edcce668a4(int test, PrintWriter pw, Scanner sc) { 
 BaiA.yu = new double[BaiA.U];
for (int i = 0; i < BaiA.L; ++i) {
    BaiA.xl[i] = sc.nextDouble();
    BaiA.yl[i] = sc.nextDouble();
}
for (int i = 0; i < BaiA.U; ++i) {
    BaiA.xu[i] = sc.nextDouble();
    BaiA.yu[i] = sc.nextDouble();
}
double S = -(BaiA.calc(BaiA.W, BaiA.L, BaiA.xl, BaiA.yl) - BaiA.calc(BaiA.W, BaiA.U, BaiA.xu, BaiA.yu)) / BaiA.G;
// System.out.println(S);
pw.println("Case #" + test + ":");
return S;
}


public static PrintWriter func_a36147be6c584482959a1dfdb80aedc9(int test, PrintWriter pw, Scanner sc) { 
 BaiA.yl = new double[BaiA.L];
BaiA.xu = new double[BaiA.U];
BaiA.yu = new double[BaiA.U];
for (int i = 0; i < BaiA.L; ++i) {
    BaiA.xl[i] = sc.nextDouble();
    BaiA.yl[i] = sc.nextDouble();
}
for (int i = 0; i < BaiA.U; ++i) {
    BaiA.xu[i] = sc.nextDouble();
    BaiA.yu[i] = sc.nextDouble();
}
double S = -(BaiA.calc(BaiA.W, BaiA.L, BaiA.xl, BaiA.yl) - BaiA.calc(BaiA.W, BaiA.U, BaiA.xu, BaiA.yu)) / BaiA.G;
// System.out.println(S);
pw.println("Case #" + test + ":");
return pw;
}


public static double func_36e039e3f3594be385e27a360be66eaa(int test, PrintWriter pw, Scanner sc) { 
 BaiA.xl = new double[BaiA.L];
BaiA.yl = new double[BaiA.L];
BaiA.xu = new double[BaiA.U];
BaiA.yu = new double[BaiA.U];
for (int i = 0; i < BaiA.L; ++i) {
    BaiA.xl[i] = sc.nextDouble();
    BaiA.yl[i] = sc.nextDouble();
}
for (int i = 0; i < BaiA.U; ++i) {
    BaiA.xu[i] = sc.nextDouble();
    BaiA.yu[i] = sc.nextDouble();
}
double S = -(BaiA.calc(BaiA.W, BaiA.L, BaiA.xl, BaiA.yl) - BaiA.calc(BaiA.W, BaiA.U, BaiA.xu, BaiA.yu)) / BaiA.G;
// System.out.println(S);
pw.println("Case #" + test + ":");
return S;
}


*********************************

#### Score: 4.30763


#### Java Tokens: next, nextdouble, println, nextint, test, double, baia, bai, calc, int, case 

public static PrintWriter func_f62fff2b6f254ee39c4b0b5487ec2977(int test, PrintWriter pw, Scanner sc) { 
 BaiA.W = sc.nextDouble();
BaiA.L = sc.nextInt();
BaiA.U = sc.nextInt();
BaiA.G = sc.nextInt();
BaiA.xl = new double[BaiA.L];
BaiA.yl = new double[BaiA.L];
BaiA.xu = new double[BaiA.U];
BaiA.yu = new double[BaiA.U];
for (int i = 0; i < BaiA.L; ++i) {
    BaiA.xl[i] = sc.nextDouble();
    BaiA.yl[i] = sc.nextDouble();
}
for (int i = 0; i < BaiA.U; ++i) {
    BaiA.xu[i] = sc.nextDouble();
    BaiA.yu[i] = sc.nextDouble();
}
double S = -(BaiA.calc(BaiA.W, BaiA.L, BaiA.xl, BaiA.yl) - BaiA.calc(BaiA.W, BaiA.U, BaiA.xu, BaiA.yu)) / BaiA.G;
// System.out.println(S);
pw.println("Case #" + test + ":");
return pw;
}


public static double func_353f07a48d8e44cba58b820488e3f9f4(int test, PrintWriter pw, Scanner sc) { 
 BaiA.U = sc.nextInt();
BaiA.G = sc.nextInt();
BaiA.xl = new double[BaiA.L];
BaiA.yl = new double[BaiA.L];
BaiA.xu = new double[BaiA.U];
BaiA.yu = new double[BaiA.U];
for (int i = 0; i < BaiA.L; ++i) {
    BaiA.xl[i] = sc.nextDouble();
    BaiA.yl[i] = sc.nextDouble();
}
for (int i = 0; i < BaiA.U; ++i) {
    BaiA.xu[i] = sc.nextDouble();
    BaiA.yu[i] = sc.nextDouble();
}
double S = -(BaiA.calc(BaiA.W, BaiA.L, BaiA.xl, BaiA.yl) - BaiA.calc(BaiA.W, BaiA.U, BaiA.xu, BaiA.yu)) / BaiA.G;
// System.out.println(S);
pw.println("Case #" + test + ":");
return S;
}


public static PrintWriter func_d4305ecac25242d2ad55f9ddf3671ab0(int test, PrintWriter pw, Scanner sc) { 
 BaiA.L = sc.nextInt();
BaiA.U = sc.nextInt();
BaiA.G = sc.nextInt();
BaiA.xl = new double[BaiA.L];
BaiA.yl = new double[BaiA.L];
BaiA.xu = new double[BaiA.U];
BaiA.yu = new double[BaiA.U];
for (int i = 0; i < BaiA.L; ++i) {
    BaiA.xl[i] = sc.nextDouble();
    BaiA.yl[i] = sc.nextDouble();
}
for (int i = 0; i < BaiA.U; ++i) {
    BaiA.xu[i] = sc.nextDouble();
    BaiA.yu[i] = sc.nextDouble();
}
double S = -(BaiA.calc(BaiA.W, BaiA.L, BaiA.xl, BaiA.yl) - BaiA.calc(BaiA.W, BaiA.U, BaiA.xu, BaiA.yu)) / BaiA.G;
// System.out.println(S);
pw.println("Case #" + test + ":");
return pw;
}


*********************************

#### Score: 4.30763


#### Java Tokens: println, high, test, low, %.8f, baia, mid, bai, calc, case, printf 

public static double func_5ff1ab44b3914cfe8bd44c51ae9ba3c0(int test, PrintWriter pw) { 
 double S = -(BaiA.calc(BaiA.W, BaiA.L, BaiA.xl, BaiA.yl) - BaiA.calc(BaiA.W, BaiA.U, BaiA.xu, BaiA.yu)) / BaiA.G;
// System.out.println(S);
pw.println("Case #" + test + ":");
for (int i = 0; i + 1 < BaiA.G; ++i) {
    double low = 0, high = BaiA.W;
    for (int kk = 0; kk < 77; ++kk) {
        double mid = (low + high) / 2;
        double SS = (BaiA.calc(mid, BaiA.U, BaiA.xu, BaiA.yu) - BaiA.calc(mid, BaiA.L, BaiA.xl, BaiA.yl));
        if (SS < S * (i + 1))
            low = mid;
        else
            high = mid;
    }
    pw.printf("%.8f\n", low);
}
return S;
}

