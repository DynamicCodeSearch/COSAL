### Py Tokens: files, map, format, int, lines, msg, close, open, case, y13r5p1, range, solve, lineno, test, infile, codejam, split 

### Py functions

def func_3b61038e55d2446cbff8a8c072f7544c(c, infile, lines):
    f = open('codejam/test_files/Y13R5P1/A.out', 'w')
    lineno = 1
    for i in range(1, c + 1):
        b, n = map(int, lines[lineno].split())
        x = map(int, lines[lineno + 1].split())
        r = solve(b, x[:n])
        lineno += 2
        msg = 'Case #{}: {:.9f}'.format(i, r)
        print msg
        print  >> f, msg
    f.close()
    infile.close()
    return lineno

def func_51f87ead1bc14237af8b9c79a0b0b156(c, infile, lines):
    f = open('codejam/test_files/Y13R5P1/A.out', 'w')
    lineno = 1
    for i in range(1, c + 1):
        b, n = map(int, lines[lineno].split())
        x = map(int, lines[lineno + 1].split())
        r = solve(b, x[:n])
        lineno += 2
        msg = 'Case #{}: {:.9f}'.format(i, r)
        print msg
        print  >> f, msg
    f.close()
    infile.close()
    return lines

*********************************

#### Score: 11.12456


#### Java Tokens: next, println, system, nextint, string, solve, close, int, case 

public static PrintWriter func_5f57a2edef1041caa821806cabf7e9d2(PrintWriter out, Scanner in) { 
 int T = in.nextInt();
for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
out.close();
return out;
}


public static PrintWriter func_635e262b1c0747db8dc8487584a21618(PrintWriter out, Scanner in) { 
 int T = in.nextInt();
for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
out.close();
return out;
}


public static PrintWriter func_8a2c51d4894943cfb610a6c0d7c52954(PrintWriter out, Scanner in) { 
 int T = in.nextInt();
for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
out.close();
return out;
}


*********************************

#### Score: 10.98072


#### Java Tokens: println, system, string, solve, close, case 

public static PrintWriter func_97edbcadaa1e4fce96a75ba7c7ce5f7c(int T, PrintWriter out, Scanner in) { 
 for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
out.close();
return out;
}


public static PrintWriter func_3d5d8d6284bd4a7c9b061b4b7e550c8b(int T, PrintWriter out, Scanner in) { 
 for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
out.close();
return out;
}


public static PrintWriter func_d9b019cc717e4c3b8c9b99f9e5d88aa1(int T, PrintWriter out, Scanner in) { 
 for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
out.close();
return out;
}


*********************************

#### Score: 10.43932


#### Java Tokens: next, nextint, test, perfect, casenum, num, cnt, casecnt, int, println, print, system, flush, solve, processing, close, case 

public static PrintWriter func_f12e35b80f5a45849f90b476496469d3(PrintWriter pw, Scanner sc) { 
 int caseCnt = sc.nextInt();
for (int caseNum = 0; caseNum < caseCnt; caseNum++) {
    System.out.println("Processing test case " + (caseNum + 1));
    pw.print("Case #" + (caseNum + 1) + ":");
    new Perfect().solve(sc, pw);
}
pw.flush();
pw.close();
sc.close();
return pw;
}


public static int func_88d590cfe4e9440abaf20e0993b429d7(PrintWriter pw, Scanner sc) { 
 int caseCnt = sc.nextInt();
for (int caseNum = 0; caseNum < caseCnt; caseNum++) {
    System.out.println("Processing test case " + (caseNum + 1));
    pw.print("Case #" + (caseNum + 1) + ":");
    new Perfect().solve(sc, pw);
}
pw.flush();
pw.close();
sc.close();
return caseCnt;
}


public static PrintWriter func_043e15777c2245f2ace3949d7ead4e4c(PrintWriter pw, Scanner sc) { 
 int caseCnt = sc.nextInt();
for (int caseNum = 0; caseNum < caseCnt; caseNum++) {
    System.out.println("Processing test case " + (caseNum + 1));
    pw.print("Case #" + (caseNum + 1) + ":");
    new Perfect().solve(sc, pw);
}
pw.flush();
pw.close();
return pw;
}


*********************************

#### Score: 10.43932


#### Java Tokens: next, nextint, test, casenum, num, cnt, casecnt, int, cheaters, println, print, system, flush, solve, processing, close, case 

public static PrintWriter func_09d59f7d2de54aa6ad5c03d1dd9a0206(PrintWriter pw, Scanner sc) { 
 int caseCnt = sc.nextInt();
for (int caseNum = 0; caseNum < caseCnt; caseNum++) {
    System.out.println("Processing test case " + (caseNum + 1));
    pw.print("Case #" + (caseNum + 1) + ": ");
    new Cheaters().solve(sc, pw);
}
pw.flush();
pw.close();
return pw;
}


public static int func_c8d4c03dd31f4ebaa9d0dbb08bd7aa83(PrintWriter pw, Scanner sc) { 
 int caseCnt = sc.nextInt();
for (int caseNum = 0; caseNum < caseCnt; caseNum++) {
    System.out.println("Processing test case " + (caseNum + 1));
    pw.print("Case #" + (caseNum + 1) + ": ");
    new Cheaters().solve(sc, pw);
}
pw.flush();
pw.close();
sc.close();
return caseCnt;
}


public static PrintWriter func_8854336f103d4db6836dc952494d5b44(PrintWriter pw, Scanner sc) { 
 int caseCnt = sc.nextInt();
for (int caseNum = 0; caseNum < caseCnt; caseNum++) {
    System.out.println("Processing test case " + (caseNum + 1));
    pw.print("Case #" + (caseNum + 1) + ": ");
    new Cheaters().solve(sc, pw);
}
pw.flush();
pw.close();
sc.close();
return pw;
}


*********************************

#### Score: 10.25938


#### Java Tokens: test, perfect, casenum, num, cnt, casecnt, println, print, system, flush, solve, processing, close, case 

public static PrintWriter func_bb6af0e9f0274125b15545382663f676(int caseCnt, PrintWriter pw, Scanner sc) { 
 for (int caseNum = 0; caseNum < caseCnt; caseNum++) {
    System.out.println("Processing test case " + (caseNum + 1));
    pw.print("Case #" + (caseNum + 1) + ":");
    new Perfect().solve(sc, pw);
}
pw.flush();
pw.close();
sc.close();
return pw;
}


public static PrintWriter func_3ca9859e114842f693d0e117022dc553(int caseCnt, PrintWriter pw, Scanner sc) { 
 for (int caseNum = 0; caseNum < caseCnt; caseNum++) {
    System.out.println("Processing test case " + (caseNum + 1));
    pw.print("Case #" + (caseNum + 1) + ":");
    new Perfect().solve(sc, pw);
}
pw.flush();
pw.close();
return pw;
}


*********************************

#### Score: 10.25938


#### Java Tokens: test, casenum, num, cnt, casecnt, cheaters, println, print, system, flush, solve, processing, close, case 

public static PrintWriter func_363a2951b82d4fa3bbd434a213cf7c0e(int caseCnt, PrintWriter pw, Scanner sc) { 
 for (int caseNum = 0; caseNum < caseCnt; caseNum++) {
    System.out.println("Processing test case " + (caseNum + 1));
    pw.print("Case #" + (caseNum + 1) + ": ");
    new Cheaters().solve(sc, pw);
}
pw.flush();
pw.close();
return pw;
}


public static PrintWriter func_4c43d1155f9c4045b2590cf6db25d547(int caseCnt, PrintWriter pw, Scanner sc) { 
 for (int caseNum = 0; caseNum < caseCnt; caseNum++) {
    System.out.println("Processing test case " + (caseNum + 1));
    pw.print("Case #" + (caseNum + 1) + ": ");
    new Cheaters().solve(sc, pw);
}
pw.flush();
pw.close();
sc.close();
return pw;
}


*********************************

#### Score: 9.89628


#### Java Tokens: next, println, %.11f, problem, nextint, string, solve, format, #%d:, problema, int, case 

public static long func_b30ce8a524b746eba2ae57d5334cb5f2(int cn, PrintWriter out, Scanner in) { 
 int N = in.nextInt();
long p = in.nextInt();
long q = in.nextInt();
long r = in.nextInt();
long s = in.nextInt();
long[] d = new long[N];
for (int i = 0; i < N; i++) {
    d[i] = (p * i + q) % r + s;
}
out.println(String.format("Case #%d: %.11f", cn, ProblemA.solve(d)));
return s;
}


public static long func_6ee463595df041a9839770b878aeab4a(int cn, int N, PrintWriter out, Scanner in) { 
 long p = in.nextInt();
long q = in.nextInt();
long r = in.nextInt();
long s = in.nextInt();
long[] d = new long[N];
for (int i = 0; i < N; i++) {
    d[i] = (p * i + q) % r + s;
}
out.println(String.format("Case #%d: %.11f", cn, ProblemA.solve(d)));
return q;
}


public static long[] func_c9c262c6aec9494c9eb3d131f5d46778(int cn, int N, PrintWriter out, Scanner in) { 
 long p = in.nextInt();
long q = in.nextInt();
long r = in.nextInt();
long s = in.nextInt();
long[] d = new long[N];
for (int i = 0; i < N; i++) {
    d[i] = (p * i + q) % r + s;
}
out.println(String.format("Case #%d: %.11f", cn, ProblemA.solve(d)));
return d;
}


*********************************

#### Score: 9.77404


#### Java Tokens: next, nextint, test, casenum, num, cnt, casecnt, int, tour, magical, println, print, system, flush, solve, processing, close, case, magicaltour 

public static PrintWriter func_a4f3ee17ce4f478aac2b807625172bb9(PrintWriter pw, Scanner sc) { 
 int caseCnt = sc.nextInt();
for (int caseNum = 0; caseNum < caseCnt; caseNum++) {
    System.out.println("Processing test case " + (caseNum + 1));
    pw.print("Case #" + (caseNum + 1) + ": ");
    new MagicalTour().solve(sc, pw);
}
pw.flush();
pw.close();
sc.close();
return pw;
}


public static int func_7b1257cb01f647a19eb1164aaf250ce7(PrintWriter pw, Scanner sc) { 
 int caseCnt = sc.nextInt();
for (int caseNum = 0; caseNum < caseCnt; caseNum++) {
    System.out.println("Processing test case " + (caseNum + 1));
    pw.print("Case #" + (caseNum + 1) + ": ");
    new MagicalTour().solve(sc, pw);
}
pw.flush();
pw.close();
sc.close();
return caseCnt;
}


public static int func_fa57792ab4664252af9cdca61fa1e0d7(PrintWriter pw, Scanner sc) { 
 int caseCnt = sc.nextInt();
for (int caseNum = 0; caseNum < caseCnt; caseNum++) {
    System.out.println("Processing test case " + (caseNum + 1));
    pw.print("Case #" + (caseNum + 1) + ": ");
    new MagicalTour().solve(sc, pw);
}
pw.flush();
pw.close();
return caseCnt;
}


*********************************

#### Score: 9.53369


#### Java Tokens: test, casenum, num, cnt, casecnt, tour, magical, println, print, system, flush, solve, processing, close, case, magicaltour 

public static PrintWriter func_58cc01d4f2e44b8d8f3f64444bafbb64(int caseCnt, PrintWriter pw, Scanner sc) { 
 for (int caseNum = 0; caseNum < caseCnt; caseNum++) {
    System.out.println("Processing test case " + (caseNum + 1));
    pw.print("Case #" + (caseNum + 1) + ": ");
    new MagicalTour().solve(sc, pw);
}
pw.flush();
pw.close();
sc.close();
return pw;
}


public static PrintWriter func_a529216e08a34418bb17db85bd9796e6(int caseCnt, PrintWriter pw, Scanner sc) { 
 for (int caseNum = 0; caseNum < caseCnt; caseNum++) {
    System.out.println("Processing test case " + (caseNum + 1));
    pw.print("Case #" + (caseNum + 1) + ": ");
    new MagicalTour().solve(sc, pw);
}
pw.flush();
pw.close();
return pw;
}


*********************************

#### Score: 9.50330


#### Java Tokens: next, %.11f, nextint, string, format, #%d:, problema, int, println, problem, flush, solve, case 

public static PrintWriter func_de91750d4b6649988c69d8a6a5fe3306(int T, PrintWriter out, Scanner in) { 
 for (int cn = 1; cn <= T; cn++) {
    int N = in.nextInt();
    long p = in.nextInt();
    long q = in.nextInt();
    long r = in.nextInt();
    long s = in.nextInt();
    long[] d = new long[N];
    for (int i = 0; i < N; i++) {
        d[i] = (p * i + q) % r + s;
    }
    out.println(String.format("Case #%d: %.11f", cn, ProblemA.solve(d)));
}
out.flush();
return out;
}


public static PrintWriter func_ca8773b02362430a9ce577a79990645a(PrintWriter out, Scanner in) { 
 int T = in.nextInt();
for (int cn = 1; cn <= T; cn++) {
    int N = in.nextInt();
    long p = in.nextInt();
    long q = in.nextInt();
    long r = in.nextInt();
    long s = in.nextInt();
    long[] d = new long[N];
    for (int i = 0; i < N; i++) {
        d[i] = (p * i + q) % r + s;
    }
    out.println(String.format("Case #%d: %.11f", cn, ProblemA.solve(d)));
}
out.flush();
return out;
}


public static int func_b42b1079e35b420e8f99e43425421d5b(PrintWriter out, Scanner in) { 
 int T = in.nextInt();
for (int cn = 1; cn <= T; cn++) {
    int N = in.nextInt();
    long p = in.nextInt();
    long q = in.nextInt();
    long r = in.nextInt();
    long s = in.nextInt();
    long[] d = new long[N];
    for (int i = 0; i < N; i++) {
        d[i] = (p * i + q) % r + s;
    }
    out.println(String.format("Case #%d: %.11f", cn, ProblemA.solve(d)));
}
out.flush();
return T;
}

