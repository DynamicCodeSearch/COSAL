### Py Tokens: case, int, alphabet, range, split, close, readline, tcase 

### Py functions

def func_2d2a80b958464af69cf86828e33ff17d(fn, tcase):
    for x in range(tcase):
        ab = int(fn.readline())
        kk = fn.readline()
        zl = [int(k) for k in kk.split()]
        kk = fn.readline()
        zp = [int(k) for k in kk.split()]
        print 'Case #%d: %s' % (x + 1, alphabet(ab, zl, zp))
    fn.close()
    return tcase

*********************************

#### Score: 7.78742


#### Java Tokens: next, println, system, nextint, string, solve, close, int, case 

public static PrintWriter func_5f57a2edef1041caa821806cabf7e9d2(PrintWriter out, Scanner in) { 
 int T = in.nextInt();
for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
out.close();
return out;
}


public static PrintWriter func_635e262b1c0747db8dc8487584a21618(PrintWriter out, Scanner in) { 
 int T = in.nextInt();
for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
out.close();
return out;
}


public static PrintWriter func_8a2c51d4894943cfb610a6c0d7c52954(PrintWriter out, Scanner in) { 
 int T = in.nextInt();
for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
out.close();
return out;
}


*********************************

#### Score: 7.78742


#### Java Tokens: next, print, println, nextint, len, oppa, close, int, case 

public static PrintWriter func_4961a51e396740f1a0a0180470083812(int tN, PrintWriter pw, Scanner sc) { 
 for (int tn = 0; tn < tN; tn++) {
    int n = sc.nextInt();
    int[] p = new int[n];
    int[] len = new int[n];
    for (int i = 0; i < n; i++) {
        p[i] = sc.nextInt();
    }
    for (int i = 0; i < n; i++) {
        len[i] = sc.nextInt();
    }
    boolean[] oppa = new boolean[n];
    pw.print("Case #" + (tn + 1) + ":");
    c: for (int i = 0; i < n; i++) {
        int be = -1;
        for (int j = 0; j < n; j++) {
            if (!oppa[j]) {
                if (be == -1 || len[j] * p[be] > len[be] * p[j]) {
                    be = j;
                }
            }
        }
        oppa[be] = true;
        pw.print(" " + be);
    }
    pw.println();
}
pw.close();
return pw;
}


*********************************

#### Score: 7.43857


#### Java Tokens: next, output, sol, input, print, nextint, run, close, int, case 

public static PrintWriter func_1444e94513c44091ae8d288971a555fa(PrintWriter output, Scanner input) { 
 A sol = new A();
int t = input.nextInt();
for (int i = 0; i < t; i++) {
    output.print("Case #" + (i + 1) + ": ");
    sol.run(input, output);
}
input.close();
output.close();
return output;
}


public static A func_65a4334e0eb845aa9b2a100a0d66ce4f(PrintWriter output, Scanner input) { 
 A sol = new A();
int t = input.nextInt();
for (int i = 0; i < t; i++) {
    output.print("Case #" + (i + 1) + ": ");
    sol.run(input, output);
}
input.close();
output.close();
return sol;
}


public static PrintWriter func_3aeadd57bb984c3f8e79c995adee2257(PrintWriter output, Scanner input) { 
 A sol = new A();
int t = input.nextInt();
for (int i = 0; i < t; i++) {
    output.print("Case #" + (i + 1) + ": ");
    sol.run(input, output);
}
input.close();
return output;
}


*********************************

#### Score: 7.43857


#### Java Tokens: next, output, input, sol, print, nextint, run, close, int, case 

public static PrintWriter func_eb1e26ee4713463880a6568f9c8edd62(A sol, PrintWriter output, Scanner input) { 
 int t = input.nextInt();
for (int i = 0; i < t; i++) {
    output.print("Case #" + (i + 1) + ": ");
    sol.run(input, output);
}
input.close();
return output;
}


public static int func_879c93f6d7ae44919b4e10e27ad3420c(A sol, PrintWriter output, Scanner input) { 
 int t = input.nextInt();
for (int i = 0; i < t; i++) {
    output.print("Case #" + (i + 1) + ": ");
    sol.run(input, output);
}
input.close();
output.close();
return t;
}


public static PrintWriter func_cefe389c428946a5aef40a3e840efe00(A sol, PrintWriter output, Scanner input) { 
 int t = input.nextInt();
for (int i = 0; i < t; i++) {
    output.print("Case #" + (i + 1) + ": ");
    sol.run(input, output);
}
input.close();
output.close();
return output;
}


*********************************

#### Score: 7.12131


#### Java Tokens: next, print, println, nextint, len, nextline, line, oppa, close, int, case 

public static PrintWriter func_57a8e7ccd652408899745ab0f694b422(int tN, PrintWriter pw, Scanner sc) { 
 sc.nextLine();
for (int tn = 0; tn < tN; tn++) {
    int n = sc.nextInt();
    int[] p = new int[n];
    int[] len = new int[n];
    for (int i = 0; i < n; i++) {
        p[i] = sc.nextInt();
    }
    for (int i = 0; i < n; i++) {
        len[i] = sc.nextInt();
    }
    boolean[] oppa = new boolean[n];
    pw.print("Case #" + (tn + 1) + ":");
    c: for (int i = 0; i < n; i++) {
        int be = -1;
        for (int j = 0; j < n; j++) {
            if (!oppa[j]) {
                if (be == -1 || len[j] * p[be] > len[be] * p[j]) {
                    be = j;
                }
            }
        }
        oppa[be] = true;
        pw.print(" " + be);
    }
    pw.println();
}
pw.close();
return pw;
}


public static int func_aa0d2a61f895408d9e19bb9a62c12818(PrintWriter pw, Scanner sc) { 
 int tN = sc.nextInt();
sc.nextLine();
for (int tn = 0; tn < tN; tn++) {
    int n = sc.nextInt();
    int[] p = new int[n];
    int[] len = new int[n];
    for (int i = 0; i < n; i++) {
        p[i] = sc.nextInt();
    }
    for (int i = 0; i < n; i++) {
        len[i] = sc.nextInt();
    }
    boolean[] oppa = new boolean[n];
    pw.print("Case #" + (tn + 1) + ":");
    c: for (int i = 0; i < n; i++) {
        int be = -1;
        for (int j = 0; j < n; j++) {
            if (!oppa[j]) {
                if (be == -1 || len[j] * p[be] > len[be] * p[j]) {
                    be = j;
                }
            }
        }
        oppa[be] = true;
        pw.print(" " + be);
    }
    pw.println();
}
pw.close();
return tN;
}


public static PrintWriter func_071c380574ab4774b4afe8840c36e53e(PrintWriter pw, Scanner sc) { 
 int tN = sc.nextInt();
sc.nextLine();
for (int tn = 0; tn < tN; tn++) {
    int n = sc.nextInt();
    int[] p = new int[n];
    int[] len = new int[n];
    for (int i = 0; i < n; i++) {
        p[i] = sc.nextInt();
    }
    for (int i = 0; i < n; i++) {
        len[i] = sc.nextInt();
    }
    boolean[] oppa = new boolean[n];
    pw.print("Case #" + (tn + 1) + ":");
    c: for (int i = 0; i < n; i++) {
        int be = -1;
        for (int j = 0; j < n; j++) {
            if (!oppa[j]) {
                if (be == -1 || len[j] * p[be] > len[be] * p[j]) {
                    be = j;
                }
            }
        }
        oppa[be] = true;
        pw.print(" " + be);
    }
    pw.println();
}
pw.close();
return pw;
}


*********************************

#### Score: 7.05735


#### Java Tokens: println, system, string, solve, close, case 

public static PrintWriter func_97edbcadaa1e4fce96a75ba7c7ce5f7c(int T, PrintWriter out, Scanner in) { 
 for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
out.close();
return out;
}


public static PrintWriter func_3d5d8d6284bd4a7c9b061b4b7e550c8b(int T, PrintWriter out, Scanner in) { 
 for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
out.close();
return out;
}


public static PrintWriter func_d9b019cc717e4c3b8c9b99f9e5d88aa1(int T, PrintWriter out, Scanner in) { 
 for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
out.close();
return out;
}


*********************************

#### Score: 6.69099


#### Java Tokens: output, sol, input, print, run, close, case 

public static A func_824d0ee0873c406db6d4a91abeeb84cf(int t, A sol, PrintWriter output, Scanner input) { 
 for (int i = 0; i < t; i++) {
    output.print("Case #" + (i + 1) + ": ");
    sol.run(input, output);
}
input.close();
return sol;
}


public static A func_255ac3bfd7514c3e999c0421d463e0ad(int t, A sol, PrintWriter output, Scanner input) { 
 for (int i = 0; i < t; i++) {
    output.print("Case #" + (i + 1) + ": ");
    sol.run(input, output);
}
input.close();
output.close();
return sol;
}


public static PrintWriter func_4ba97d86cfb141d8908d3783bd5f689b(int t, A sol, PrintWriter output, Scanner input) { 
 for (int i = 0; i < t; i++) {
    output.print("Case #" + (i + 1) + ": ");
    sol.run(input, output);
}
input.close();
return output;
}


*********************************

#### Score: 5.69237


#### Java Tokens: next, nextint, test, perfect, casenum, num, cnt, casecnt, int, println, print, system, flush, solve, processing, close, case 

public static PrintWriter func_f12e35b80f5a45849f90b476496469d3(PrintWriter pw, Scanner sc) { 
 int caseCnt = sc.nextInt();
for (int caseNum = 0; caseNum < caseCnt; caseNum++) {
    System.out.println("Processing test case " + (caseNum + 1));
    pw.print("Case #" + (caseNum + 1) + ":");
    new Perfect().solve(sc, pw);
}
pw.flush();
pw.close();
sc.close();
return pw;
}


public static int func_88d590cfe4e9440abaf20e0993b429d7(PrintWriter pw, Scanner sc) { 
 int caseCnt = sc.nextInt();
for (int caseNum = 0; caseNum < caseCnt; caseNum++) {
    System.out.println("Processing test case " + (caseNum + 1));
    pw.print("Case #" + (caseNum + 1) + ":");
    new Perfect().solve(sc, pw);
}
pw.flush();
pw.close();
sc.close();
return caseCnt;
}


public static PrintWriter func_043e15777c2245f2ace3949d7ead4e4c(PrintWriter pw, Scanner sc) { 
 int caseCnt = sc.nextInt();
for (int caseNum = 0; caseNum < caseCnt; caseNum++) {
    System.out.println("Processing test case " + (caseNum + 1));
    pw.print("Case #" + (caseNum + 1) + ":");
    new Perfect().solve(sc, pw);
}
pw.flush();
pw.close();
return pw;
}


*********************************

#### Score: 5.69237


#### Java Tokens: next, nextint, test, casenum, num, cnt, casecnt, int, cheaters, println, print, system, flush, solve, processing, close, case 

public static PrintWriter func_09d59f7d2de54aa6ad5c03d1dd9a0206(PrintWriter pw, Scanner sc) { 
 int caseCnt = sc.nextInt();
for (int caseNum = 0; caseNum < caseCnt; caseNum++) {
    System.out.println("Processing test case " + (caseNum + 1));
    pw.print("Case #" + (caseNum + 1) + ": ");
    new Cheaters().solve(sc, pw);
}
pw.flush();
pw.close();
return pw;
}


public static int func_c8d4c03dd31f4ebaa9d0dbb08bd7aa83(PrintWriter pw, Scanner sc) { 
 int caseCnt = sc.nextInt();
for (int caseNum = 0; caseNum < caseCnt; caseNum++) {
    System.out.println("Processing test case " + (caseNum + 1));
    pw.print("Case #" + (caseNum + 1) + ": ");
    new Cheaters().solve(sc, pw);
}
pw.flush();
pw.close();
sc.close();
return caseCnt;
}


public static PrintWriter func_8854336f103d4db6836dc952494d5b44(PrintWriter pw, Scanner sc) { 
 int caseCnt = sc.nextInt();
for (int caseNum = 0; caseNum < caseCnt; caseNum++) {
    System.out.println("Processing test case " + (caseNum + 1));
    pw.print("Case #" + (caseNum + 1) + ": ");
    new Cheaters().solve(sc, pw);
}
pw.flush();
pw.close();
sc.close();
return pw;
}


*********************************

#### Score: 5.51154


#### Java Tokens: next, nextdouble, test, ntest, nextint, double, %.8f, mid, bai, int, printf, println, high, low, baia, calc, close, case 

public static PrintWriter func_60a5bff363924d19baa64e53bac23bdf(int ntest, PrintWriter pw, Scanner sc) { 
 for (int test = 1; test <= ntest; ++test) {
    BaiA.W = sc.nextDouble();
    BaiA.L = sc.nextInt();
    BaiA.U = sc.nextInt();
    BaiA.G = sc.nextInt();
    BaiA.xl = new double[BaiA.L];
    BaiA.yl = new double[BaiA.L];
    BaiA.xu = new double[BaiA.U];
    BaiA.yu = new double[BaiA.U];
    for (int i = 0; i < BaiA.L; ++i) {
        BaiA.xl[i] = sc.nextDouble();
        BaiA.yl[i] = sc.nextDouble();
    }
    for (int i = 0; i < BaiA.U; ++i) {
        BaiA.xu[i] = sc.nextDouble();
        BaiA.yu[i] = sc.nextDouble();
    }
    double S = -(BaiA.calc(BaiA.W, BaiA.L, BaiA.xl, BaiA.yl) - BaiA.calc(BaiA.W, BaiA.U, BaiA.xu, BaiA.yu)) / BaiA.G;
    // System.out.println(S);
    pw.println("Case #" + test + ":");
    for (int i = 0; i + 1 < BaiA.G; ++i) {
        double low = 0, high = BaiA.W;
        for (int kk = 0; kk < 77; ++kk) {
            double mid = (low + high) / 2;
            double SS = (BaiA.calc(mid, BaiA.U, BaiA.xu, BaiA.yu) - BaiA.calc(mid, BaiA.L, BaiA.xl, BaiA.yl));
            if (SS < S * (i + 1))
                low = mid;
            else
                high = mid;
        }
        pw.printf("%.8f\n", low);
    }
// pw.println();
}
sc.close();
return pw;
}


public static PrintWriter func_add26e7778cf484cb47517487e7873f3(int ntest, PrintWriter pw, Scanner sc) { 
 for (int test = 1; test <= ntest; ++test) {
    BaiA.W = sc.nextDouble();
    BaiA.L = sc.nextInt();
    BaiA.U = sc.nextInt();
    BaiA.G = sc.nextInt();
    BaiA.xl = new double[BaiA.L];
    BaiA.yl = new double[BaiA.L];
    BaiA.xu = new double[BaiA.U];
    BaiA.yu = new double[BaiA.U];
    for (int i = 0; i < BaiA.L; ++i) {
        BaiA.xl[i] = sc.nextDouble();
        BaiA.yl[i] = sc.nextDouble();
    }
    for (int i = 0; i < BaiA.U; ++i) {
        BaiA.xu[i] = sc.nextDouble();
        BaiA.yu[i] = sc.nextDouble();
    }
    double S = -(BaiA.calc(BaiA.W, BaiA.L, BaiA.xl, BaiA.yl) - BaiA.calc(BaiA.W, BaiA.U, BaiA.xu, BaiA.yu)) / BaiA.G;
    // System.out.println(S);
    pw.println("Case #" + test + ":");
    for (int i = 0; i + 1 < BaiA.G; ++i) {
        double low = 0, high = BaiA.W;
        for (int kk = 0; kk < 77; ++kk) {
            double mid = (low + high) / 2;
            double SS = (BaiA.calc(mid, BaiA.U, BaiA.xu, BaiA.yu) - BaiA.calc(mid, BaiA.L, BaiA.xl, BaiA.yl));
            if (SS < S * (i + 1))
                low = mid;
            else
                high = mid;
        }
        pw.printf("%.8f\n", low);
    }
// pw.println();
}
sc.close();
pw.close();
return pw;
}

