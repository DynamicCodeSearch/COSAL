### Py Tokens: allv, len, xrange, sum1, sum0 

### Py functions

def func_5027108195a34cfa90dc815d363a5b7c(aa, n, x):
    a = [x for x in aa if x != 0]
    n = len(a)
    sum0 = [0] * (n + 1)
    sum1 = [0] * (n + 1)
    for i in xrange(n):
        sum0[i + 1] = sum0[i] + a[i]
    for i in xrange(n - 1, -1, -1):
        sum1[i] = sum1[i + 1] + a[i]
    allv = sum0[-1]
    return allv

def func_4be42faf8cb8410a9f9bfb213c4e098d(aa, n, x):
    a = [x for x in aa if x != 0]
    n = len(a)
    sum0 = [0] * (n + 1)
    sum1 = [0] * (n + 1)
    for i in xrange(n):
        sum0[i + 1] = sum0[i] + a[i]
    for i in xrange(n - 1, -1, -1):
        sum1[i] = sum1[i + 1] + a[i]
    allv = sum0[-1]
    return sum0

def func_1996139bfbaf47d8989b7634c8a710fc(a, n):
    n = len(a)
    sum0 = [0] * (n + 1)
    sum1 = [0] * (n + 1)
    for i in xrange(n):
        sum0[i + 1] = sum0[i] + a[i]
    for i in xrange(n - 1, -1, -1):
        sum1[i] = sum1[i + 1] + a[i]
    allv = sum0[-1]
    return n

def func_24d4395f0c4a4f29b333bae63216655c(n, p, q, r, s):
    aa = [((x * p + q) % r + s) for x in xrange(n)]
    a = [x for x in aa if x != 0]
    n = len(a)
    sum0 = [0] * (n + 1)
    sum1 = [0] * (n + 1)
    for i in xrange(n):
        sum0[i + 1] = sum0[i] + a[i]
    for i in xrange(n - 1, -1, -1):
        sum1[i] = sum1[i + 1] + a[i]
    allv = sum0[-1]
    return sum1

def func_ec447bf26b954c319cda7ead0208dc13(n, p, q, r, s):
    aa = [((x * p + q) % r + s) for x in xrange(n)]
    a = [x for x in aa if x != 0]
    n = len(a)
    sum0 = [0] * (n + 1)
    sum1 = [0] * (n + 1)
    for i in xrange(n):
        sum0[i + 1] = sum0[i] + a[i]
    for i in xrange(n - 1, -1, -1):
        sum1[i] = sum1[i + 1] + a[i]
    allv = sum0[-1]
    return sum0

*********************************

#### Score: 5.94559


#### Java Tokens: sum1, sum, first 

public static long func_65c52fe2d932485aaf72c5c676f2ee6e(int first, long sum1, long[] a) { 
 sum1 += a[first];
first++;
return sum1;
}


*********************************

#### Score: 5.58007


#### Java Tokens: sum1, mid, sum, first 

public static long func_e441e9b784dd44678a3e0c25dd02863e(int n, long sum1, long mid, long[] a) { 
 int first = 0;
while (first != n && sum1 < mid) {
    sum1 += a[first];
    first++;
}
return sum1;
}


public static boolean func_ee9d420c4a2c42d69fcc1f80287e6af4(int n, long mid, long[] a) { 
 boolean ok = false;
long sum1 = 0;
int first = 0;
while (first != n && sum1 < mid) {
    sum1 += a[first];
    first++;
}
return ok;
}


public static int func_cacc8449c8ad4f958d8892d6c49bc31c(int n, long mid, long[] a) { 
 boolean ok = false;
long sum1 = 0;
int first = 0;
while (first != n && sum1 < mid) {
    sum1 += a[first];
    first++;
}
return first;
}


*********************************

#### Score: 5.58007


#### Java Tokens: sum1, sum2, sum, sum3 

public static long func_fcd3a09c94a74b0fa4f37b010733c4f4(int n, int ry, int rx, long[] a) { 
 long sum1 = 0, sum2 = 0, sum3 = 0;
for (int i = 0; i < n; i++) {
    if (i < rx) {
        sum1 += a[i];
    } else {
        if (i <= ry) {
            sum2 += a[i];
        } else {
            sum3 += a[i];
        }
    }
}
return sum3;
}


public static long func_63860af65fb2442f9911bed8ceeb4ba8(int n, int ry, int rx, long[] a) { 
 long sum1 = 0, sum2 = 0, sum3 = 0;
for (int i = 0; i < n; i++) {
    if (i < rx) {
        sum1 += a[i];
    } else {
        if (i <= ry) {
            sum2 += a[i];
        } else {
            sum3 += a[i];
        }
    }
}
return sum2;
}


public static long func_f13a9b8c22cd4618bb8ee031ea9d8b78(int n, int ry, int rx, long[] a) { 
 long sum1 = 0, sum2 = 0, sum3 = 0;
for (int i = 0; i < n; i++) {
    if (i < rx) {
        sum1 += a[i];
    } else {
        if (i <= ry) {
            sum2 += a[i];
        } else {
            sum3 += a[i];
        }
    }
}
return sum1;
}


*********************************

#### Score: 5.26002


#### Java Tokens: sum1, last, mid, sum, first 

public static boolean func_4f17acf744644da1a8f33c3f9f8a2022(int n, long mid, long[] a) { 
 int last = 0;
boolean ok = false;
long sum1 = 0;
int first = 0;
while (first != n && sum1 < mid) {
    sum1 += a[first];
    first++;
}
return ok;
}


public static int func_c1fce54b329a4dda803c6c6faea55fc5(int n, long mid, long[] a) { 
 int last = 0;
boolean ok = false;
long sum1 = 0;
int first = 0;
while (first != n && sum1 < mid) {
    sum1 += a[first];
    first++;
}
return first;
}


public static long func_0009b51825a54814baa916c27d03a974(int n, long mid, long[] a) { 
 int last = 0;
boolean ok = false;
long sum1 = 0;
int first = 0;
while (first != n && sum1 < mid) {
    sum1 += a[first];
    first++;
}
return sum1;
}


*********************************

#### Score: 5.26002


#### Java Tokens: sum1, mid, sum, first, second 

public static int func_a6376f6ce52847218fe44feab284af08(int n, long mid, long[] a) { 
 long sum1 = 0;
int first = 0;
while (first != n && sum1 < mid) {
    sum1 += a[first];
    first++;
}
int second = n - 1;
return second;
}


public static int func_d7b699dada2e4c96a06421cbe69394a4(int n, long sum1, long mid, long[] a) { 
 int first = 0;
while (first != n && sum1 < mid) {
    sum1 += a[first];
    first++;
}
int second = n - 1;
return first;
}


public static int func_107e6b7467f94541a8b2a251b7b012b9(int n, int first, long sum1, long mid, long[] a) { 
 while (first != n && sum1 < mid) {
    sum1 += a[first];
    first++;
}
int second = n - 1;
return second;
}


*********************************

#### Score: 4.97745


#### Java Tokens: sum1, last, mid, sum, first, second 

public static int func_effbc8ba099d4cb68b5d8223fcbc1fcf(int n, long mid, long[] a) { 
 int last = 0;
boolean ok = false;
long sum1 = 0;
int first = 0;
while (first != n && sum1 < mid) {
    sum1 += a[first];
    first++;
}
int second = n - 1;
return first;
}


public static int func_b0b18a15cb8741d3818a995dc14bcb14(int n, long mid, long[] a) { 
 int last = 0;
boolean ok = false;
long sum1 = 0;
int first = 0;
while (first != n && sum1 < mid) {
    sum1 += a[first];
    first++;
}
int second = n - 1;
return last;
}


public static long func_72f4c22086004ba095364ea9ef291e65(int n, long mid, long[] a) { 
 int last = 0;
boolean ok = false;
long sum1 = 0;
int first = 0;
while (first != n && sum1 < mid) {
    sum1 += a[first];
    first++;
}
int second = n - 1;
return sum1;
}


*********************************

#### Score: 4.97745


#### Java Tokens: sum1, sum2, mid, sum, first, second 

public static long func_9ba01bd2d9444ea3ac7f27b1bd5f7979(int n, long mid, long[] a) { 
 boolean ok = false;
long sum1 = 0;
int first = 0;
while (first != n && sum1 < mid) {
    sum1 += a[first];
    first++;
}
int second = n - 1;
long sum2 = 0;
return sum2;
}


public static long func_3c9a9964744d4b6aab0411432fec3a8f(int n, long sum1, long mid, long[] a) { 
 int first = 0;
while (first != n && sum1 < mid) {
    sum1 += a[first];
    first++;
}
int second = n - 1;
long sum2 = 0;
return sum1;
}


public static long func_7028ba7e3e7c4e6096be7702ea105460(int n, int first, long sum1, long mid, long[] a) { 
 while (first != n && sum1 < mid) {
    sum1 += a[first];
    first++;
}
int second = n - 1;
long sum2 = 0;
return sum2;
}


*********************************

#### Score: 4.97745


#### Java Tokens: sum1, last, left, mid, sum, right 

public static long func_7815661ad02d481bbed1a1b8d1953098(long right, long left) { 
 long mid = (left + right) / 2;
int last = 0;
boolean ok = false;
long sum1 = 0;
return mid;
}


public static int func_ab8a2dc697e14c669449d2b3c50084db(long right, long left) { 
 long mid = (left + right) / 2;
int last = 0;
boolean ok = false;
long sum1 = 0;
return last;
}


public static long func_d7b6f2e807004ab8a841eee881c6d27c(long right, long left) { 
 long mid = (left + right) / 2;
int last = 0;
boolean ok = false;
long sum1 = 0;
return sum1;
}


*********************************

#### Score: 4.72614


#### Java Tokens: sum1, sum2, mid, sum, first, second, second-- 

public static int func_3b6ff2c1f1234d1ab5e81fa0b9605398(int n, int first, long sum1, long mid, long[] a) { 
 while (first != n && sum1 < mid) {
    sum1 += a[first];
    first++;
}
int second = n - 1;
long sum2 = 0;
while (second != -1 && sum2 < mid) {
    sum2 += a[second];
    second--;
}
return second;
}


public static long func_4ac2043fdf28450989d53a86913804c8(int n, long mid, long[] a) { 
 boolean ok = false;
long sum1 = 0;
int first = 0;
while (first != n && sum1 < mid) {
    sum1 += a[first];
    first++;
}
int second = n - 1;
long sum2 = 0;
while (second != -1 && sum2 < mid) {
    sum2 += a[second];
    second--;
}
return sum2;
}


public static int func_f745628457ed47d2872a37879833d544(int n, long mid, long[] a) { 
 boolean ok = false;
long sum1 = 0;
int first = 0;
while (first != n && sum1 < mid) {
    sum1 += a[first];
    first++;
}
int second = n - 1;
long sum2 = 0;
while (second != -1 && sum2 < mid) {
    sum2 += a[second];
    second--;
}
return first;
}


*********************************

#### Score: 4.72614


#### Java Tokens: sum1, sum2, last, mid, sum, first, second 

public static int func_e55407da8f4e4e9f854840e611d2d5b3(int n, long mid, long[] a) { 
 int last = 0;
boolean ok = false;
long sum1 = 0;
int first = 0;
while (first != n && sum1 < mid) {
    sum1 += a[first];
    first++;
}
int second = n - 1;
long sum2 = 0;
return first;
}


public static boolean func_810eaaf26d08494bbdf3fe57ac729d85(int n, long mid, long[] a) { 
 int last = 0;
boolean ok = false;
long sum1 = 0;
int first = 0;
while (first != n && sum1 < mid) {
    sum1 += a[first];
    first++;
}
int second = n - 1;
long sum2 = 0;
return ok;
}


public static int func_87acf6a0d38c4b309491fc40e0a13236(int n, long mid, long[] a) { 
 int last = 0;
boolean ok = false;
long sum1 = 0;
int first = 0;
while (first != n && sum1 < mid) {
    sum1 += a[first];
    first++;
}
int second = n - 1;
long sum2 = 0;
return last;
}

