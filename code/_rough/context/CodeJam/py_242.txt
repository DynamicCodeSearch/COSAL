### Py Tokens: inputs, tuple, int, xrange, strip, list, cin, output, procfunc, split, cnum, range, readline, append 

### Py functions

def func_5e7c400e0fe94cd981dd9dabedc064de(T, cin):
    inputs = []
    for cnum in xrange(T):
        W, L, U, G = [int(i) for i in cin.readline().strip().split()]
        A = [tuple(int(i) for i in cin.readline().strip().split()) for j in
            range(L)]
        B = [tuple(int(i) for i in cin.readline().strip().split()) for j in
            range(U)]
        inputs.append((cnum, B, A, G))
    output = list(procfunc(x) for x in inputs)
    return T

*********************************

#### Score: 8.74620


#### Java Tokens: next, nextint, cin, int 

public static int func_bf278e0bca72421fa632dd165185e852(Scanner cin) { 
 int a = cin.nextInt();
int b = cin.nextInt();
int c = cin.nextInt();
return b;
}


public static int[] func_ecb4233d1f2f41459b3827bac6349244(Scanner cin) { 
 int n = cin.nextInt();
int[] l = new int[n];
return l;
}


public static int func_4d36dc0f6f62459ba2f900ae79211c27(Scanner cin) { 
 int N = cin.nextInt();
int a = cin.nextInt();
int b = cin.nextInt();
int c = cin.nextInt();
return b;
}


*********************************

#### Score: 8.36813


#### Java Tokens: next, output, input, println, nextint, int 

public static int[] func_6ebb5bfef93a4644b2f4587b58b1f239(int u, int[] ux, PrintWriter output, Scanner input) { 
 int[] uy = new int[u];
for (int i = 0; i < u; i++) {
    ux[i] = input.nextInt();
    uy[i] = input.nextInt();
}
output.println();
return uy;
}


public static int[] func_d42a20be27554bc1825e7ebe133cf504(int l, int u, PrintWriter output, Scanner input) { 
 int[] lx = new int[l];
int[] ly = new int[l];
for (int i = 0; i < l; i++) {
    lx[i] = input.nextInt();
    ly[i] = input.nextInt();
}
int[] ux = new int[u];
int[] uy = new int[u];
for (int i = 0; i < u; i++) {
    ux[i] = input.nextInt();
    uy[i] = input.nextInt();
}
output.println();
double cx = 0;
return uy;
}


public static int func_8a7b70037fa64af294be7d9d3f100126(int l, PrintWriter output, Scanner input) { 
 int u = input.nextInt();
int g = input.nextInt();
int[] lx = new int[l];
int[] ly = new int[l];
for (int i = 0; i < l; i++) {
    lx[i] = input.nextInt();
    ly[i] = input.nextInt();
}
int[] ux = new int[u];
int[] uy = new int[u];
for (int i = 0; i < u; i++) {
    ux[i] = input.nextInt();
    uy[i] = input.nextInt();
}
output.println();
return g;
}


*********************************

#### Score: 8.22923


#### Java Tokens: next, nextint, pos, cin, int 

public static int[][] func_d2060e0e20f145f99688ce6c26eb7073(Scanner cin) { 
 int l = cin.nextInt();
int u = cin.nextInt();
int g = cin.nextInt();
int[][] pos = new int[l + u][2];
for (int i = 0; i < l + u; ++i) {
    pos[i][0] = cin.nextInt();
    pos[i][1] = cin.nextInt();
}
return pos;
}


public static int[][] func_d357188c82c3408a90d8ac09cee07a84(Scanner cin) { 
 int l = cin.nextInt();
int u = cin.nextInt();
int g = cin.nextInt();
int[][] pos = new int[l + u][2];
return pos;
}


public static int func_f268c510823d471d8c5ee72cfea4b7f4(Scanner cin) { 
 int w = cin.nextInt();
int l = cin.nextInt();
int u = cin.nextInt();
int g = cin.nextInt();
int[][] pos = new int[l + u][2];
for (int i = 0; i < l + u; ++i) {
    pos[i][0] = cin.nextInt();
    pos[i][1] = cin.nextInt();
}
return g;
}


*********************************

#### Score: 8.22923


#### Java Tokens: next, arr, nextint, cin, int 

public static int func_94f4585444ef47f39678d21f72c2bf07(Scanner cin) { 
 int N = cin.nextInt();
long[] arr = new long[37];
return N;
}


*********************************

#### Score: 8.15463


#### Java Tokens: output, println 

public static PrintWriter func_3db69b26ec13487bbe4bacc1886db123(double _l, double cx, PrintWriter output) { 
 output.println(_l);
cx = _l;
return output;
}


public static double func_5b321009f9c64b068b2fe7dbc5cf310b(double _l, double cx, PrintWriter output) { 
 output.println(_l);
cx = _l;
return cx;
}


public static double func_19b0dc89ee594fc386aa8f953c3a7260(PrintWriter output) { 
 output.println();
double cx = 0;
return cx;
}


*********************************

#### Score: 7.77280


#### Java Tokens: next, nextint, cin, nextlong, long, int 

public static int func_d26131ac36c147f2b80382aa37ea5088(Scanner cin) { 
 long B = cin.nextLong();
int N = cin.nextInt();
return N;
}


public static long func_0bec1afe848248e5b23f55ea82a68db2(Scanner cin) { 
 long B = cin.nextLong();
int N = cin.nextInt();
return B;
}


*********************************

#### Score: 7.36686


#### Java Tokens: next, arr, nextint, cin, int, nextlong, long 

public static int func_7ef2840213d84750b17a9e587c8f1093(Scanner cin) { 
 int N = cin.nextInt();
long[] arr = new long[37];
for (int i = 0; i < N; ++i) {
    arr[i] = cin.nextLong();
}
return N;
}


public static long[] func_a0e6e7e40b384256809ec7b536935816(Scanner cin) { 
 int N = cin.nextInt();
long[] arr = new long[37];
for (int i = 0; i < N; ++i) {
    arr[i] = cin.nextLong();
}
return arr;
}


*********************************

#### Score: 7.36686


#### Java Tokens: next, arr, nextint, cin, nextlong, long, int 

public static long[] func_e0ac70ded4c54b08822eae9e7fc3f59a(Scanner cin) { 
 long B = cin.nextLong();
int N = cin.nextInt();
long[] arr = new long[37];
return arr;
}


public static long func_0c383e7c8ce24a9f97ff706d4184d14e(Scanner cin) { 
 long B = cin.nextLong();
int N = cin.nextInt();
long[] arr = new long[37];
return B;
}


public static int func_859f1ac6d83d41498417b56ffaef9c0d(Scanner cin) { 
 long B = cin.nextLong();
int N = cin.nextInt();
long[] arr = new long[37];
for (int i = 0; i < N; ++i) {
    arr[i] = cin.nextLong();
}
return N;
}


*********************************

#### Score: 7.18267


#### Java Tokens: next, output, input, sol, print, nextint, run, int, case 

public static PrintWriter func_9a3d2547db9044a283b1ab5ccd848735(A sol, PrintWriter output, Scanner input) { 
 int t = input.nextInt();
for (int i = 0; i < t; i++) {
    output.print("Case #" + (i + 1) + ": ");
    sol.run(input, output);
}
return output;
}


public static int func_81e59bb64d754f5ba08f47aa65ebe3c4(A sol, PrintWriter output, Scanner input) { 
 int t = input.nextInt();
for (int i = 0; i < t; i++) {
    output.print("Case #" + (i + 1) + ": ");
    sol.run(input, output);
}
return t;
}


public static A func_70fee53476094c2486b4d6d9bc241876(A sol, PrintWriter output, Scanner input) { 
 int t = input.nextInt();
for (int i = 0; i < t; i++) {
    output.print("Case #" + (i + 1) + ": ");
    sol.run(input, output);
}
return sol;
}


*********************************

#### Score: 7.18267


#### Java Tokens: next, output, sol, input, print, nextint, run, int, case 

public static A func_6cd973998cd4430e965bcfe94394c600(PrintWriter output, Scanner input) { 
 A sol = new A();
int t = input.nextInt();
for (int i = 0; i < t; i++) {
    output.print("Case #" + (i + 1) + ": ");
    sol.run(input, output);
}
return sol;
}


public static PrintWriter func_b8aeae74fe6f44cc86b8d19019327a07(PrintWriter output, Scanner input) { 
 A sol = new A();
int t = input.nextInt();
for (int i = 0; i < t; i++) {
    output.print("Case #" + (i + 1) + ": ");
    sol.run(input, output);
}
return output;
}


public static int func_78efe02b63d14ddda3e4bcaf620a763e(PrintWriter output, Scanner input) { 
 A sol = new A();
int t = input.nextInt();
for (int i = 0; i < t; i++) {
    output.print("Case #" + (i + 1) + ": ");
    sol.run(input, output);
}
return t;
}

