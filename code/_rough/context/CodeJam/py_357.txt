### Py Tokens: sort, map, numcases, int, xrange, float, fout, close, readline, case, reverse, cas, write, split, str, fin 

### Py functions

def func_3db22f821e954e66ad505557a5a3aca4(fin, fout, numcases):
    numcases += 1
    for cas in xrange(1, numcases):
        fout.write('Case #' + str(cas) + ':')
        n = int(fin.readline())
        l = map(float, fin.readline().split())
        p = map(float, fin.readline().split())
        q = [(p[i] / l[i]) for i in xrange(n)]
        r = [(q[i], -i) for i in xrange(n)]
        r.sort()
        r.reverse()
        for i in r:
            fout.write(' ' + str(-i[1]))
        fout.write('\n')
    fin.close()
    fout.close()
    return numcases

def func_19b462aab5f942e4a86cc3a774c593a7(fin, fout, numcases):
    numcases += 1
    for cas in xrange(1, numcases):
        fout.write('Case #' + str(cas) + ':')
        n = int(fin.readline())
        l = map(float, fin.readline().split())
        p = map(float, fin.readline().split())
        q = [(p[i] / l[i]) for i in xrange(n)]
        r = [(q[i], -i) for i in xrange(n)]
        r.sort()
        r.reverse()
        for i in r:
            fout.write(' ' + str(-i[1]))
        fout.write('\n')
    fin.close()
    return numcases

*********************************

#### Score: 9.82786


#### Java Tokens: next, compare, nextint, #%d:, integer, sort, int, printf, comparator, system, cas, arrays, case 

public static int[] func_ea09d5a25a934ac1b747118c896979e1(int cas, int n, Scanner in) { 
 int[] L = new int[n];
final int[] P = new int[n];
Integer[] I = new Integer[n];
for (int i = 0; i < n; i++) L[i] = in.nextInt();
for (int i = 0; i < n; i++) {
    P[i] = in.nextInt();
    I[i] = i;
}
Arrays.sort(I, new Comparator<Integer>() {

    public int compare(Integer A, Integer B) {
        if (P[A] != P[B])
            return P[B] - P[A];
        return A - B;
    }
});
System.out.printf("Case #%d:", cas);
return L;
}


public static int[] func_e63095ca1fdf4d89b68f61e92b926ceb(int cas, int n, Scanner in) { 
 int[] L = new int[n];
final int[] P = new int[n];
Integer[] I = new Integer[n];
for (int i = 0; i < n; i++) L[i] = in.nextInt();
for (int i = 0; i < n; i++) {
    P[i] = in.nextInt();
    I[i] = i;
}
Arrays.sort(I, new Comparator<Integer>() {

    public int compare(Integer A, Integer B) {
        if (P[A] != P[B])
            return P[B] - P[A];
        return A - B;
    }
});
System.out.printf("Case #%d:", cas);
return P;
}


public static int[] func_5126b7888d9b40b4a5d968fd6d90c764(int cas, int n, int[] L, Scanner in) { 
 final int[] P = new int[n];
Integer[] I = new Integer[n];
for (int i = 0; i < n; i++) L[i] = in.nextInt();
for (int i = 0; i < n; i++) {
    P[i] = in.nextInt();
    I[i] = i;
}
Arrays.sort(I, new Comparator<Integer>() {

    public int compare(Integer A, Integer B) {
        if (P[A] != P[B])
            return P[B] - P[A];
        return A - B;
    }
});
System.out.printf("Case #%d:", cas);
return P;
}


*********************************

#### Score: 9.45328


#### Java Tokens: next, compare, nextint, #%d:, integer, sort, int, printf, comparator, print, system, cas, arrays, case 

public static int[] func_95d1669410684fd383a3eeac84d97da2(int cas, Scanner in) { 
 int n = in.nextInt();
int[] L = new int[n];
final int[] P = new int[n];
Integer[] I = new Integer[n];
for (int i = 0; i < n; i++) L[i] = in.nextInt();
for (int i = 0; i < n; i++) {
    P[i] = in.nextInt();
    I[i] = i;
}
Arrays.sort(I, new Comparator<Integer>() {

    public int compare(Integer A, Integer B) {
        if (P[A] != P[B])
            return P[B] - P[A];
        return A - B;
    }
});
System.out.printf("Case #%d:", cas);
for (Integer x : I) System.out.print(" " + x);
return P;
}


public static int[] func_f9964ce1ece4449cb374df44a5d30cff(int cas, int n, int[] L, Scanner in) { 
 final int[] P = new int[n];
Integer[] I = new Integer[n];
for (int i = 0; i < n; i++) L[i] = in.nextInt();
for (int i = 0; i < n; i++) {
    P[i] = in.nextInt();
    I[i] = i;
}
Arrays.sort(I, new Comparator<Integer>() {

    public int compare(Integer A, Integer B) {
        if (P[A] != P[B])
            return P[B] - P[A];
        return A - B;
    }
});
System.out.printf("Case #%d:", cas);
for (Integer x : I) System.out.print(" " + x);
return P;
}


public static Integer[] func_f486f5a21a024a97899346460db31781(int cas, Scanner in) { 
 int n = in.nextInt();
int[] L = new int[n];
final int[] P = new int[n];
Integer[] I = new Integer[n];
for (int i = 0; i < n; i++) L[i] = in.nextInt();
for (int i = 0; i < n; i++) {
    P[i] = in.nextInt();
    I[i] = i;
}
Arrays.sort(I, new Comparator<Integer>() {

    public int compare(Integer A, Integer B) {
        if (P[A] != P[B])
            return P[B] - P[A];
        return A - B;
    }
});
System.out.printf("Case #%d:", cas);
for (Integer x : I) System.out.print(" " + x);
return I;
}


*********************************

#### Score: 9.10744


#### Java Tokens: next, compare, nextint, #%d:, integer, sort, int, printf, comparator, print, println, system, cas, arrays, case 

public static int[] func_3ed98d18060a48ec92be04d1e352f669(int cas, Scanner in) { 
 int n = in.nextInt();
int[] L = new int[n];
final int[] P = new int[n];
Integer[] I = new Integer[n];
for (int i = 0; i < n; i++) L[i] = in.nextInt();
for (int i = 0; i < n; i++) {
    P[i] = in.nextInt();
    I[i] = i;
}
Arrays.sort(I, new Comparator<Integer>() {

    public int compare(Integer A, Integer B) {
        if (P[A] != P[B])
            return P[B] - P[A];
        return A - B;
    }
});
System.out.printf("Case #%d:", cas);
for (Integer x : I) System.out.print(" " + x);
System.out.println();
return P;
}


public static Integer[] func_cce1eb8c187545b4ab149e2cccc4871e(int cas, int n, Scanner in) { 
 int[] L = new int[n];
final int[] P = new int[n];
Integer[] I = new Integer[n];
for (int i = 0; i < n; i++) L[i] = in.nextInt();
for (int i = 0; i < n; i++) {
    P[i] = in.nextInt();
    I[i] = i;
}
Arrays.sort(I, new Comparator<Integer>() {

    public int compare(Integer A, Integer B) {
        if (P[A] != P[B])
            return P[B] - P[A];
        return A - B;
    }
});
System.out.printf("Case #%d:", cas);
for (Integer x : I) System.out.print(" " + x);
System.out.println();
return I;
}


public static int[] func_b84484822d6a441cb1804c1108af29de(int cas, int n, Scanner in) { 
 int[] L = new int[n];
final int[] P = new int[n];
Integer[] I = new Integer[n];
for (int i = 0; i < n; i++) L[i] = in.nextInt();
for (int i = 0; i < n; i++) {
    P[i] = in.nextInt();
    I[i] = i;
}
Arrays.sort(I, new Comparator<Integer>() {

    public int compare(Integer A, Integer B) {
        if (P[A] != P[B])
            return P[B] - P[A];
        return A - B;
    }
});
System.out.printf("Case #%d:", cas);
for (Integer x : I) System.out.print(" " + x);
System.out.println();
return P;
}


*********************************

#### Score: 7.78742


#### Java Tokens: next, println, system, nextint, string, solve, close, int, case 

public static PrintWriter func_5f57a2edef1041caa821806cabf7e9d2(PrintWriter out, Scanner in) { 
 int T = in.nextInt();
for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
out.close();
return out;
}


public static PrintWriter func_635e262b1c0747db8dc8487584a21618(PrintWriter out, Scanner in) { 
 int T = in.nextInt();
for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
out.close();
return out;
}


public static PrintWriter func_8a2c51d4894943cfb610a6c0d7c52954(PrintWriter out, Scanner in) { 
 int T = in.nextInt();
for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
out.close();
return out;
}


*********************************

#### Score: 7.78742


#### Java Tokens: next, print, println, nextint, len, oppa, close, int, case 

public static PrintWriter func_4961a51e396740f1a0a0180470083812(int tN, PrintWriter pw, Scanner sc) { 
 for (int tn = 0; tn < tN; tn++) {
    int n = sc.nextInt();
    int[] p = new int[n];
    int[] len = new int[n];
    for (int i = 0; i < n; i++) {
        p[i] = sc.nextInt();
    }
    for (int i = 0; i < n; i++) {
        len[i] = sc.nextInt();
    }
    boolean[] oppa = new boolean[n];
    pw.print("Case #" + (tn + 1) + ":");
    c: for (int i = 0; i < n; i++) {
        int be = -1;
        for (int j = 0; j < n; j++) {
            if (!oppa[j]) {
                if (be == -1 || len[j] * p[be] > len[be] * p[j]) {
                    be = j;
                }
            }
        }
        oppa[be] = true;
        pw.print(" " + be);
    }
    pw.println();
}
pw.close();
return pw;
}


*********************************

#### Score: 7.43857


#### Java Tokens: next, output, sol, input, print, nextint, run, close, int, case 

public static PrintWriter func_1444e94513c44091ae8d288971a555fa(PrintWriter output, Scanner input) { 
 A sol = new A();
int t = input.nextInt();
for (int i = 0; i < t; i++) {
    output.print("Case #" + (i + 1) + ": ");
    sol.run(input, output);
}
input.close();
output.close();
return output;
}


public static A func_65a4334e0eb845aa9b2a100a0d66ce4f(PrintWriter output, Scanner input) { 
 A sol = new A();
int t = input.nextInt();
for (int i = 0; i < t; i++) {
    output.print("Case #" + (i + 1) + ": ");
    sol.run(input, output);
}
input.close();
output.close();
return sol;
}


public static PrintWriter func_3aeadd57bb984c3f8e79c995adee2257(PrintWriter output, Scanner input) { 
 A sol = new A();
int t = input.nextInt();
for (int i = 0; i < t; i++) {
    output.print("Case #" + (i + 1) + ": ");
    sol.run(input, output);
}
input.close();
return output;
}


*********************************

#### Score: 7.43857


#### Java Tokens: next, output, input, sol, print, nextint, run, close, int, case 

public static PrintWriter func_eb1e26ee4713463880a6568f9c8edd62(A sol, PrintWriter output, Scanner input) { 
 int t = input.nextInt();
for (int i = 0; i < t; i++) {
    output.print("Case #" + (i + 1) + ": ");
    sol.run(input, output);
}
input.close();
return output;
}


public static int func_879c93f6d7ae44919b4e10e27ad3420c(A sol, PrintWriter output, Scanner input) { 
 int t = input.nextInt();
for (int i = 0; i < t; i++) {
    output.print("Case #" + (i + 1) + ": ");
    sol.run(input, output);
}
input.close();
output.close();
return t;
}


public static PrintWriter func_cefe389c428946a5aef40a3e840efe00(A sol, PrintWriter output, Scanner input) { 
 int t = input.nextInt();
for (int i = 0; i < t; i++) {
    output.print("Case #" + (i + 1) + ": ");
    sol.run(input, output);
}
input.close();
output.close();
return output;
}


*********************************

#### Score: 7.12131


#### Java Tokens: next, print, println, nextint, len, nextline, line, oppa, close, int, case 

public static PrintWriter func_57a8e7ccd652408899745ab0f694b422(int tN, PrintWriter pw, Scanner sc) { 
 sc.nextLine();
for (int tn = 0; tn < tN; tn++) {
    int n = sc.nextInt();
    int[] p = new int[n];
    int[] len = new int[n];
    for (int i = 0; i < n; i++) {
        p[i] = sc.nextInt();
    }
    for (int i = 0; i < n; i++) {
        len[i] = sc.nextInt();
    }
    boolean[] oppa = new boolean[n];
    pw.print("Case #" + (tn + 1) + ":");
    c: for (int i = 0; i < n; i++) {
        int be = -1;
        for (int j = 0; j < n; j++) {
            if (!oppa[j]) {
                if (be == -1 || len[j] * p[be] > len[be] * p[j]) {
                    be = j;
                }
            }
        }
        oppa[be] = true;
        pw.print(" " + be);
    }
    pw.println();
}
pw.close();
return pw;
}


public static int func_aa0d2a61f895408d9e19bb9a62c12818(PrintWriter pw, Scanner sc) { 
 int tN = sc.nextInt();
sc.nextLine();
for (int tn = 0; tn < tN; tn++) {
    int n = sc.nextInt();
    int[] p = new int[n];
    int[] len = new int[n];
    for (int i = 0; i < n; i++) {
        p[i] = sc.nextInt();
    }
    for (int i = 0; i < n; i++) {
        len[i] = sc.nextInt();
    }
    boolean[] oppa = new boolean[n];
    pw.print("Case #" + (tn + 1) + ":");
    c: for (int i = 0; i < n; i++) {
        int be = -1;
        for (int j = 0; j < n; j++) {
            if (!oppa[j]) {
                if (be == -1 || len[j] * p[be] > len[be] * p[j]) {
                    be = j;
                }
            }
        }
        oppa[be] = true;
        pw.print(" " + be);
    }
    pw.println();
}
pw.close();
return tN;
}


public static PrintWriter func_071c380574ab4774b4afe8840c36e53e(PrintWriter pw, Scanner sc) { 
 int tN = sc.nextInt();
sc.nextLine();
for (int tn = 0; tn < tN; tn++) {
    int n = sc.nextInt();
    int[] p = new int[n];
    int[] len = new int[n];
    for (int i = 0; i < n; i++) {
        p[i] = sc.nextInt();
    }
    for (int i = 0; i < n; i++) {
        len[i] = sc.nextInt();
    }
    boolean[] oppa = new boolean[n];
    pw.print("Case #" + (tn + 1) + ":");
    c: for (int i = 0; i < n; i++) {
        int be = -1;
        for (int j = 0; j < n; j++) {
            if (!oppa[j]) {
                if (be == -1 || len[j] * p[be] > len[be] * p[j]) {
                    be = j;
                }
            }
        }
        oppa[be] = true;
        pw.print(" " + be);
    }
    pw.println();
}
pw.close();
return pw;
}


*********************************

#### Score: 7.05735


#### Java Tokens: println, system, string, solve, close, case 

public static PrintWriter func_97edbcadaa1e4fce96a75ba7c7ce5f7c(int T, PrintWriter out, Scanner in) { 
 for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
out.close();
return out;
}


public static PrintWriter func_3d5d8d6284bd4a7c9b061b4b7e550c8b(int T, PrintWriter out, Scanner in) { 
 for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
out.close();
return out;
}


public static PrintWriter func_d9b019cc717e4c3b8c9b99f9e5d88aa1(int T, PrintWriter out, Scanner in) { 
 for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
out.close();
return out;
}


*********************************

#### Score: 6.69099


#### Java Tokens: output, sol, input, print, run, close, case 

public static A func_824d0ee0873c406db6d4a91abeeb84cf(int t, A sol, PrintWriter output, Scanner input) { 
 for (int i = 0; i < t; i++) {
    output.print("Case #" + (i + 1) + ": ");
    sol.run(input, output);
}
input.close();
return sol;
}


public static A func_255ac3bfd7514c3e999c0421d463e0ad(int t, A sol, PrintWriter output, Scanner input) { 
 for (int i = 0; i < t; i++) {
    output.print("Case #" + (i + 1) + ": ");
    sol.run(input, output);
}
input.close();
output.close();
return sol;
}


public static PrintWriter func_4ba97d86cfb141d8908d3783bd5f689b(int t, A sol, PrintWriter output, Scanner input) { 
 for (int i = 0; i < t; i++) {
    output.print("Case #" + (i + 1) + ": ");
    sol.run(input, output);
}
input.close();
return output;
}

