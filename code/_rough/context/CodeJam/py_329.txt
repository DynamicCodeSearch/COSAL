### Py Tokens: count, sys, compute, int, xrange, len, parse, case, part, argv, data, infile, result 

### Py functions

def func_77f3a74ff98f4475b81e8bc24aaed2db(T, count, infile):
    part = 0
    if len(sys.argv) == 3:
        part = int(sys.argv[1])
        count = int(sys.argv[2])
    for i in xrange(T):
        data = parse(infile)
        if i * count >= part * T and i * count < (part + 1) * T:
            result = compute(*data)
            print 'Case #%d: %s' % (i + 1, result)
    return part

def func_0eb046bb26a1454a83348376a5f8caa1(T, count, infile):
    part = 0
    if len(sys.argv) == 3:
        part = int(sys.argv[1])
        count = int(sys.argv[2])
    for i in xrange(T):
        data = parse(infile)
        if i * count >= part * T and i * count < (part + 1) * T:
            result = compute(*data)
            print 'Case #%d: %s' % (i + 1, result)
    return count

def func_7314d5b1ab46462791865c62727ad721(T, count, infile, part):
    if len(sys.argv) == 3:
        part = int(sys.argv[1])
        count = int(sys.argv[2])
    for i in xrange(T):
        data = parse(infile)
        if i * count >= part * T and i * count < (part + 1) * T:
            result = compute(*data)
            print 'Case #%d: %s' % (i + 1, result)
    return count

def func_a8b7fabbfe5c4a6789478adaef9cff50(T, count, infile, part):
    if len(sys.argv) == 3:
        part = int(sys.argv[1])
        count = int(sys.argv[2])
    for i in xrange(T):
        data = parse(infile)
        if i * count >= part * T and i * count < (part + 1) * T:
            result = compute(*data)
            print 'Case #%d: %s' % (i + 1, result)
    return part

*********************************

#### Score: 10.45262


#### Java Tokens: data, count, sum 

public static long func_b5dd2b6dd7ee40509f3a548c91c956fb(int i, int[] data, long count, long sum) { 
 count++;
sum = data[i];
return sum;
}


*********************************

#### Score: 9.78818


#### Java Tokens: data, count, length, sum 

public static long func_2201eb934a1b4b86819ca5e791c91d99(int[] data) { 
 long count = 1, sum = 0;
int n = data.length;
return count;
}


public static long func_e34d5ed09d1e48ae8c0833dd849300bf(int[] data) { 
 long count = 1, sum = 0;
int n = data.length;
return sum;
}


public static int func_4c8db2c31e2d447abb268d163c881edf(int[] data) { 
 long count = 1, sum = 0;
int n = data.length;
return n;
}


*********************************

#### Score: 9.78818


#### Java Tokens: data, max, count, sum 

public static boolean func_5e9184c7a9784684a3dc179151b93dca(int n, int[] data, long count, long max, long sum) { 
 for (int i = 0; i < n; i++) {
    if (data[i] > max)
        return false;
    sum += data[i];
    if (sum > max) {
        count++;
        sum = data[i];
        if (count > 3)
            return false;
    }
}
return count <= 3;

}


*********************************

#### Score: 9.36163


#### Java Tokens: result, bet, count 

public static long func_a0f85d9271124754bc4eaf6d0bf0af0b(int count, long bet, long[] a) { 
 long result = 0;
for (int i = 0; i < count; i++) {
    result += (bet - a[i]);
}
return result;
}


public static long func_3750e0686e284a38b90b7179cfafbcb5(int count, long bet, long result, long[] a) { 
 for (int i = 0; i < count; i++) {
    result += (bet - a[i]);
}
return result;
}


*********************************

#### Score: 9.20640


#### Java Tokens: data, max, length, count, sum 

public static boolean func_e7d5d416effe43588e807dc60e0f7865(int[] data, long count, long max, long sum) { 
 int n = data.length;
for (int i = 0; i < n; i++) {
    if (data[i] > max)
        return false;
    sum += data[i];
    if (sum > max) {
        count++;
        sum = data[i];
        if (count > 3)
            return false;
    }
}
return count <= 3;

}


*********************************

#### Score: 9.20640


#### Java Tokens: data, max, count, length, sum 

public static boolean func_631490b67cb6453bb735e964df39abcf(int[] data, long max) { 
 long count = 1, sum = 0;
int n = data.length;
for (int i = 0; i < n; i++) {
    if (data[i] > max)
        return false;
    sum += data[i];
    if (sum > max) {
        count++;
        sum = data[i];
        if (count > 3)
            return false;
    }
}
return count <= 3;

}


*********************************

#### Score: 8.76955


#### Java Tokens: result, bet, count, length 

public static long func_5feb496050944d1e8af76d28fc7f59ca(int count, long bet, long[] a) { 
 long result = 0;
for (int i = 0; i < count; i++) {
    result += (bet - a[i]);
}
for (int i = count; i < a.length; i++) {
    if (a[i] <= bet) {
        result += (bet + 1 - a[i]);
    }
}
return result;
}


public static long func_0138f2926854428dba9c323efc1adc68(int count, long bet, long result, long[] a) { 
 for (int i = 0; i < count; i++) {
    result += (bet - a[i]);
}
for (int i = count; i < a.length; i++) {
    if (a[i] <= bet) {
        result += (bet + 1 - a[i]);
    }
}
return result;
}


*********************************

#### Score: 8.76955


#### Java Tokens: bet, result, count, length 

public static long func_bdb03892897f4948a558f36ec1d18d00(int count, long bet, long result, long[] a) { 
 for (int i = count; i < a.length; i++) {
    if (a[i] <= bet) {
        result += (bet + 1 - a[i]);
    }
}
return result;

}


*********************************

#### Score: 7.95262


#### Java Tokens: next, input, system, nextint, data, #%d:, case, int, printf 

public static int func_b0c44a282eda48d8bc07912f31512392(int t, Scanner input) { 
 System.out.printf("Case #%d: ", t + 1);
int n = input.nextInt();
int p = input.nextInt(), q = input.nextInt(), r = input.nextInt(), s = input.nextInt();
int[] data = new int[n];
return p;
}


public static int[] func_ebe960f5d3dd44d68fca90222c13da56(int t, Scanner input) { 
 System.out.printf("Case #%d: ", t + 1);
int n = input.nextInt();
int p = input.nextInt(), q = input.nextInt(), r = input.nextInt(), s = input.nextInt();
int[] data = new int[n];
for (int i = 0; i < n; i++) {
    data[i] = (int) (((long) i * p + q) % r + s);
}
return data;
}


public static int[] func_bde4e1291eec434fa5f9842a9e227389(int t, Scanner input) { 
 System.out.printf("Case #%d: ", t + 1);
int n = input.nextInt();
int p = input.nextInt(), q = input.nextInt(), r = input.nextInt(), s = input.nextInt();
int[] data = new int[n];
return data;
}


*********************************

#### Score: 7.59593


#### Java Tokens: next, input, system, nextint, data, e13, #%d:, case, int, printf 

public static int func_7fbffe88b971416d95fe17154b0759b2(int t, Scanner input) { 
 System.out.printf("Case #%d: ", t + 1);
int n = input.nextInt();
int p = input.nextInt(), q = input.nextInt(), r = input.nextInt(), s = input.nextInt();
int[] data = new int[n];
for (int i = 0; i < n; i++) {
    data[i] = (int) (((long) i * p + q) % r + s);
}
long lo = 1, hi = (long) 1e13;
return q;
}


public static int func_25dc5f862c434c969621779792f9c77f(int t, Scanner input) { 
 System.out.printf("Case #%d: ", t + 1);
int n = input.nextInt();
int p = input.nextInt(), q = input.nextInt(), r = input.nextInt(), s = input.nextInt();
int[] data = new int[n];
for (int i = 0; i < n; i++) {
    data[i] = (int) (((long) i * p + q) % r + s);
}
long lo = 1, hi = (long) 1e13;
return p;
}


public static int[] func_fe6f1b7f1cd1431cacce54fa780df9f5(int t, Scanner input) { 
 System.out.printf("Case #%d: ", t + 1);
int n = input.nextInt();
int p = input.nextInt(), q = input.nextInt(), r = input.nextInt(), s = input.nextInt();
int[] data = new int[n];
for (int i = 0; i < n; i++) {
    data[i] = (int) (((long) i * p + q) % r + s);
}
long lo = 1, hi = (long) 1e13;
return data;
}

