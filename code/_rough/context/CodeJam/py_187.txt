### Py Tokens: slice, area, sum, areasum, eff 

### Py functions

def func_e94985593f334cfebf7c8d9599081543(Eff, G):
    Area = AreaSum(Eff)
    Slice = Area / G
    return Area

def func_956fed88c3224e298bf36c85c54ee862(Eff, G):
    Area = AreaSum(Eff)
    Slice = Area / G
    return Eff

def func_6303471ee0f041c2997388040ab08ae7(Eff, G):
    Area = AreaSum(Eff)
    Slice = Area / G
    return G

def func_97176704fc2c4c3d852b59698b78194a(Eff, G):
    Area = AreaSum(Eff)
    Slice = Area / G
    return Slice

*********************************

#### Score: 10.30649


#### Java Tokens: area, cur, slice 

public static double func_c9bcaa16533e48eebc8e3f01aeae3e20(int guests, double area) { 
 double slice = area / guests;
double cur = 0;
return slice;
}


public static double func_6bb0960ead374469b19552bffa139805(int guests, double area) { 
 double slice = area / guests;
double cur = 0;
return cur;
}


*********************************

#### Score: 7.71916


#### Java Tokens: area, cur, res, slice, array, double, arraylist, list 

public static double func_bbd914fe4b1f49c188d0067925327362(int guests, double area) { 
 double slice = area / guests;
double cur = 0;
// System.out.println("TEST");
// System.out.println(area);
ArrayList<Double> res = new ArrayList<Double>();
return slice;
}


public static double func_f5f5986770d84d42ab499d3e54c93f8f(int a, int guests, double area) { 
 double slice = area / guests;
double cur = 0;
// System.out.println("TEST");
// System.out.println(area);
ArrayList<Double> res = new ArrayList<Double>();
// System.out.println(slice);
a = 0;
return slice;
}


public static double func_8b0cd3bcacb94b8594956354822ea9f4(int guests, double area) { 
 double slice = area / guests;
double cur = 0;
// System.out.println("TEST");
// System.out.println(area);
ArrayList<Double> res = new ArrayList<Double>();
return cur;
}


*********************************

#### Score: 3.70124


#### Java Tokens: area 

public static double func_bf9da7196f404e56ae8e3c42bc93d311(int n, A.Point[] p) { 
 double area = 0;
for (int i = 0; i + 1 < n; i++) {
    area += p[i].x * (p[i + 1].y) - p[i].y * p[i + 1].x;
}
return area;
}


public static int func_41e81178f7a24586b1645ef2244863e8(int g, int i, double area) { 
 double na = (area * i) / g;
int j = 0;
return j;
}


public static double func_3476fe9f761545da96bf1b68fd8f4db8(int g, int i, double area) { 
 double na = (area * i) / g;
int j = 0;
return na;
}


*********************************

#### Score: 3.45144


#### Java Tokens: area, remain 

public static double func_0700cc6842054f2794d6db5b8cad74bb(int x0, double area, double x) { 
 double remain = area;
x0 = (int) x;
int x1 = x0 + 1;
return remain;
}


public static int func_b78fe80114d14149b079ca0807b9beac(int x0, double area, double x) { 
 double remain = area;
x0 = (int) x;
return x0;
}


public static double func_019975c34f36423cae7bee9f0f7a8253(int x0, double area, double x) { 
 double remain = area;
x0 = (int) x;
return remain;
}


*********************************

#### Score: 3.45144


#### Java Tokens: area, len 

public static double func_0cca408bacb8461d9c71e56a7ce2a31a(int w, double[] len) { 
 double area = 0;
for (int i = 1; i <= w; i++) {
    area += (len[i - 1] + len[i]) / 2;
}
return area;
}


public static double func_b9a757e01d78459e9902918ef38284f9(int w, int g, double[] len) { 
 double area = 0;
for (int i = 1; i <= w; i++) {
    area += (len[i - 1] + len[i]) / 2;
}
area /= g;
return area;
}


public static double func_b99cd0dbdc854271bb5de21037cf33f2(int w, int g, double area, double[] len) { 
 for (int i = 1; i <= w; i++) {
    area += (len[i - 1] + len[i]) / 2;
}
area /= g;
return area;
}


*********************************

#### Score: 3.45144


#### Java Tokens: area, length 

public static double func_67575dd71ba5442c9d76e1e1e3e5e676(int[] x, double area, double w, double[] y) { 
 for (int i = 0; i < x.length - 1; i++) {
    if (x[i + 1] < w) {
        area += (x[i + 1] - x[i]) * (y[i] + y[i + 1]);
    } else {
        area += (w - x[i]) * (y[i] + (y[i] + (y[i + 1] - y[i]) * (w - x[i]) / (x[i + 1] - x[i])));
        break;
    }
}
return area;

}


public static double func_90c916dc4442482f8d0efb8d8fe75001(int[] x, double w, double[] y) { 
 double area = 0;
for (int i = 0; i < x.length - 1; i++) {
    if (x[i + 1] < w) {
        area += (x[i + 1] - x[i]) * (y[i] + y[i + 1]);
    } else {
        area += (w - x[i]) * (y[i] + (y[i] + (y[i + 1] - y[i]) * (w - x[i]) / (x[i + 1] - x[i])));
        break;
    }
}
return area;
}


*********************************

#### Score: 3.45144


#### Java Tokens: area, need 

public static double func_28bb15c8187d4bf08e22c96d377bb6ed(int i, int g, int X, double area) { 
 double need = i * area / g;
double l = 0;
double r = X;
return need;
}


public static double func_f007387059a6498c9df609ab305900fc(int i, int g, int X, double area) { 
 double need = i * area / g;
double l = 0;
double r = X;
return r;
}


public static double func_0d5f93c61c104aa6a5ef8b6b39e940c1(int i, int g, double area) { 
 double need = i * area / g;
double l = 0;
return l;
}


*********************************

#### Score: 3.45144


#### Java Tokens: area, i-- 

public static double func_a174893426d548868b415870bcd2d7ec(int m, double area, A.Point[] q) { 
 for (int i = m - 1; i > 0; i--) {
    area += q[i].x * q[i - 1].y - q[i].y * q[i - 1].x;
}
return area;
}


*********************************

#### Score: 3.36283


#### Java Tokens: sum 

public static long func_fef066e8ba364fb5b2c7d6aac6e90261(int n, int p, int q, int s, int r) { 
 long[] a = new long[n];
long sum = 0;
for (int i = 0; i < n; i++) {
    a[i] = ((long) i * p + q) % r + s;
    sum += a[i];
}
int x = 0, y = 0;
return sum;
}


public static long[] func_ba05bec30e1c43de95db7b3a8fd0ccc3(int n) { 
 int[] t = new int[n];
long[] sum = new long[n + 1];
return sum;
}


public static long func_bf27f0e6c4444873b358bc64d4d8e6ec(int n, int r, int s, int q, long p) { 
 long[] a = new long[n];
long sum = 0;
for (int i = 0; i < n; i++) {
    a[i] = ((i * p + q) % r) + s;
    sum += a[i];
}
return sum;
}


*********************************

#### Score: 3.23712


#### Java Tokens: area, len, remain 

public static double func_1cc02f7351a940d7beee273556182bf6(int x0, double area, double x, double[] len) { 
 double remain = area;
x0 = (int) x;
int x1 = x0 + 1;
double k = 1.0 * (len[x1] - len[x0]);
return remain;
}


public static int func_2d2e5b31507e4e37bebac719fc1af207(int x0, double area, double x, double[] len) { 
 double remain = area;
x0 = (int) x;
int x1 = x0 + 1;
double k = 1.0 * (len[x1] - len[x0]);
double y = k * (x - x0) + len[x0];
return x0;
}


public static int func_49ca744cc2ec4eb2a0c6841d185043f5(int x0, double area, double x, double[] len) { 
 double remain = area;
x0 = (int) x;
int x1 = x0 + 1;
double k = 1.0 * (len[x1] - len[x0]);
return x0;
}

