### Py Tokens: upper, frac, xnext, lnext, unext 

### Py functions

def func_4eadcde78f8442fb9953f2720a122dfa(lnext, ui, unext, upper, xnext):
    xnext = lnext[0]
    frac = 1.0 * (xnext - upper[ui][0]) / (unext[0] - upper[ui][0])
    return unext

def func_9667123c38be42a49d297561ed90ce74(lnext, ui, unext, upper, xnext):
    xnext = lnext[0]
    frac = 1.0 * (xnext - upper[ui][0]) / (unext[0] - upper[ui][0])
    return xnext

def func_ca6e4deacf6b4b1eaaa9ffce2b51a055(lnext, ui, unext, upper, xnext):
    xnext = lnext[0]
    frac = 1.0 * (xnext - upper[ui][0]) / (unext[0] - upper[ui][0])
    return upper

def func_6f09903c31774194b3b4d77e8ad931e8(lnext, ui, unext, upper, xnext):
    xnext = lnext[0]
    frac = 1.0 * (xnext - upper[ui][0]) / (unext[0] - upper[ui][0])
    return ui

def func_2e0440468b0a42aba353893236699334(lnext, ui, unext, upper, xnext):
    xnext = lnext[0]
    frac = 1.0 * (xnext - upper[ui][0]) / (unext[0] - upper[ui][0])
    return frac

*********************************

#### Score: 3.98190


#### Java Tokens: upper 

public static double func_046c774b82134aaf81a66ec87affe4bb(int y0, int x, int x0, int y, double[] upper) { 
 double k = 1.0 * (y - y0) / (x - x0);
for (int j = x0 + 1; j <= x; j++) {
    upper[j] = k * (j - x0) + y0;
}
x0 = x;
y0 = y;
return k;
}


public static int func_96ffce39ec8942c289abe3c880afc515(int y0, int x, int x0, int y, double[] upper) { 
 double k = 1.0 * (y - y0) / (x - x0);
for (int j = x0 + 1; j <= x; j++) {
    upper[j] = k * (j - x0) + y0;
}
x0 = x;
y0 = y;
return y0;
}


public static int func_9789bf626c48468899b74e9b039c3ab7(int y0, int x, int x0, int y, double[] upper) { 
 double k = 1.0 * (y - y0) / (x - x0);
for (int j = x0 + 1; j <= x; j++) {
    upper[j] = k * (j - x0) + y0;
}
x0 = x;
y0 = y;
return x0;
}


*********************************

#### Score: 3.47791


#### Java Tokens: size, upper, lower 

public static int func_2f79491f19b54a30ad516ae05177d605(ArrayList<Point> lower, ArrayList<Point> upper) { 
 int u = upper.size();
int l = lower.size();
return l;
}


public static int func_2ddf71a890e64c73ad89d2f3eda1a899(ArrayList<Point> lower, ArrayList<Point> upper) { 
 int u = upper.size();
int l = lower.size();
return u;
}


public static ArrayList<Point> func_99683052cf9c428f93ad5d0e9a9385a3(ArrayList<Point> lower, ArrayList<Point> upper) { 
 int u = upper.size();
int l = lower.size();
return upper;
}


*********************************

#### Score: 3.27606


#### Java Tokens: next, nextint, upper, int 

public static int func_39e1a9be4764446598f02bc609026128(int y0, int x, int x0, double[] upper, Scanner in) { 
 int y = in.nextInt();
double k = 1.0 * (y - y0) / (x - x0);
for (int j = x0 + 1; j <= x; j++) {
    upper[j] = k * (j - x0) + y0;
}
x0 = x;
return y;
}


public static double[] func_8c9c7d9b4f9b4fffa51f72b93ac2690e(int y0, int w, int x0, int u, Scanner in) { 
 double[] upper = new double[w + 1];
x0 = in.nextInt();
y0 = in.nextInt();
upper[x0] = y0;
for (int i = 1; i < u; i++) {
    int x = in.nextInt();
    int y = in.nextInt();
    double k = 1.0 * (y - y0) / (x - x0);
    for (int j = x0 + 1; j <= x; j++) {
        upper[j] = k * (j - x0) + y0;
    }
    x0 = x;
    y0 = y;
}
return upper;
}


public static double func_29681fe80fda48dfb884ce18d7d3cb9a(int y0, int x, int x0, double[] upper, Scanner in) { 
 int y = in.nextInt();
double k = 1.0 * (y - y0) / (x - x0);
for (int j = x0 + 1; j <= x; j++) {
    upper[j] = k * (j - x0) + y0;
}
return k;
}


*********************************

#### Score: 3.27606


#### Java Tokens: area, len, low, upper 

public static double func_b5fde597de7944ecba1ad3edaf9525b5(int w, double[] len, double[] upper, double[] low) { 
 for (int i = 0; i <= w; i++) {
    len[i] = upper[i] - low[i];
}
double area = 0;
return area;
}


public static double func_cd3e869e391a46a8b0bc42288a030043(int w, int g, double[] len, double[] upper, double[] low) { 
 for (int i = 0; i <= w; i++) {
    len[i] = upper[i] - low[i];
}
double area = 0;
for (int i = 1; i <= w; i++) {
    area += (len[i - 1] + len[i]) / 2;
}
area /= g;
return area;
}


public static double func_19bd7e074d0f4f9e90b2ec34ca11e5d0(int w, double[] len, double[] upper, double[] low) { 
 for (int i = 0; i <= w; i++) {
    len[i] = upper[i] - low[i];
}
double area = 0;
for (int i = 1; i <= w; i++) {
    area += (len[i - 1] + len[i]) / 2;
}
return area;
}


*********************************

#### Score: 3.27606


#### Java Tokens: cur, curl, size, upper 

public static int func_cf74871266bd499bb7dfd0450505ebe6(ArrayList<Point> upper) { 
 int curL = 1;
int u = upper.size();
return u;
}


public static int func_05b1a01ea6094f77bc3a03f6d87f3d54(ArrayList<Point> upper) { 
 int curL = 1;
int u = upper.size();
return curL;
}


*********************************

#### Score: 3.09931


#### Java Tokens: size, last, upper, lower, lastx 

public static double func_052c8eccdefb487eaf36cb72797024c2(ArrayList<Point> lower, ArrayList<Point> upper) { 
 int u = upper.size();
int l = lower.size();
double lastX = 0;
return lastX;
}


public static ArrayList<Point> func_841846f506c64d949c3eead004f6ca88(ArrayList<Point> lower, ArrayList<Point> upper) { 
 int u = upper.size();
int l = lower.size();
double lastX = 0;
return lower;
}


public static int func_31fb1b921e4b400993fcc498fe66b711(ArrayList<Point> lower, ArrayList<Point> upper) { 
 int u = upper.size();
int l = lower.size();
double lastX = 0;
return u;
}


*********************************

#### Score: 3.09931


#### Java Tokens: next, nextint, low, upper, int 

public static int func_f4307ef1eeb842d194887e902e93da5b(int w, int x0, int l, double[] low, Scanner in) { 
 int y0 = in.nextInt();
low[x0] = y0;
for (int i = 1; i < l; i++) {
    int x = in.nextInt();
    int y = in.nextInt();
    double k = 1.0 * (y - y0) / (x - x0);
    for (int j = x0 + 1; j <= x; j++) {
        low[j] = k * (j - x0) + y0;
    }
    x0 = x;
    y0 = y;
}
double[] upper = new double[w + 1];
x0 = in.nextInt();
y0 = in.nextInt();
return y0;
}


public static int func_c7fec1eab031489199ff06c2078f3d29(int w, int x0, int l, double[] low, Scanner in) { 
 int y0 = in.nextInt();
low[x0] = y0;
for (int i = 1; i < l; i++) {
    int x = in.nextInt();
    int y = in.nextInt();
    double k = 1.0 * (y - y0) / (x - x0);
    for (int j = x0 + 1; j <= x; j++) {
        low[j] = k * (j - x0) + y0;
    }
    x0 = x;
    y0 = y;
}
double[] upper = new double[w + 1];
return y0;
}


public static double[] func_b550f7afd14540a48d389c07448376ab(int w, int l, Scanner in) { 
 double[] low = new double[w + 1];
int x0 = in.nextInt();
int y0 = in.nextInt();
low[x0] = y0;
for (int i = 1; i < l; i++) {
    int x = in.nextInt();
    int y = in.nextInt();
    double k = 1.0 * (y - y0) / (x - x0);
    for (int j = x0 + 1; j <= x; j++) {
        low[j] = k * (j - x0) + y0;
    }
    x0 = x;
    y0 = y;
}
double[] upper = new double[w + 1];
x0 = in.nextInt();
y0 = in.nextInt();
upper[x0] = y0;
return low;
}


*********************************

#### Score: 3.09931


#### Java Tokens: cur, curl, size, upper, lower 

public static int func_54f5d6c14dba4b419a3963f02647dd3f(ArrayList<Point> lower, ArrayList<Point> upper) { 
 int curL = 1;
int u = upper.size();
int l = lower.size();
return curL;
}


public static ArrayList<Point> func_f442a76ee1cb450aba4ffc8dae930992(ArrayList<Point> lower, ArrayList<Point> upper) { 
 int curL = 1;
int u = upper.size();
int l = lower.size();
return lower;
}


public static int func_b12c995c5bfd4652bc4eb29652457345(ArrayList<Point> lower, ArrayList<Point> upper) { 
 int curL = 1;
int u = upper.size();
int l = lower.size();
return l;
}


*********************************

#### Score: 3.09931


#### Java Tokens: next, nextint, upper, point, int 

public static Point[] func_c1b8639df3fc4fbd95bbc3856a4bf90f(int u, Scanner in) { 
 Point[] upper = new Point[u];
for (int i = 0; i < u; ++i) {
    upper[i] = new Point(in.nextInt(), in.nextInt());
}
return upper;
}


*********************************

#### Score: 3.09931


#### Java Tokens: cur, curl, size, upper, curu 

public static int func_2b49232e99234091a69a35433a230daa(ArrayList<Point> upper) { 
 int curU = 1;
int curL = 1;
int u = upper.size();
return curU;
}


public static int func_98d2654aaadd4084810f5c7988ce072d(ArrayList<Point> upper) { 
 int curU = 1;
int curL = 1;
int u = upper.size();
return curL;
}


public static int func_66dbbb6a23024b6bb0093b1b50897f08(ArrayList<Point> upper) { 
 int curU = 1;
int curL = 1;
int u = upper.size();
return u;
}

