### Py Tokens: lower, lowslope, uppi, float, lowi 

### Py functions

def func_2728d78669424caca0b82ef94aa92715(lower, lowi, lowslope, uppi):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowslope

def func_114f852234ae4ce5983fd41ad1e331f5(lower, lowi, lowslope, uppi):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return uppi

def func_03522becac6f408680558964ea130dbe(lower, lowi, lowslope, uppi):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lower

def func_9b9f2f38209a4969ae4e66c01d8458fa(lower):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowslope

def func_87f26092adc34212959dae89ab16f088(lower, lowi, lowslope, uppi):
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    return lowi

*********************************

#### Score: 3.56210


#### Java Tokens: size, upper, lower 

public static int func_2f79491f19b54a30ad516ae05177d605(ArrayList<Point> lower, ArrayList<Point> upper) { 
 int u = upper.size();
int l = lower.size();
return l;
}


public static int func_2ddf71a890e64c73ad89d2f3eda1a899(ArrayList<Point> lower, ArrayList<Point> upper) { 
 int u = upper.size();
int l = lower.size();
return u;
}


public static ArrayList<Point> func_99683052cf9c428f93ad5d0e9a9385a3(ArrayList<Point> lower, ArrayList<Point> upper) { 
 int u = upper.size();
int l = lower.size();
return upper;
}


*********************************

#### Score: 3.35466


#### Java Tokens: size, last, lower, lastx 

public static double func_695ef2ee801f412cb106d11408cd83eb(ArrayList<Point> lower) { 
 int l = lower.size();
double lastX = 0;
return lastX;
}


public static int func_40605b13d89c4e54af0e13039e62bfc9(ArrayList<Point> lower) { 
 int l = lower.size();
double lastX = 0;
return l;
}


*********************************

#### Score: 3.17303


#### Java Tokens: size, last, upper, lower, lastx 

public static double func_052c8eccdefb487eaf36cb72797024c2(ArrayList<Point> lower, ArrayList<Point> upper) { 
 int u = upper.size();
int l = lower.size();
double lastX = 0;
return lastX;
}


public static ArrayList<Point> func_841846f506c64d949c3eead004f6ca88(ArrayList<Point> lower, ArrayList<Point> upper) { 
 int u = upper.size();
int l = lower.size();
double lastX = 0;
return lower;
}


public static int func_31fb1b921e4b400993fcc498fe66b711(ArrayList<Point> lower, ArrayList<Point> upper) { 
 int u = upper.size();
int l = lower.size();
double lastX = 0;
return u;
}


*********************************

#### Score: 3.17303


#### Java Tokens: next, nextint, lower, int, point 

public static Point[] func_5809e1c5811b4b62a3d62bfcc790a0c9(int l, Scanner in) { 
 int // guests
g = in.nextInt();
Point[] lower = new Point[l];
return lower;
}


public static int func_0795cd1647444f7ca9b0b19d3a7a0779(Scanner in) { 
 // lower points
int l = in.nextInt();
// upper points
int u = in.nextInt();
int // guests
g = in.nextInt();
Point[] lower = new Point[l];
return g;
}


public static Point[] func_de037b1fde65410aab9cb994eac45f1d(Scanner in) { 
 // lower points
int l = in.nextInt();
// upper points
int u = in.nextInt();
int // guests
g = in.nextInt();
Point[] lower = new Point[l];
return lower;
}


*********************************

#### Score: 3.17303


#### Java Tokens: cur, curl, size, upper, lower 

public static int func_54f5d6c14dba4b419a3963f02647dd3f(ArrayList<Point> lower, ArrayList<Point> upper) { 
 int curL = 1;
int u = upper.size();
int l = lower.size();
return curL;
}


public static ArrayList<Point> func_f442a76ee1cb450aba4ffc8dae930992(ArrayList<Point> lower, ArrayList<Point> upper) { 
 int curL = 1;
int u = upper.size();
int l = lower.size();
return lower;
}


public static int func_b12c995c5bfd4652bc4eb29652457345(ArrayList<Point> lower, ArrayList<Point> upper) { 
 int curL = 1;
int u = upper.size();
int l = lower.size();
return l;
}


*********************************

#### Score: 3.17303


#### Java Tokens: println, system, lower, prev, prevx 

public static double func_7f833516786f44d59ef914ab48991966(double lower, double prevX) { 
 System.out.println(lower);
prevX = lower;
return prevX;
}


*********************************

#### Score: 3.17303


#### Java Tokens: next, nextint, lower, point, int 

public static Point[] func_a6df092a289c40078dd428e0f319bb0b(int l, Scanner in) { 
 Point[] lower = new Point[l];
for (int i = 0; i < l; ++i) {
    lower[i] = new Point(in.nextInt(), in.nextInt());
}
return lower;
}


*********************************

#### Score: 3.01266


#### Java Tokens: next, nextint, lower, upper, point, int 

public static Point[] func_88f582a302a74754a6172f5351050534(int u, int l, Scanner in) { 
 Point[] lower = new Point[l];
for (int i = 0; i < l; ++i) {
    lower[i] = new Point(in.nextInt(), in.nextInt());
}
Point[] upper = new Point[u];
return lower;
}


public static Point[] func_2acacabb9eab481db2f9422761422a08(int u, int l, Scanner in) { 
 Point[] lower = new Point[l];
for (int i = 0; i < l; ++i) {
    lower[i] = new Point(in.nextInt(), in.nextInt());
}
Point[] upper = new Point[u];
return upper;
}


*********************************

#### Score: 3.01266


#### Java Tokens: next, nextint, lower, upper, int, point 

public static int func_f79f76c8b8394259ba5d3ff02f5e16a0(Scanner in) { 
 // lower points
int l = in.nextInt();
// upper points
int u = in.nextInt();
int // guests
g = in.nextInt();
Point[] lower = new Point[l];
for (int i = 0; i < l; ++i) {
    lower[i] = new Point(in.nextInt(), in.nextInt());
}
Point[] upper = new Point[u];
return g;
}


public static int func_31e6357e45b24d7889fa4cdad859452b(Scanner in) { 
 int // width
w = in.nextInt();
// lower points
int l = in.nextInt();
// upper points
int u = in.nextInt();
int // guests
g = in.nextInt();
Point[] lower = new Point[l];
for (int i = 0; i < l; ++i) {
    lower[i] = new Point(in.nextInt(), in.nextInt());
}
Point[] upper = new Point[u];
for (int i = 0; i < u; ++i) {
    upper[i] = new Point(in.nextInt(), in.nextInt());
}
return w;
}


public static Point[] func_978373b2b2c1406ca5a5011c2683a647(int u, int l, Scanner in) { 
 int // guests
g = in.nextInt();
Point[] lower = new Point[l];
for (int i = 0; i < l; ++i) {
    lower[i] = new Point(in.nextInt(), in.nextInt());
}
Point[] upper = new Point[u];
return lower;
}


*********************************

#### Score: 3.01266


#### Java Tokens: cur, curl, size, upper, lower, curu 

public static int func_d04b7ab6d3cf42c9a9bd18ba031b8622(ArrayList<Point> lower, ArrayList<Point> upper) { 
 int curU = 1;
int curL = 1;
int u = upper.size();
int l = lower.size();
return u;
}


public static ArrayList<Point> func_5746a9d6b88443a49a9e517ec0157c29(ArrayList<Point> lower, ArrayList<Point> upper) { 
 int curU = 1;
int curL = 1;
int u = upper.size();
int l = lower.size();
return upper;
}


public static int func_6dea6053cd8f4214b37f282377f502c1(ArrayList<Point> lower, ArrayList<Point> upper) { 
 int curU = 1;
int curL = 1;
int u = upper.size();
int l = lower.size();
return curL;
}

