### Py Tokens: int, range, set, split, union, readline, ifile 

### Py functions

def func_b5149770913f44fab8554bcdede33c96(L, U, ifile, x):
    aa = [[int(x) for x in ifile.readline().split()] for i in range(L)]
    bb = [[int(x) for x in ifile.readline().split()] for i in range(U)]
    cc = set([x[0] for x in aa]).union(set([x[0] for x in bb]))
    return U

def func_624f66da1603431cbebcffe70334c423(L, U, ifile, x):
    aa = [[int(x) for x in ifile.readline().split()] for i in range(L)]
    bb = [[int(x) for x in ifile.readline().split()] for i in range(U)]
    cc = set([x[0] for x in aa]).union(set([x[0] for x in bb]))
    return L

def func_1316b509ddf34a2eb9202615abacfe05(L, U, ifile, x):
    aa = [[int(x) for x in ifile.readline().split()] for i in range(L)]
    bb = [[int(x) for x in ifile.readline().split()] for i in range(U)]
    cc = set([x[0] for x in aa]).union(set([x[0] for x in bb]))
    return x

def func_0f527dc6e7e24c3d93198a9a86acab3c(L, U, ifile, x):
    aa = [[int(x) for x in ifile.readline().split()] for i in range(L)]
    bb = [[int(x) for x in ifile.readline().split()] for i in range(U)]
    cc = set([x[0] for x in aa]).union(set([x[0] for x in bb]))
    return U

def func_83a9c9727870422db0b21add8dd78b37(U, aa, i, ifile, x):
    bb = [[int(x) for x in ifile.readline().split()] for i in range(U)]
    cc = set([x[0] for x in aa]).union(set([x[0] for x in bb]))
    return U

*********************************

#### Score: 4.96220


#### Java Tokens: set, tree, integer, treeset 

public static int[][] func_9a47156f72654109bd8da04bd2f01d1c(int U, int L) { 
 TreeSet<Integer> xx = new TreeSet<Integer>();
int[][] x = new int[][] { new int[L], new int[U] }, y = new int[][] { new int[L], new int[U] };
return y;
}


public static TreeSet<Integer> func_5d30268f025145b782a51f3d95d66bae(int U, int L) { 
 TreeSet<Integer> xx = new TreeSet<Integer>();
int[][] x = new int[][] { new int[L], new int[U] }, y = new int[][] { new int[L], new int[U] };
return xx;
}


public static int[][] func_e9b2add3236a4a00921bf47e1e4787c4(int U, int L) { 
 TreeSet<Integer> xx = new TreeSet<Integer>();
int[][] x = new int[][] { new int[L], new int[U] }, y = new int[][] { new int[L], new int[U] };
int[] c = new int[] { L, U };
return x;
}


*********************************

#### Score: 4.44365


#### Java Tokens: split, string, trim, line 

public static double[] func_de3a96ea49a441999168791bd2f96e09(int n, String line) { 
 String[] ss = line.trim().split(" ");
double[] l = new double[n];
return l;
}


public static String[] func_b4974e8e9363455792fd54d845a37f4a(int n, String line) { 
 String[] ss = line.trim().split(" ");
double[] l = new double[n];
return ss;
}


*********************************

#### Score: 4.44365


#### Java Tokens: split, trim, \s+, line 

public static String[] func_25b90e8e1098474fac3336d0bce37fc5(String line) { 
 if (line == null)
    return null;
return line.trim().split("\\s+");

}


public static String[] func_1f59c1d4a9344a6b853d00f3689bb53e(String line) { 
 if (line == null)
    return null;
return line.trim().split("\\s+");

}


*********************************

#### Score: 4.43194


#### Java Tokens: set, length, tree, sum, treeset, long 

public static TreeSet<Long> func_82bedb87aaee466db5f8d8ee5fb8bbfd(int r, int p, int s, int q, int n) { 
 long[] a = new long[n];
long sum = 0;
for (int i = 0; i < a.length; i++) {
    a[i] = (1L * i * p + q) % r + s;
    sum += a[i];
}
TreeSet<Long> all = new TreeSet<Long>();
return all;
}


public static long func_b009c656310044d9843b16a552b1b893(int r, int p, int s, int q, int n) { 
 long[] a = new long[n];
long sum = 0;
for (int i = 0; i < a.length; i++) {
    a[i] = (1L * i * p + q) % r + s;
    sum += a[i];
}
TreeSet<Long> all = new TreeSet<Long>();
return sum;
}


public static long func_612a6278d77147d182b6d5a52d810c2e(int r, int p, int s, int q, long[] a) { 
 long sum = 0;
for (int i = 0; i < a.length; i++) {
    a[i] = (1L * i * p + q) % r + s;
    sum += a[i];
}
TreeSet<Long> all = new TreeSet<Long>();
return sum;
}


*********************************

#### Score: 4.43194


#### Java Tokens: add, set, tree, treeset, long, cands 

public static TreeSet<Long> func_6a975c9c282344a58821f40d1ca94fa3(int N, long[] is) { 
 // for(long i:is)B += i;
long K = 0;
TreeSet<Long> cands = new TreeSet<Long>();
for (int i = 0; i < N; i++) for (int d = -1; d <= 1; d++) cands.add(is[i] + d);
return cands;
}


public static TreeSet<Long> func_9dda3932c68c40eca2e86198d4239eef(int N, long[] is) { 
 long A = 0;
// for(long i:is)B += i;
long K = 0;
TreeSet<Long> cands = new TreeSet<Long>();
for (int i = 0; i < N; i++) for (int d = -1; d <= 1; d++) cands.add(is[i] + d);
return cands;
}


public static long func_30dc5bd23f404042bfe3a665a9f440b3(int N, long[] is) { 
 long A = 0;
// for(long i:is)B += i;
long K = 0;
TreeSet<Long> cands = new TreeSet<Long>();
for (int i = 0; i < N; i++) for (int d = -1; d <= 1; d++) cands.add(is[i] + d);
return K;
}


*********************************

#### Score: 4.21081


#### Java Tokens: add, set, length, tree, sum, treeset, long 

public static long func_f4f3e19e5d544b6ba8e5add9b0fa3413(int r, int p, int s, int q, int n) { 
 long[] a = new long[n];
long sum = 0;
for (int i = 0; i < a.length; i++) {
    a[i] = (1L * i * p + q) % r + s;
    sum += a[i];
}
TreeSet<Long> all = new TreeSet<Long>();
all.add(0L);
long x = 0;
return sum;
}


public static TreeSet<Long> func_2b0ce21d61d84ca6aad8fb2b941dd018(int r, int p, int s, int q, int n) { 
 long[] a = new long[n];
long sum = 0;
for (int i = 0; i < a.length; i++) {
    a[i] = (1L * i * p + q) % r + s;
    sum += a[i];
}
TreeSet<Long> all = new TreeSet<Long>();
all.add(0L);
long x = 0;
return all;
}


public static long func_30e8330430ae4e73aac5d89c5584a3f7(int r, int p, int s, int q, int n) { 
 long[] a = new long[n];
long sum = 0;
for (int i = 0; i < a.length; i++) {
    a[i] = (1L * i * p + q) % r + s;
    sum += a[i];
}
TreeSet<Long> all = new TreeSet<Long>();
all.add(0L);
return sum;
}


*********************************

#### Score: 4.21081


#### Java Tokens: add, sortedset, sorted, set, tree, integer, treeset 

public static SortedSet<Integer> func_908a1fb2d6ea4b70bac7de1f0210bf2e(int l, int[] xl) { 
 SortedSet<Integer> xs = new TreeSet<Integer>();
for (int i = 0; i < l; i++) {
    xs.add(xl[i]);
}
return xs;
}


public static SortedSet<Integer> func_33d30156f21a452c9e7e9783fd47a69d(int l, int u, int[] xu, int[] xl) { 
 SortedSet<Integer> xs = new TreeSet<Integer>();
for (int i = 0; i < l; i++) {
    xs.add(xl[i]);
}
for (int i = 0; i < u; i++) {
    xs.add(xu[i]);
}
return xs;
}


*********************************

#### Score: 4.21081


#### Java Tokens: set, tree, arrays, sort, treeset, long, cands 

public static long func_241caca44d1b4623b24cc615f27dd4f6(long[] is) { 
 Arrays.sort(is);
long A = 0;
// for(long i:is)B += i;
long K = 0;
TreeSet<Long> cands = new TreeSet<Long>();
return A;
}


public static long func_12f5ddc3f01441daa12e08739e017bc2(int N, long[] is) { 
 N = 37;
Arrays.sort(is);
long A = 0;
// for(long i:is)B += i;
long K = 0;
TreeSet<Long> cands = new TreeSet<Long>();
return A;
}


public static long func_489bb7fe292942dbb9935e1666275858(long[] is) { 
 Arrays.sort(is);
long A = 0;
// for(long i:is)B += i;
long K = 0;
TreeSet<Long> cands = new TreeSet<Long>();
return K;
}


*********************************

#### Score: 4.01286


#### Java Tokens: add, sortedset, sorted, set, size, tree, integer, treeset 

public static SortedSet<Integer> func_4ce0a44eab0542dfa8546f1c61bacac4(int l, int u, int[] xu, int[] xl) { 
 SortedSet<Integer> xs = new TreeSet<Integer>();
for (int i = 0; i < l; i++) {
    xs.add(xl[i]);
}
for (int i = 0; i < u; i++) {
    xs.add(xu[i]);
}
int[] nx = new int[xs.size()];
return xs;
}


public static int[] func_1fe4188d08b24ee0990c1d1b63842dc2(int l, int u, int[] xu, int[] xl) { 
 SortedSet<Integer> xs = new TreeSet<Integer>();
for (int i = 0; i < l; i++) {
    xs.add(xl[i]);
}
for (int i = 0; i < u; i++) {
    xs.add(xu[i]);
}
int[] nx = new int[xs.size()];
return nx;
}


public static int[] func_900079f612634215823886119e9e27bb(int l, int u, int[] xu, int[] xl) { 
 SortedSet<Integer> xs = new TreeSet<Integer>();
for (int i = 0; i < l; i++) {
    xs.add(xl[i]);
}
for (int i = 0; i < u; i++) {
    xs.add(xu[i]);
}
int[] nx = new int[xs.size()];
{
    int i = 0;
    for (int xx : xs) {
        nx[i++] = xx;
    }
}
return nx;
}


*********************************

#### Score: 4.01286


#### Java Tokens: add, set, tree, arrays, sort, treeset, long, cands 

public static TreeSet<Long> func_bd16b72c5be74ef1a5fc3f44f1f0b0b2(int N, long[] is) { 
 N = 37;
Arrays.sort(is);
long A = 0;
// for(long i:is)B += i;
long K = 0;
TreeSet<Long> cands = new TreeSet<Long>();
for (int i = 0; i < N; i++) for (int d = -1; d <= 1; d++) cands.add(is[i] + d);
return cands;
}


public static TreeSet<Long> func_ebf1d071945442cf945efefc2f8ac4f7(int N, long[] is) { 
 Arrays.sort(is);
long A = 0;
// for(long i:is)B += i;
long K = 0;
TreeSet<Long> cands = new TreeSet<Long>();
for (int i = 0; i < N; i++) for (int d = -1; d <= 1; d++) cands.add(is[i] + d);
return cands;
}


public static long func_63b5fbdf709a43e6aebc838d635874de(int N, long[] is) { 
 Arrays.sort(is);
long A = 0;
// for(long i:is)B += i;
long K = 0;
TreeSet<Long> cands = new TreeSet<Long>();
for (int i = 0; i < N; i++) for (int d = -1; d <= 1; d++) cands.add(is[i] + d);
return A;
}

