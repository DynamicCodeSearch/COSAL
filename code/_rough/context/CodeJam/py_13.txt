### Py Tokens: getnext, get, true, append, next 

### Py functions

def func_2eb040f9f1b04ef3869fc4363e1c4bc9(U, w):
    getNext = True
    U.append((w + 1, 0))
    return U

def func_92c63c67ca6e4a239529187371d574da(L, U, w):
    s0 = 0
    getNext = True
    U.append((w + 1, 0))
    L.append((w + 1, 0))
    return L

def func_d50308d26faa440d8a083f4ac56f64aa(L, U, w):
    getNext = True
    U.append((w + 1, 0))
    L.append((w + 1, 0))
    return U

def func_e39f490c975847048800d4d28101b0ec(L, U, w):
    s0 = 0
    getNext = True
    U.append((w + 1, 0))
    L.append((w + 1, 0))
    return L

def func_f807e79fb2d84892aa2f03b9b7cb83d5(L, U, w):
    getNext = True
    U.append((w + 1, 0))
    L.append((w + 1, 0))
    return U

*********************************

#### Score: 4.93163


#### Java Tokens: get 

public static double func_59516939e70146ebbe0de89955f52380(int i, ArrayList<Double> lx, ArrayList<Double> ly) { 
 double xx = lx.get(i);
double yy = ly.get(i);
return yy;
}


public static double func_b3cea083f0db425abd9c72818feeef0d(int i, ArrayList<Double> lx, ArrayList<Double> ly) { 
 double xx = lx.get(i);
double yy = ly.get(i);
return xx;
}


public static long func_6f2b4b4aee0944568adb7bafd7f51653(long l, long r) { 
 long to = (l + r) / 2;
long get = 0;
return get;
}


*********************************

#### Score: 4.70238


#### Java Tokens: next, min, getmin, ans, get, bets, win, nextlong, long, getwin 

public static double func_aee1e803acad4d579a8080b3634d8cbe(int n, int N, int W, long b, Scanner in) { 
 long[] x = new long[N];
for (int i = 0; i < n; i++) x[i] = in.nextLong();
long[] bets = new long[N];
double ans = 0;
for (int i = 1; i <= b; i++) {
    long min = A.getMin(x);
    for (int j = 0; j < N; j++) {
        if (x[j] == min) {
            x[j]++;
            bets[j]++;
            break;
        }
    }
    double win = A.getWin(x, bets, W) - i;
    /*System.out.println(i + " " + min + " " + win);
				System.out.println(Arrays.toString(x));
				System.out.println(Arrays.toString(bets));
				System.out.println("------------------");*/
    if (win > ans)
        ans = win;
}
return ans;
}


public static long[] func_2060616df3eb46a59a4660c321c315bf(int n, int N, int W, long b, Scanner in) { 
 long[] x = new long[N];
for (int i = 0; i < n; i++) x[i] = in.nextLong();
long[] bets = new long[N];
double ans = 0;
for (int i = 1; i <= b; i++) {
    long min = A.getMin(x);
    for (int j = 0; j < N; j++) {
        if (x[j] == min) {
            x[j]++;
            bets[j]++;
            break;
        }
    }
    double win = A.getWin(x, bets, W) - i;
    /*System.out.println(i + " " + min + " " + win);
				System.out.println(Arrays.toString(x));
				System.out.println(Arrays.toString(bets));
				System.out.println("------------------");*/
    if (win > ans)
        ans = win;
}
return x;
}


public static long[] func_a7482a0422f542eb9fdf159ec7974e65(int n, int N, int W, long b, Scanner in) { 
 long[] x = new long[N];
for (int i = 0; i < n; i++) x[i] = in.nextLong();
long[] bets = new long[N];
double ans = 0;
for (int i = 1; i <= b; i++) {
    long min = A.getMin(x);
    for (int j = 0; j < N; j++) {
        if (x[j] == min) {
            x[j]++;
            bets[j]++;
            break;
        }
    }
    double win = A.getWin(x, bets, W) - i;
    /*System.out.println(i + " " + min + " " + win);
				System.out.println(Arrays.toString(x));
				System.out.println(Arrays.toString(bets));
				System.out.println("------------------");*/
    if (win > ans)
        ans = win;
}
return bets;
}


*********************************

#### Score: 4.58774


#### Java Tokens: total, get 

public static double func_b911a0283a5144f7901b3afc70e8cf60(int i, double y0, double total, double x0, ArrayList<Double> lx, ArrayList<Double> ly) { 
 double xx = lx.get(i);
double yy = ly.get(i);
total += (x0 + xx) * (y0 - yy);
x0 = xx;
y0 = yy;
return y0;
}


public static double func_dd5b5d7891eb45969c5de2c40c0441b0(int i, double xx, double y0, double total, double x0, ArrayList<Double> ly) { 
 double yy = ly.get(i);
total += (x0 + xx) * (y0 - yy);
x0 = xx;
y0 = yy;
return yy;
}


public static double func_59541982295b4b1184f32309235467d0(int i, double y0, double total, double x0, ArrayList<Double> lx, ArrayList<Double> ly) { 
 double xx = lx.get(i);
double yy = ly.get(i);
total += (x0 + xx) * (y0 - yy);
x0 = xx;
y0 = yy;
return yy;
}


*********************************

#### Score: 4.58774


#### Java Tokens: size, get 

public static double func_3c6d0439a9d349bf8dce68498c13088c(double y0, double x0, ArrayList<Double> lx, ArrayList<Double> ly) { 
 x0 = lx.get(lx.size() - 1);
y0 = ly.get(ly.size() - 1);
return x0;
}


public static double func_32bf37ddf5f6425e8146a67957a52e64(double y0, double x0, ArrayList<Double> lx, ArrayList<Double> ly) { 
 x0 = lx.get(lx.size() - 1);
y0 = ly.get(ly.size() - 1);
return y0;
}


*********************************

#### Score: 4.58774


#### Java Tokens: get, profit 

public static long func_51dcfea0f5e14b8ba5657a8c8ea478d6(long l, long f) { 
 if (l == f - 1)
    return 0;
double profit = 0;
long get = 0;
return get;
}


public static double func_a7ef17aa76ce416b819c7fa411e9cd6d(long l, long f) { 
 if (l == f - 1)
    return 0;
double profit = 0;
long get = 0;
return profit;
}


*********************************

#### Score: 4.33250


#### Java Tokens: next, min, nextint, getmin, ans, get, bets, win, nextlong, long, int, getwin 

public static double func_c4082f492ce94a0697690cb90c50f44d(int N, int W, Scanner in) { 
 long b = in.nextLong();
int n = in.nextInt();
long[] x = new long[N];
for (int i = 0; i < n; i++) x[i] = in.nextLong();
long[] bets = new long[N];
double ans = 0;
for (int i = 1; i <= b; i++) {
    long min = A.getMin(x);
    for (int j = 0; j < N; j++) {
        if (x[j] == min) {
            x[j]++;
            bets[j]++;
            break;
        }
    }
    double win = A.getWin(x, bets, W) - i;
    /*System.out.println(i + " " + min + " " + win);
				System.out.println(Arrays.toString(x));
				System.out.println(Arrays.toString(bets));
				System.out.println("------------------");*/
    if (win > ans)
        ans = win;
}
return ans;
}


public static long[] func_9684f80331874081a48d82b4b8160c11(int N, int W, Scanner in) { 
 long b = in.nextLong();
int n = in.nextInt();
long[] x = new long[N];
for (int i = 0; i < n; i++) x[i] = in.nextLong();
long[] bets = new long[N];
double ans = 0;
for (int i = 1; i <= b; i++) {
    long min = A.getMin(x);
    for (int j = 0; j < N; j++) {
        if (x[j] == min) {
            x[j]++;
            bets[j]++;
            break;
        }
    }
    double win = A.getWin(x, bets, W) - i;
    /*System.out.println(i + " " + min + " " + win);
				System.out.println(Arrays.toString(x));
				System.out.println(Arrays.toString(bets));
				System.out.println("------------------");*/
    if (win > ans)
        ans = win;
}
return x;
}


public static long[] func_65cb2c204cf54367b8c47af89b58a7ce(int N, int W, Scanner in) { 
 long b = in.nextLong();
int n = in.nextInt();
long[] x = new long[N];
for (int i = 0; i < n; i++) x[i] = in.nextLong();
long[] bets = new long[N];
double ans = 0;
for (int i = 1; i <= b; i++) {
    long min = A.getMin(x);
    for (int j = 0; j < N; j++) {
        if (x[j] == min) {
            x[j]++;
            bets[j]++;
            break;
        }
    }
    double win = A.getWin(x, bets, W) - i;
    /*System.out.println(i + " " + min + " " + win);
				System.out.println(Arrays.toString(x));
				System.out.println(Arrays.toString(bets));
				System.out.println("------------------");*/
    if (win > ans)
        ans = win;
}
return bets;
}


*********************************

#### Score: 4.33250


#### Java Tokens: next, min, nextint, getmin, ans, get, bets, win, int, nextlong, long, getwin 

public static double func_a3dfab8fa9394ed587b75467098ad80d(int N, int W, long b, Scanner in) { 
 int n = in.nextInt();
long[] x = new long[N];
for (int i = 0; i < n; i++) x[i] = in.nextLong();
long[] bets = new long[N];
double ans = 0;
for (int i = 1; i <= b; i++) {
    long min = A.getMin(x);
    for (int j = 0; j < N; j++) {
        if (x[j] == min) {
            x[j]++;
            bets[j]++;
            break;
        }
    }
    double win = A.getWin(x, bets, W) - i;
    /*System.out.println(i + " " + min + " " + win);
				System.out.println(Arrays.toString(x));
				System.out.println(Arrays.toString(bets));
				System.out.println("------------------");*/
    if (win > ans)
        ans = win;
}
return ans;
}


public static int func_99642304ca0e4c5185a802a3d052eeb6(int N, int W, long b, Scanner in) { 
 int n = in.nextInt();
long[] x = new long[N];
for (int i = 0; i < n; i++) x[i] = in.nextLong();
long[] bets = new long[N];
double ans = 0;
for (int i = 1; i <= b; i++) {
    long min = A.getMin(x);
    for (int j = 0; j < N; j++) {
        if (x[j] == min) {
            x[j]++;
            bets[j]++;
            break;
        }
    }
    double win = A.getWin(x, bets, W) - i;
    /*System.out.println(i + " " + min + " " + win);
				System.out.println(Arrays.toString(x));
				System.out.println(Arrays.toString(bets));
				System.out.println("------------------");*/
    if (win > ans)
        ans = win;
}
return n;
}


public static long[] func_147b5c811ddb4d598bc68e67a16699e4(int N, int W, long b, Scanner in) { 
 int n = in.nextInt();
long[] x = new long[N];
for (int i = 0; i < n; i++) x[i] = in.nextLong();
long[] bets = new long[N];
double ans = 0;
for (int i = 1; i <= b; i++) {
    long min = A.getMin(x);
    for (int j = 0; j < N; j++) {
        if (x[j] == min) {
            x[j]++;
            bets[j]++;
            break;
        }
    }
    double win = A.getWin(x, bets, W) - i;
    /*System.out.println(i + " " + min + " " + win);
				System.out.println(Arrays.toString(x));
				System.out.println(Arrays.toString(bets));
				System.out.println("------------------");*/
    if (win > ans)
        ans = win;
}
return bets;
}


*********************************

#### Score: 4.33250


#### Java Tokens: next, cur, stop, curx, prev, upper, get, curu, stopx, prevu, point, nextu 

public static double func_24f7e58b300a4f3ca293e954835f3bab(int curU, double stopX, ArrayList<Point> upper) { 
 // //System.out.println("before last part: " + totalArea);
// find area between last used x value and the end x value
double curX = stopX;
Point prevU = upper.get(curU - 1);
Point nextU = upper.get(curU);
return curX;
}


*********************************

#### Score: 4.29271


#### Java Tokens: add, size, get 

public static double func_d3522cbaf76c40a5a697a2315a88a7bc(double y0, double x0, ArrayList<Double> lx, ArrayList<Double> ly) { 
 ly.add(-2000.0);
x0 = lx.get(lx.size() - 1);
y0 = ly.get(ly.size() - 1);
return y0;
}


public static ArrayList<Double> func_d2ef2876f33c4daf9f06cd282fef4451(double X, double x0, ArrayList<Double> lx, ArrayList<Double> ly) { 
 lx.add(X);
ly.add(-2000.0);
x0 = lx.get(lx.size() - 1);
return ly;
}


public static ArrayList<Double> func_b37347f18a5a499d8c2bf16eb19b19d0(double X, double y0, double x0, ArrayList<Double> lx, ArrayList<Double> ly) { 
 lx.add(X);
ly.add(-2000.0);
x0 = lx.get(lx.size() - 1);
y0 = ly.get(ly.size() - 1);
return lx;
}


*********************************

#### Score: 4.29271


#### Java Tokens: total, size, get 

public static double func_b5265e189bb742dd9f2cbd92548659a0(double y0, double total, double x0, ArrayList<Double> lx, ArrayList<Double> ly) { 
 y0 = ly.get(ly.size() - 1);
for (int i = 0; i < lx.size(); ++i) {
    double xx = lx.get(i);
    double yy = ly.get(i);
    total += (x0 + xx) * (y0 - yy);
    x0 = xx;
    y0 = yy;
}
return y0;
}


public static double func_5584c16bc9e941fdb0b73a0eb26d2e83(double y0, double total, double x0, ArrayList<Double> lx, ArrayList<Double> ly) { 
 for (int i = 0; i < lx.size(); ++i) {
    double xx = lx.get(i);
    double yy = ly.get(i);
    total += (x0 + xx) * (y0 - yy);
    x0 = xx;
    y0 = yy;
}
return total;
}


public static double func_5874e4cdb70748988cb3c7b858f4cde0(double y0, double total, double x0, ArrayList<Double> lx, ArrayList<Double> ly) { 
 x0 = lx.get(lx.size() - 1);
y0 = ly.get(ly.size() - 1);
for (int i = 0; i < lx.size(); ++i) {
    double xx = lx.get(i);
    double yy = ly.get(i);
    total += (x0 + xx) * (y0 - yy);
    x0 = xx;
    y0 = yy;
}
return x0;
}

