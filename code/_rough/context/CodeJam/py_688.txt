### Py Tokens: case, map, format, int, range, solve, split, close, readline, infile 

### Py functions

def func_edf03d444def49f3807935828fd55edd(T, infile):
    for t in range(T):
        N, p, q, r, s = map(int, infile.readline().split())
        print 'Case #{}: {}'.format(t + 1, solve(N, p, q, r, s))
    infile.close()
    return T

*********************************

#### Score: 11.12456


#### Java Tokens: next, println, system, nextint, string, solve, close, int, case 

public static PrintWriter func_5f57a2edef1041caa821806cabf7e9d2(PrintWriter out, Scanner in) { 
 int T = in.nextInt();
for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
out.close();
return out;
}


public static PrintWriter func_635e262b1c0747db8dc8487584a21618(PrintWriter out, Scanner in) { 
 int T = in.nextInt();
for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
out.close();
return out;
}


public static PrintWriter func_8a2c51d4894943cfb610a6c0d7c52954(PrintWriter out, Scanner in) { 
 int T = in.nextInt();
for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
out.close();
return out;
}


*********************************

#### Score: 10.98072


#### Java Tokens: println, system, string, solve, close, case 

public static PrintWriter func_97edbcadaa1e4fce96a75ba7c7ce5f7c(int T, PrintWriter out, Scanner in) { 
 for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
out.close();
return out;
}


public static PrintWriter func_3d5d8d6284bd4a7c9b061b4b7e550c8b(int T, PrintWriter out, Scanner in) { 
 for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
out.close();
return out;
}


public static PrintWriter func_d9b019cc717e4c3b8c9b99f9e5d88aa1(int T, PrintWriter out, Scanner in) { 
 for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
out.close();
return out;
}


*********************************

#### Score: 9.89628


#### Java Tokens: next, println, %.11f, problem, nextint, string, solve, format, #%d:, problema, int, case 

public static long func_b30ce8a524b746eba2ae57d5334cb5f2(int cn, PrintWriter out, Scanner in) { 
 int N = in.nextInt();
long p = in.nextInt();
long q = in.nextInt();
long r = in.nextInt();
long s = in.nextInt();
long[] d = new long[N];
for (int i = 0; i < N; i++) {
    d[i] = (p * i + q) % r + s;
}
out.println(String.format("Case #%d: %.11f", cn, ProblemA.solve(d)));
return s;
}


public static long func_6ee463595df041a9839770b878aeab4a(int cn, int N, PrintWriter out, Scanner in) { 
 long p = in.nextInt();
long q = in.nextInt();
long r = in.nextInt();
long s = in.nextInt();
long[] d = new long[N];
for (int i = 0; i < N; i++) {
    d[i] = (p * i + q) % r + s;
}
out.println(String.format("Case #%d: %.11f", cn, ProblemA.solve(d)));
return q;
}


public static long[] func_c9c262c6aec9494c9eb3d131f5d46778(int cn, int N, PrintWriter out, Scanner in) { 
 long p = in.nextInt();
long q = in.nextInt();
long r = in.nextInt();
long s = in.nextInt();
long[] d = new long[N];
for (int i = 0; i < N; i++) {
    d[i] = (p * i + q) % r + s;
}
out.println(String.format("Case #%d: %.11f", cn, ProblemA.solve(d)));
return d;
}


*********************************

#### Score: 9.50330


#### Java Tokens: next, %.11f, nextint, string, format, #%d:, problema, int, println, problem, flush, solve, case 

public static PrintWriter func_de91750d4b6649988c69d8a6a5fe3306(int T, PrintWriter out, Scanner in) { 
 for (int cn = 1; cn <= T; cn++) {
    int N = in.nextInt();
    long p = in.nextInt();
    long q = in.nextInt();
    long r = in.nextInt();
    long s = in.nextInt();
    long[] d = new long[N];
    for (int i = 0; i < N; i++) {
        d[i] = (p * i + q) % r + s;
    }
    out.println(String.format("Case #%d: %.11f", cn, ProblemA.solve(d)));
}
out.flush();
return out;
}


public static PrintWriter func_ca8773b02362430a9ce577a79990645a(PrintWriter out, Scanner in) { 
 int T = in.nextInt();
for (int cn = 1; cn <= T; cn++) {
    int N = in.nextInt();
    long p = in.nextInt();
    long q = in.nextInt();
    long r = in.nextInt();
    long s = in.nextInt();
    long[] d = new long[N];
    for (int i = 0; i < N; i++) {
        d[i] = (p * i + q) % r + s;
    }
    out.println(String.format("Case #%d: %.11f", cn, ProblemA.solve(d)));
}
out.flush();
return out;
}


public static int func_b42b1079e35b420e8f99e43425421d5b(PrintWriter out, Scanner in) { 
 int T = in.nextInt();
for (int cn = 1; cn <= T; cn++) {
    int N = in.nextInt();
    long p = in.nextInt();
    long q = in.nextInt();
    long r = in.nextInt();
    long s = in.nextInt();
    long[] d = new long[N];
    for (int i = 0; i < N; i++) {
        d[i] = (p * i + q) % r + s;
    }
    out.println(String.format("Case #%d: %.11f", cn, ProblemA.solve(d)));
}
out.flush();
return T;
}


*********************************

#### Score: 8.49854


#### Java Tokens: next, %.11f, nextint, string, format, #%d:, problema, int, printwriter, print, println, system, problem, solve, writer, case 

public static int func_59f4e7b568dd4923a707d3c8dbc048ca(Scanner in) { 
 PrintWriter out = new PrintWriter(System.out);
int T = in.nextInt();
for (int cn = 1; cn <= T; cn++) {
    int N = in.nextInt();
    long p = in.nextInt();
    long q = in.nextInt();
    long r = in.nextInt();
    long s = in.nextInt();
    long[] d = new long[N];
    for (int i = 0; i < N; i++) {
        d[i] = (p * i + q) % r + s;
    }
    out.println(String.format("Case #%d: %.11f", cn, ProblemA.solve(d)));
}
return T;
}


*********************************

#### Score: 8.21133


#### Java Tokens: next, %.11f, nextint, string, format, #%d:, problema, int, printwriter, print, println, system, problem, flush, solve, writer, case 

public static int func_55ff23f3681c48eebca9bb28584c136a(Scanner in) { 
 PrintWriter out = new PrintWriter(System.out);
int T = in.nextInt();
for (int cn = 1; cn <= T; cn++) {
    int N = in.nextInt();
    long p = in.nextInt();
    long q = in.nextInt();
    long r = in.nextInt();
    long s = in.nextInt();
    long[] d = new long[N];
    for (int i = 0; i < N; i++) {
        d[i] = (p * i + q) % r + s;
    }
    out.println(String.format("Case #%d: %.11f", cn, ProblemA.solve(d)));
}
out.flush();
return T;
}


*********************************

#### Score: 8.07868


#### Java Tokens: next, nextint, test, perfect, casenum, num, cnt, casecnt, int, println, print, system, flush, solve, processing, close, case 

public static PrintWriter func_f12e35b80f5a45849f90b476496469d3(PrintWriter pw, Scanner sc) { 
 int caseCnt = sc.nextInt();
for (int caseNum = 0; caseNum < caseCnt; caseNum++) {
    System.out.println("Processing test case " + (caseNum + 1));
    pw.print("Case #" + (caseNum + 1) + ":");
    new Perfect().solve(sc, pw);
}
pw.flush();
pw.close();
sc.close();
return pw;
}


public static int func_88d590cfe4e9440abaf20e0993b429d7(PrintWriter pw, Scanner sc) { 
 int caseCnt = sc.nextInt();
for (int caseNum = 0; caseNum < caseCnt; caseNum++) {
    System.out.println("Processing test case " + (caseNum + 1));
    pw.print("Case #" + (caseNum + 1) + ":");
    new Perfect().solve(sc, pw);
}
pw.flush();
pw.close();
sc.close();
return caseCnt;
}


public static PrintWriter func_043e15777c2245f2ace3949d7ead4e4c(PrintWriter pw, Scanner sc) { 
 int caseCnt = sc.nextInt();
for (int caseNum = 0; caseNum < caseCnt; caseNum++) {
    System.out.println("Processing test case " + (caseNum + 1));
    pw.print("Case #" + (caseNum + 1) + ":");
    new Perfect().solve(sc, pw);
}
pw.flush();
pw.close();
return pw;
}


*********************************

#### Score: 8.07868


#### Java Tokens: next, nextint, test, casenum, num, cnt, casecnt, int, cheaters, println, print, system, flush, solve, processing, close, case 

public static PrintWriter func_09d59f7d2de54aa6ad5c03d1dd9a0206(PrintWriter pw, Scanner sc) { 
 int caseCnt = sc.nextInt();
for (int caseNum = 0; caseNum < caseCnt; caseNum++) {
    System.out.println("Processing test case " + (caseNum + 1));
    pw.print("Case #" + (caseNum + 1) + ": ");
    new Cheaters().solve(sc, pw);
}
pw.flush();
pw.close();
return pw;
}


public static int func_c8d4c03dd31f4ebaa9d0dbb08bd7aa83(PrintWriter pw, Scanner sc) { 
 int caseCnt = sc.nextInt();
for (int caseNum = 0; caseNum < caseCnt; caseNum++) {
    System.out.println("Processing test case " + (caseNum + 1));
    pw.print("Case #" + (caseNum + 1) + ": ");
    new Cheaters().solve(sc, pw);
}
pw.flush();
pw.close();
sc.close();
return caseCnt;
}


public static PrintWriter func_8854336f103d4db6836dc952494d5b44(PrintWriter pw, Scanner sc) { 
 int caseCnt = sc.nextInt();
for (int caseNum = 0; caseNum < caseCnt; caseNum++) {
    System.out.println("Processing test case " + (caseNum + 1));
    pw.print("Case #" + (caseNum + 1) + ": ");
    new Cheaters().solve(sc, pw);
}
pw.flush();
pw.close();
sc.close();
return pw;
}


*********************************

#### Score: 7.89423


#### Java Tokens: next, area, nextint, remain, upper, format, int, e-6, println, tests, system, abs, len, low, sqrt, math, close, case 

public static PrintWriter func_67e31bf12781408b9d2d355a3fbe533b(int tests, PrintWriter out, Scanner in) { 
 for (int t = 0; t < tests; t++) {
    int w = in.nextInt();
    int l = in.nextInt();
    int u = in.nextInt();
    int g = in.nextInt();
    if (t == 5) {
        System.out.println(w + " " + l + " " + u + " " + g);
    }
    double[] len = new double[w + 1];
    double[] low = new double[w + 1];
    int x0 = in.nextInt();
    int y0 = in.nextInt();
    low[x0] = y0;
    for (int i = 1; i < l; i++) {
        int x = in.nextInt();
        int y = in.nextInt();
        double k = 1.0 * (y - y0) / (x - x0);
        for (int j = x0 + 1; j <= x; j++) {
            low[j] = k * (j - x0) + y0;
        }
        x0 = x;
        y0 = y;
    }
    double[] upper = new double[w + 1];
    x0 = in.nextInt();
    y0 = in.nextInt();
    upper[x0] = y0;
    for (int i = 1; i < u; i++) {
        int x = in.nextInt();
        int y = in.nextInt();
        double k = 1.0 * (y - y0) / (x - x0);
        for (int j = x0 + 1; j <= x; j++) {
            upper[j] = k * (j - x0) + y0;
        }
        x0 = x;
        y0 = y;
    }
    for (int i = 0; i <= w; i++) {
        len[i] = upper[i] - low[i];
    }
    double area = 0;
    for (int i = 1; i <= w; i++) {
        area += (len[i - 1] + len[i]) / 2;
    }
    area /= g;
    out.println("Case #" + (t + 1) + ":");
    double x = 0;
    for (int i = 1; i < g; i++) {
        double remain = area;
        x0 = (int) x;
        int x1 = x0 + 1;
        double k = 1.0 * (len[x1] - len[x0]);
        double y = k * (x - x0) + len[x0];
        while (remain > (y + len[x1]) * (x1 - x) / 2) {
            remain -= (y + len[x1]) * (x1 - x) / 2;
            x = x1;
            x0 = (int) x;
            x1 = x0 + 1;
            k = 1.0 * (len[x1] - len[x0]);
            y = k * (x - x0) + len[x0];
        }
        if (Math.abs(k) > 10e-6) {
            double a = k;
            double b = 2 * (y - k * x);
            double c = k * x * x - 2 * x * y - 2 * remain;
            double d = Math.sqrt(b * b - 4 * a * c);
            double x2 = (d - b) / (2 * a);
            double x3 = -1.0 * (d + b) / (2 * a);
            if (x2 > x && x2 <= x1) {
                out.println(A.format(x2));
                x = x2;
            } else {
                out.println(A.format(x3));
                x = x3;
            }
        } else {
            x += remain / y;
            out.println(A.format(x));
        }
    }
}
in.close();
return out;
}


public static PrintWriter func_46aee87296a742fa98719983a80be5f9(int tests, PrintWriter out, Scanner in) { 
 for (int t = 0; t < tests; t++) {
    int w = in.nextInt();
    int l = in.nextInt();
    int u = in.nextInt();
    int g = in.nextInt();
    if (t == 5) {
        System.out.println(w + " " + l + " " + u + " " + g);
    }
    double[] len = new double[w + 1];
    double[] low = new double[w + 1];
    int x0 = in.nextInt();
    int y0 = in.nextInt();
    low[x0] = y0;
    for (int i = 1; i < l; i++) {
        int x = in.nextInt();
        int y = in.nextInt();
        double k = 1.0 * (y - y0) / (x - x0);
        for (int j = x0 + 1; j <= x; j++) {
            low[j] = k * (j - x0) + y0;
        }
        x0 = x;
        y0 = y;
    }
    double[] upper = new double[w + 1];
    x0 = in.nextInt();
    y0 = in.nextInt();
    upper[x0] = y0;
    for (int i = 1; i < u; i++) {
        int x = in.nextInt();
        int y = in.nextInt();
        double k = 1.0 * (y - y0) / (x - x0);
        for (int j = x0 + 1; j <= x; j++) {
            upper[j] = k * (j - x0) + y0;
        }
        x0 = x;
        y0 = y;
    }
    for (int i = 0; i <= w; i++) {
        len[i] = upper[i] - low[i];
    }
    double area = 0;
    for (int i = 1; i <= w; i++) {
        area += (len[i - 1] + len[i]) / 2;
    }
    area /= g;
    out.println("Case #" + (t + 1) + ":");
    double x = 0;
    for (int i = 1; i < g; i++) {
        double remain = area;
        x0 = (int) x;
        int x1 = x0 + 1;
        double k = 1.0 * (len[x1] - len[x0]);
        double y = k * (x - x0) + len[x0];
        while (remain > (y + len[x1]) * (x1 - x) / 2) {
            remain -= (y + len[x1]) * (x1 - x) / 2;
            x = x1;
            x0 = (int) x;
            x1 = x0 + 1;
            k = 1.0 * (len[x1] - len[x0]);
            y = k * (x - x0) + len[x0];
        }
        if (Math.abs(k) > 10e-6) {
            double a = k;
            double b = 2 * (y - k * x);
            double c = k * x * x - 2 * x * y - 2 * remain;
            double d = Math.sqrt(b * b - 4 * a * c);
            double x2 = (d - b) / (2 * a);
            double x3 = -1.0 * (d + b) / (2 * a);
            if (x2 > x && x2 <= x1) {
                out.println(A.format(x2));
                x = x2;
            } else {
                out.println(A.format(x3));
                x = x3;
            }
        } else {
            x += remain / y;
            out.println(A.format(x));
        }
    }
}
in.close();
out.close();
return out;
}


*********************************

#### Score: 7.85750


#### Java Tokens: next, println, system, nextint, string, solve, int, case 

public static PrintWriter func_587164aac1054d6fa3f49bd7c1870515(PrintWriter out, Scanner in) { 
 int T = in.nextInt();
for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
return out;
}


public static int func_3f1576aadf40477d8d1261332ce25a8a(PrintWriter out, Scanner in) { 
 int T = in.nextInt();
for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
return T;
}


public static PrintWriter func_aabe5d00d5094c7bb290dd667ebe6d10(PrintWriter out, Scanner in) { 
 int T = in.nextInt();
for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
return out;
}

