### Py Tokens: high, nextarea, low, area, find 

### Py functions

def func_bd16494a7fd04d1ea08b5c1415b05a87(G, high, low, x, xs):
    a = [(x, find(high, x) - find(low, x)) for x in xs]
    area = 0.0
    lx, ly = a[0]
    for x, y in a[1:]:
        area += (x - lx) * ((y + ly) / 2.0)
        lx, ly = x, y
    nextarea = area / G
    return G

def func_4f0a0bb5b8184661901c41c7cf34ad29(G, high, low, x, xs):
    a = [(x, find(high, x) - find(low, x)) for x in xs]
    area = 0.0
    lx, ly = a[0]
    for x, y in a[1:]:
        area += (x - lx) * ((y + ly) / 2.0)
        lx, ly = x, y
    nextarea = area / G
    return xs

def func_b073b3ae34674c23b531c540bedf65cb(G, high, low, x, xs):
    a = [(x, find(high, x) - find(low, x)) for x in xs]
    area = 0.0
    lx, ly = a[0]
    for x, y in a[1:]:
        area += (x - lx) * ((y + ly) / 2.0)
        lx, ly = x, y
    nextarea = area / G
    return y

def func_fc63c6be7dbd4993a4cee121e3040f21(G, high, low, x, xs):
    a = [(x, find(high, x) - find(low, x)) for x in xs]
    area = 0.0
    lx, ly = a[0]
    for x, y in a[1:]:
        area += (x - lx) * ((y + ly) / 2.0)
        lx, ly = x, y
    nextarea = area / G
    return low

def func_b7c876dbe3d5466595959713dcc9f5d2(G, high, low, x, xs):
    a = [(x, find(high, x) - find(low, x)) for x in xs]
    area = 0.0
    lx, ly = a[0]
    for x, y in a[1:]:
        area += (x - lx) * ((y + ly) / 2.0)
        lx, ly = x, y
    nextarea = area / G
    return area

*********************************

#### Score: 10.55060


#### Java Tokens: area, high, println, low 

public static double func_d619e981b9ee44969c0064771613fecf(int X, A.Polyline high, A.Polyline low) { 
 double area = high.area(X) - low.area(X);
A.out.println();
return area;
}


*********************************

#### Score: 9.92139


#### Java Tokens: area, high, curans, guess, low 

public static double func_a4d4c1a9070041ce851e0066d0e04a7e(double low, double curans, double high) { 
 double guess = (low + high) / 2;
double a = A.area(curans, guess);
return guess;
}


public static double func_2c659be0fd814831a95ab0df76b9cddc(double low, double curans, double high) { 
 double guess = (low + high) / 2;
double a = A.area(curans, guess);
return a;
}


*********************************

#### Score: 9.36587


#### Java Tokens: area, high, getevents, low, get, events 

public static int func_e32345ee8c84407299a5077e1859179d(A.Point[] low, A.Point[] high) { 
 int[] events = A.getEvents(low, high);
double area = 0;
int a = 0, b = 0;
return a;
}


public static double func_cf5b878a3dea41eb8db2addb7781fcc5(A.Point[] low, A.Point[] high) { 
 int[] events = A.getEvents(low, high);
double area = 0;
int a = 0, b = 0;
return area;
}


public static int func_760f6ea633d74d50a613ef4f168adcda(A.Point[] low, A.Point[] high) { 
 int[] events = A.getEvents(low, high);
double area = 0;
int a = 0, b = 0;
return b;
}


*********************************

#### Score: 9.08062


#### Java Tokens: high, low 

public static int func_f388707605144796a4b526fe90630b7b(long high, long low) { 
 long m = (low + high) / 2;
int i = 0;
long x = 0;
return i;
}


public static long func_4095026e27114ba9a8e9a5cc355f034b(long high, long low) { 
 long m = (low + high) / 2;
int i = 0;
long x = 0;
return m;
}


public static double func_d2d97269ac5346cdaada845feea25bbc(int W) { 
 double low = 0;
double high = W;
return high;
}


*********************************

#### Score: 8.87181


#### Java Tokens: area, high, curans, low, guess, targetarea, target 

public static double func_1a24722cee3f48db89b50da142ca271e(double targetArea, double low, double curans) { 
 double high = A.W;
while (low + 0.0000000001 < high) {
    double guess = (low + high) / 2;
    double a = A.area(curans, guess);
    if (a < targetArea) {
        low = guess;
    } else {
        high = guess;
    }
}
return low;
}


public static double func_2efe90caeb654c088de6763ffd490bfb(double targetArea, double low, double curans, double high) { 
 while (low + 0.0000000001 < high) {
    double guess = (low + high) / 2;
    double a = A.area(curans, guess);
    if (a < targetArea) {
        low = guess;
    } else {
        high = guess;
    }
}
curans = (low + high) / 2;
return curans;
}


public static double func_cb045795a3b6423196e64aa0be9a98a0(double targetArea, double curans) { 
 double low = curans;
double high = A.W;
while (low + 0.0000000001 < high) {
    double guess = (low + high) / 2;
    double a = A.area(curans, guess);
    if (a < targetArea) {
        low = guess;
    } else {
        high = guess;
    }
}
return high;
}


*********************************

#### Score: 8.87181


#### Java Tokens: area, high, curans, guess, low, targetarea, target 

public static double func_e538adf609f642a5ae07e3e7d6a37d95(double guess, double targetArea, double low, double curans, double high) { 
 double a = A.area(curans, guess);
if (a < targetArea) {
    low = guess;
} else {
    high = guess;
}
return a;
}


public static double func_4e851067d59d4adcb7893270ae830ca1(double guess, double targetArea, double low, double curans, double high) { 
 double a = A.area(curans, guess);
if (a < targetArea) {
    low = guess;
} else {
    high = guess;
}
return high;
}


public static double func_df9398fad8c549e5b43502938212e0c8(double targetArea, double low, double curans, double high) { 
 double guess = (low + high) / 2;
double a = A.area(curans, guess);
if (a < targetArea) {
    low = guess;
} else {
    high = guess;
}
return guess;
}


*********************************

#### Score: 8.87181


#### Java Tokens: area, e-9, high, println, low, eps 

public static double func_989e127c85ec4bdb85cb1e28d96fdef3(int X, A.Polyline high, A.Polyline low) { 
 double area = high.area(X) - low.area(X);
A.out.println();
double eps = 1e-9;
return eps;
}


public static double func_01ca4d4b86f6489e97d6c9f07cc33344(int X, A.Polyline high, A.Polyline low) { 
 double area = high.area(X) - low.area(X);
A.out.println();
double eps = 1e-9;
return area;
}


*********************************

#### Score: 8.46644


#### Java Tokens: high, low, pref 

public static long func_5a49a347564d436ea920679a11a87a7e(int n, int[] a, long[] pref) { 
 for (int i = 0; i < n; i++) {
    pref[i + 1] = pref[i] + a[i];
}
// System.out.println(Arrays.toString(pref));
// System.out.println(Arrays.toString(a));
// can't
long low = 0;
// can
long high = pref[n];
return low;
}


public static long func_2487d07add2548239d0f095dd0a4d809(int n, int r, int s, int q, int p) { 
 int[] a = new int[n];
for (int i = 0; i < n; i++) {
    a[i] = (int) (((long) i * p + q) % r + s);
}
long[] pref = new long[n + 1];
for (int i = 0; i < n; i++) {
    pref[i + 1] = pref[i] + a[i];
}
// System.out.println(Arrays.toString(pref));
// System.out.println(Arrays.toString(a));
// can't
long low = 0;
// can
long high = pref[n];
return high;
}


public static long func_3b9299aca8b743df90f3c6b488f863b9(int n, long[] pref) { 
 // System.out.println(Arrays.toString(pref));
// System.out.println(Arrays.toString(a));
// can't
long low = 0;
// can
long high = pref[n];
return high;
}


*********************************

#### Score: 8.46644


#### Java Tokens: high, low, start 

public static double func_b5792060a4574f6cb338460730a6d45d(int W, double start) { 
 double low = start;
double high = W;
return high;
}


public static double func_425fa528f9504f9fb25dda4eb0fe99a8(int W, double start) { 
 double low = start;
double high = W;
return low;
}


*********************************

#### Score: 8.46644


#### Java Tokens: high, low, mid 

public static double func_608e8094a31741c5b1446cdcc31bc4c1(double high, double T, double low) { 
 double mid = (high + low) / 2;
if (A.S(mid) < T) {
    low = mid;
} else {
    high = mid;
}
return low;
}


public static double func_77de1b90c2464a29a0b4c2ab8b37d8bf(double high, double T, double low) { 
 double mid = (high + low) / 2;
if (A.S(mid) < T) {
    low = mid;
} else {
    high = mid;
}
return mid;
}


public static double func_197eab54ec904e71bad12749c453400f(double high, double T, double low) { 
 double mid = (high + low) / 2;
if (A.S(mid) < T) {
    low = mid;
} else {
    high = mid;
}
return high;
}

