### Py Tokens: map, solve, lineno, int, lines, split 

### Py functions

def func_fccd340dd73b4b28bad23fedb73171c2(b, lineno, lines, n):
    x = map(int, lines[lineno + 1].split())
    r = solve(b, x[:n])
    return b

def func_1ed0f756513140a48c163edf644e8d03(b, lineno, lines, n):
    x = map(int, lines[lineno + 1].split())
    r = solve(b, x[:n])
    return x

def func_6dec5bae37cd4b08b9e9110dc34b7a5f(b, lineno, lines, n):
    x = map(int, lines[lineno + 1].split())
    r = solve(b, x[:n])
    return lineno

def func_d667cf17b07b454c8147dd6ebc435724(b, lineno, lines, n):
    x = map(int, lines[lineno + 1].split())
    r = solve(b, x[:n])
    lineno += 2
    return lineno

def func_55169213250648e399528d269890a1ac(b, lineno, lines, n):
    x = map(int, lines[lineno + 1].split())
    r = solve(b, x[:n])
    return n

*********************************

#### Score: 5.75625


#### Java Tokens: next, println, system, nextint, string, solve, int, case 

public static PrintWriter func_587164aac1054d6fa3f49bd7c1870515(PrintWriter out, Scanner in) { 
 int T = in.nextInt();
for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
return out;
}


public static int func_3f1576aadf40477d8d1261332ce25a8a(PrintWriter out, Scanner in) { 
 int T = in.nextInt();
for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
return T;
}


public static PrintWriter func_aabe5d00d5094c7bb290dd667ebe6d10(PrintWriter out, Scanner in) { 
 int T = in.nextInt();
for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
return out;
}


*********************************

#### Score: 5.49118


#### Java Tokens: next, println, system, nextint, string, solve, close, int, case 

public static PrintWriter func_5f57a2edef1041caa821806cabf7e9d2(PrintWriter out, Scanner in) { 
 int T = in.nextInt();
for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
out.close();
return out;
}


public static PrintWriter func_635e262b1c0747db8dc8487584a21618(PrintWriter out, Scanner in) { 
 int T = in.nextInt();
for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
out.close();
return out;
}


public static PrintWriter func_8a2c51d4894943cfb610a6c0d7c52954(PrintWriter out, Scanner in) { 
 int T = in.nextInt();
for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
out.close();
return out;
}


*********************************

#### Score: 5.49118


#### Java Tokens: next, println, cases, system, nextint, solve, scanner, int, case 

public static int func_ac187287df434b2ba9123f5a9edcdcd6(Scanner scanner) { 
 final int cases = scanner.nextInt();
for (int t = 0; t < cases; t++) {
    System.out.println("Case #" + (t + 1) + ": " + A.solve(scanner));
}
return cases;
}


*********************************

#### Score: 4.87816


#### Java Tokens: println, string, solve, case 

public static PrintWriter func_cca1ef001a3a42e6b8d65300c1775c57(int i, PrintWriter out, Scanner in) { 
 String s = "Case #" + (i + 1) + ": " + new A().solve(in);
out.println(s);
return out;
}


public static String func_8e37437692dd4d6c8ec660a8266a072f(int i, PrintWriter out, Scanner in) { 
 String s = "Case #" + (i + 1) + ": " + new A().solve(in);
out.println(s);
return s;
}


public static PrintWriter func_eb5dfcd3c11a4f6ca6a3e3fba17b9c8b(int i, PrintWriter out, Scanner in) { 
 String s = "Case #" + (i + 1) + ": " + new A().solve(in);
out.println(s);
return out;
}


*********************************

#### Score: 4.83382


#### Java Tokens: next, println, %.11f, problem, nextint, string, solve, format, #%d:, problema, int, case 

public static long func_b30ce8a524b746eba2ae57d5334cb5f2(int cn, PrintWriter out, Scanner in) { 
 int N = in.nextInt();
long p = in.nextInt();
long q = in.nextInt();
long r = in.nextInt();
long s = in.nextInt();
long[] d = new long[N];
for (int i = 0; i < N; i++) {
    d[i] = (p * i + q) % r + s;
}
out.println(String.format("Case #%d: %.11f", cn, ProblemA.solve(d)));
return s;
}


public static long func_6ee463595df041a9839770b878aeab4a(int cn, int N, PrintWriter out, Scanner in) { 
 long p = in.nextInt();
long q = in.nextInt();
long r = in.nextInt();
long s = in.nextInt();
long[] d = new long[N];
for (int i = 0; i < N; i++) {
    d[i] = (p * i + q) % r + s;
}
out.println(String.format("Case #%d: %.11f", cn, ProblemA.solve(d)));
return q;
}


public static long[] func_c9c262c6aec9494c9eb3d131f5d46778(int cn, int N, PrintWriter out, Scanner in) { 
 long p = in.nextInt();
long q = in.nextInt();
long r = in.nextInt();
long s = in.nextInt();
long[] d = new long[N];
for (int i = 0; i < N; i++) {
    d[i] = (p * i + q) % r + s;
}
out.println(String.format("Case #%d: %.11f", cn, ProblemA.solve(d)));
return d;
}


*********************************

#### Score: 4.65110


#### Java Tokens: next, %.11f, nextint, string, format, #%d:, problema, int, println, problem, flush, solve, case 

public static PrintWriter func_de91750d4b6649988c69d8a6a5fe3306(int T, PrintWriter out, Scanner in) { 
 for (int cn = 1; cn <= T; cn++) {
    int N = in.nextInt();
    long p = in.nextInt();
    long q = in.nextInt();
    long r = in.nextInt();
    long s = in.nextInt();
    long[] d = new long[N];
    for (int i = 0; i < N; i++) {
        d[i] = (p * i + q) % r + s;
    }
    out.println(String.format("Case #%d: %.11f", cn, ProblemA.solve(d)));
}
out.flush();
return out;
}


public static PrintWriter func_ca8773b02362430a9ce577a79990645a(PrintWriter out, Scanner in) { 
 int T = in.nextInt();
for (int cn = 1; cn <= T; cn++) {
    int N = in.nextInt();
    long p = in.nextInt();
    long q = in.nextInt();
    long r = in.nextInt();
    long s = in.nextInt();
    long[] d = new long[N];
    for (int i = 0; i < N; i++) {
        d[i] = (p * i + q) % r + s;
    }
    out.println(String.format("Case #%d: %.11f", cn, ProblemA.solve(d)));
}
out.flush();
return out;
}


public static int func_b42b1079e35b420e8f99e43425421d5b(PrintWriter out, Scanner in) { 
 int T = in.nextInt();
for (int cn = 1; cn <= T; cn++) {
    int N = in.nextInt();
    long p = in.nextInt();
    long q = in.nextInt();
    long r = in.nextInt();
    long s = in.nextInt();
    long[] d = new long[N];
    for (int i = 0; i < N; i++) {
        d[i] = (p * i + q) % r + s;
    }
    out.println(String.format("Case #%d: %.11f", cn, ProblemA.solve(d)));
}
out.flush();
return T;
}


*********************************

#### Score: 4.60176


#### Java Tokens: println, system, string, solve, case 

public static PrintWriter func_a9da6b05a0ce45faa258bda28aad5b0f(int T, PrintWriter out, Scanner in) { 
 for (int i = 0; i < T; i++) {
    String s = "Case #" + (i + 1) + ": " + new A().solve(in);
    out.println(s);
    System.out.println(s);
}
return out;
}


public static String func_ab11053ceaa243f49593c54daba33b16(int i, PrintWriter out, Scanner in) { 
 String s = "Case #" + (i + 1) + ": " + new A().solve(in);
out.println(s);
System.out.println(s);
return s;
}


public static String func_1defcc3f2c3d43c88a99745adab1e46b(int i, PrintWriter out, Scanner in) { 
 String s = "Case #" + (i + 1) + ": " + new A().solve(in);
out.println(s);
System.out.println(s);
return s;
}


*********************************

#### Score: 4.48296


#### Java Tokens: next, area, nextint, lower, lowery, upper, lowerx, irregular, int, uppery, upperx, irregularcakes, solve, cakes 

public static double func_9a215ae5676f4b6fa8ee56d9836839d1(int L, int U, int W, int[] lowerX, int[] lowerY) { 
 for (int i = 0; i < L; i++) {
    lowerX[i] = IrregularCakes.sc.nextInt();
    lowerY[i] = IrregularCakes.sc.nextInt();
}
int[] upperX = new int[U], upperY = new int[U];
for (int i = 0; i < U; i++) {
    upperX[i] = IrregularCakes.sc.nextInt();
    upperY[i] = IrregularCakes.sc.nextInt();
}
double area = IrregularCakes.solve(upperX, upperY, W) - IrregularCakes.solve(lowerX, lowerY, W);
return area;
}


public static double func_cf323fbaa473447cbf24a6de94119d10(int L, int U, int W) { 
 int[] lowerX = new int[L], lowerY = new int[L];
for (int i = 0; i < L; i++) {
    lowerX[i] = IrregularCakes.sc.nextInt();
    lowerY[i] = IrregularCakes.sc.nextInt();
}
int[] upperX = new int[U], upperY = new int[U];
for (int i = 0; i < U; i++) {
    upperX[i] = IrregularCakes.sc.nextInt();
    upperY[i] = IrregularCakes.sc.nextInt();
}
double area = IrregularCakes.solve(upperX, upperY, W) - IrregularCakes.solve(lowerX, lowerY, W);
return area;
}


*********************************

#### Score: 4.48296


#### Java Tokens: next, area, nextint, upper, lower, lowery, lowerx, irregular, int, uppery, upperx, irregularcakes, solve, cakes 

public static double func_70b45ac1bfe342c1aecf16a850ddbb08(int U, int W, int[] lowerX, int[] lowerY) { 
 int[] upperX = new int[U], upperY = new int[U];
for (int i = 0; i < U; i++) {
    upperX[i] = IrregularCakes.sc.nextInt();
    upperY[i] = IrregularCakes.sc.nextInt();
}
double area = IrregularCakes.solve(upperX, upperY, W) - IrregularCakes.solve(lowerX, lowerY, W);
return area;
}


*********************************

#### Score: 4.44365


#### Java Tokens: split, string, trim, line 

public static double[] func_de3a96ea49a441999168791bd2f96e09(int n, String line) { 
 String[] ss = line.trim().split(" ");
double[] l = new double[n];
return l;
}


public static String[] func_b4974e8e9363455792fd54d845a37f4a(int n, String line) { 
 String[] ss = line.trim().split(" ");
double[] l = new double[n];
return ss;
}

