### Py Tokens: nextpos, info, cut, float, totalarea, solnstr 

### Py functions

def func_d5acc4b43b254ebeba5164b67b64a3c9(info, totalarea):
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return info

def func_b4ea502cf36744b49c9ef2d9add133bb(info, totalarea):
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return totalarea

def func_9142c15642714ebbbd4a99eb7c01a6f6(info, totalarea):
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return nextpos

def func_bd725e6442114472a54afefaecd4d63b(info, totalarea):
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return info

def func_68085bf926c54f85972b3f91db20a9aa(info, totalarea):
    solnstr = ''
    cut = 1
    nextpos = totalarea * (float(cut) / info[3])
    return cut

*********************************

#### Score: 5.94253


#### Java Tokens: area, cut, min, cutarea 

public static double func_b880acea3df84d3696ad9be2545b074d(int i, double g, double firstArea) { 
 double cutArea = (i + 1) / g * firstArea;
double min = 0.0;
return cutArea;
}


public static double func_2ab04640718e4a019f0c0e531ee6f48a(int i, double g, double firstArea) { 
 double cutArea = (i + 1) / g * firstArea;
double min = 0.0;
return min;
}


*********************************

#### Score: 5.59994


#### Java Tokens: area, cut, min, max, cutarea 

public static double func_67010f45790b455197bf1d0208e16102(int W, int i, double g, double firstArea) { 
 double cutArea = (i + 1) / g * firstArea;
double min = 0.0;
double max = W + 0.00000001337;
return min;
}


public static double func_5cbdd0678f1b45af8d60fc837f6263ac(int W, int i, double g, double firstArea) { 
 double cutArea = (i + 1) / g * firstArea;
double min = 0.0;
double max = W + 0.00000001337;
return max;
}


public static double func_dc0f7d4b186547deb8d34f07be222b77(int W, int i, double g, double firstArea) { 
 double cutArea = (i + 1) / g * firstArea;
double min = 0.0;
double max = W + 0.00000001337;
return cutArea;
}


*********************************

#### Score: 5.29746


#### Java Tokens: area, cut, min, max, mid, cutarea 

public static double func_b07fc4f911724a4a913e309c45e1b985(int W, int i, double g, double firstArea) { 
 double cutArea = (i + 1) / g * firstArea;
double min = 0.0;
double max = W + 0.00000001337;
double mid = 0;
return min;
}


public static double func_1beee2e7837146ad98b21343e5d10398(int W, int i, double g, double firstArea) { 
 double cutArea = (i + 1) / g * firstArea;
double min = 0.0;
double max = W + 0.00000001337;
double mid = 0;
return max;
}


public static double func_50676bc621fd47399c305dfe33e168cd(int W, int i, double g, double firstArea) { 
 double cutArea = (i + 1) / g * firstArea;
double min = 0.0;
double max = W + 0.00000001337;
double mid = 0;
return cutArea;
}


*********************************

#### Score: 4.57082


#### Java Tokens: parseint, next, cut, top, nexttoken, integer, parse, int, token 

public static int func_b68a5393ebb14bd58185beeacee9b83b(StringTokenizer st) { 
 int top = Integer.parseInt(st.nextToken());
int cut = Integer.parseInt(st.nextToken());
return top;
}


public static int func_f2df5e51916846328ba5e99e8e1a89d2(StringTokenizer st) { 
 int top = Integer.parseInt(st.nextToken());
int cut = Integer.parseInt(st.nextToken());
return cut;
}


*********************************

#### Score: 4.37458


#### Java Tokens: parseint, next, cut, top, nexttoken, bottom, integer, parse, int, token 

public static int func_7ac32e9411f74de8acec5353cb7ef874(StringTokenizer st) { 
 int bottom = Integer.parseInt(st.nextToken());
int top = Integer.parseInt(st.nextToken());
int cut = Integer.parseInt(st.nextToken());
return cut;
}


public static int func_e9b6e134bdbc42749de1133e813cfaca(StringTokenizer st) { 
 int bottom = Integer.parseInt(st.nextToken());
int top = Integer.parseInt(st.nextToken());
int cut = Integer.parseInt(st.nextToken());
return top;
}


public static int func_6a11e993a23a48bdbef00f9ff87475e7(StringTokenizer st) { 
 int bottom = Integer.parseInt(st.nextToken());
int top = Integer.parseInt(st.nextToken());
int cut = Integer.parseInt(st.nextToken());
return bottom;
}


*********************************

#### Score: 4.03310


#### Java Tokens: parseint, next, cut, last, top, nexttoken, bottom, integer, parse, lastx, int, token 

public static int func_7a1c983ff4d144b4a59e3b5aa6a61dd4(StringTokenizer st) { 
 int lastX = Integer.parseInt(st.nextToken());
int bottom = Integer.parseInt(st.nextToken());
int top = Integer.parseInt(st.nextToken());
int cut = Integer.parseInt(st.nextToken());
return bottom;
}


public static int func_6245118be9634478a81e14da3f98652f(StringTokenizer st) { 
 int lastX = Integer.parseInt(st.nextToken());
int bottom = Integer.parseInt(st.nextToken());
int top = Integer.parseInt(st.nextToken());
int cut = Integer.parseInt(st.nextToken());
return lastX;
}


public static int func_47c923126ee04bf5a83d5ff8004234b4(StringTokenizer st) { 
 int lastX = Integer.parseInt(st.nextToken());
int bottom = Integer.parseInt(st.nextToken());
int top = Integer.parseInt(st.nextToken());
int cut = Integer.parseInt(st.nextToken());
return top;
}


*********************************

#### Score: 3.88364


#### Java Tokens: area, codejam_round3_a, cut, code, max, mid, codejam, cutarea, evalarea, min, eval, round, jam 

public static double func_29ed05ae4d0e45c58882e8cb9a15063e(int W, int i, double g, double firstArea) { 
 double cutArea = (i + 1) / g * firstArea;
double min = 0.0;
double max = W + 0.00000001337;
double mid = 0;
while (max - min > 0.000000001) {
    mid = (min + max) / 2.0;
    double a = CodeJam_Round3_A.evalArea(mid);
    // System.out.printf("%.1f %.2f %.5f\n" , mid, cutArea, a);
    if (a > cutArea)
        max = mid;
    else
        min = mid;
}
return cutArea;
}


public static double func_5a182003974c4adc9f3f3a1de25cab4a(int W, int i, double g, double firstArea) { 
 double cutArea = (i + 1) / g * firstArea;
double min = 0.0;
double max = W + 0.00000001337;
double mid = 0;
while (max - min > 0.000000001) {
    mid = (min + max) / 2.0;
    double a = CodeJam_Round3_A.evalArea(mid);
    // System.out.printf("%.1f %.2f %.5f\n" , mid, cutArea, a);
    if (a > cutArea)
        max = mid;
    else
        min = mid;
}
return mid;
}


public static double func_c111f0f4dc3e46318956d2d851ec8968(int W, int i, double g, double firstArea) { 
 double cutArea = (i + 1) / g * firstArea;
double min = 0.0;
double max = W + 0.00000001337;
double mid = 0;
while (max - min > 0.000000001) {
    mid = (min + max) / 2.0;
    double a = CodeJam_Round3_A.evalArea(mid);
    // System.out.printf("%.1f %.2f %.5f\n" , mid, cutArea, a);
    if (a > cutArea)
        max = mid;
    else
        min = mid;
}
return min;
}


*********************************

#### Score: 3.88364


#### Java Tokens: codejam_round3_a, area, code, cut, max, mid, codejam, cutarea, evalarea, min, eval, round, jam 

public static double func_4f7d57f6e216402d855446e0af1e8b36(int W, double min, double cutArea) { 
 double max = W + 0.00000001337;
double mid = 0;
while (max - min > 0.000000001) {
    mid = (min + max) / 2.0;
    double a = CodeJam_Round3_A.evalArea(mid);
    // System.out.printf("%.1f %.2f %.5f\n" , mid, cutArea, a);
    if (a > cutArea)
        max = mid;
    else
        min = mid;
}
return min;
}


public static double func_5f35f07be8ec47ac8bcb86c010615b50(int W, double cutArea) { 
 double min = 0.0;
double max = W + 0.00000001337;
double mid = 0;
while (max - min > 0.000000001) {
    mid = (min + max) / 2.0;
    double a = CodeJam_Round3_A.evalArea(mid);
    // System.out.printf("%.1f %.2f %.5f\n" , mid, cutArea, a);
    if (a > cutArea)
        max = mid;
    else
        min = mid;
}
return mid;
}


public static double func_72da2ed20ef34abaa89a43fabd83318c(int W, double min, double cutArea) { 
 double max = W + 0.00000001337;
double mid = 0;
while (max - min > 0.000000001) {
    mid = (min + max) / 2.0;
    double a = CodeJam_Round3_A.evalArea(mid);
    // System.out.printf("%.1f %.2f %.5f\n" , mid, cutArea, a);
    if (a > cutArea)
        max = mid;
    else
        min = mid;
}
return max;
}


*********************************

#### Score: 3.88364


#### Java Tokens: codejam_round3_a, area, code, cut, max, mid, codejam, cutarea, evalarea, eval, min, round, jam 

public static double func_0f0e1bf4b9f349b39eec51bcb0afb931(double mid, double cutArea, double min, double max) { 
 double a = CodeJam_Round3_A.evalArea(mid);
// System.out.printf("%.1f %.2f %.5f\n" , mid, cutArea, a);
if (a > cutArea)
    max = mid;
else
    min = mid;
return min;
}


public static double func_5ffb5d15eb3645d5a70afc5bbbb5182b(double mid, double cutArea, double min, double max) { 
 double a = CodeJam_Round3_A.evalArea(mid);
// System.out.printf("%.1f %.2f %.5f\n" , mid, cutArea, a);
if (a > cutArea)
    max = mid;
else
    min = mid;
return a;
}


public static double func_f92b72236c7147268d5395289f06b5a5(double mid, double cutArea, double min, double max) { 
 double a = CodeJam_Round3_A.evalArea(mid);
// System.out.printf("%.1f %.2f %.5f\n" , mid, cutArea, a);
if (a > cutArea)
    max = mid;
else
    min = mid;
return max;
}


*********************************

#### Score: 3.83623


#### Java Tokens: area, println, total, totalarea, case 

public static double func_3ea90e4fd6e6448bbe7e6d0258a4c024(int m, PrintWriter out) { 
 out.println("Case #" + (m + 1) + ":");
double totalArea = A.area(0, A.W);
return totalArea;
}


public static PrintWriter func_0a24ce176503452daf8eb7f00283182b(int m, PrintWriter out) { 
 out.println("Case #" + (m + 1) + ":");
double totalArea = A.area(0, A.W);
return out;
}

