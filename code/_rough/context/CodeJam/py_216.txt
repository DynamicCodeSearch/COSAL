### Py Tokens: upper, lower, area, float, lowi, start, uppi, uppslope, lowslope 

### Py functions

def func_812c8c431b5544e191882a6cd5c65d9f(lower, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return lower

def func_3ecb1c3135a3474bbea41c22fe34edfc(lower, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return upper

def func_4a5415615f7f452ebac7a15250b17007(lower, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return lowi

def func_9d6a7ae87c85485da778d59536066018(lower, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return uppslope

def func_4e32d3c78ce143408198132b5955680b(lower, upper):
    start = upper[0][1] - lower[0][1]
    lowi = 1
    uppi = 1
    lowslope = float(lower[1][1] - lower[0][1]) / lower[1][0]
    uppslope = float(upper[1][1] - upper[0][1]) / upper[1][0]
    area = 0
    return lowslope

*********************************

#### Score: 7.05644


#### Java Tokens: area, total, size, last, upper, lower, totalarea, lastx 

public static double func_16d0490419ba4510a52110bd40c01f1e(ArrayList<Point> lower, ArrayList<Point> upper) { 
 int u = upper.size();
int l = lower.size();
double lastX = 0;
double totalArea = 0.0;
return lastX;
}


public static ArrayList<Point> func_c846638aeeba42209bb1a006bc6af783(ArrayList<Point> lower, ArrayList<Point> upper) { 
 int u = upper.size();
int l = lower.size();
double lastX = 0;
double totalArea = 0.0;
return upper;
}


public static ArrayList<Point> func_53617d74c93043f1be9885559938f98e(ArrayList<Point> lower, ArrayList<Point> upper) { 
 int u = upper.size();
int l = lower.size();
double lastX = 0;
double totalArea = 0.0;
return lower;
}


*********************************

#### Score: 6.72662


#### Java Tokens: next, area, total, nextint, lower, upper, totalarea, int, point 

public static int func_a86ea935ccb04587b63a355333ef6a76(Scanner in) { 
 // lower points
int l = in.nextInt();
// upper points
int u = in.nextInt();
int // guests
g = in.nextInt();
Point[] lower = new Point[l];
for (int i = 0; i < l; ++i) {
    lower[i] = new Point(in.nextInt(), in.nextInt());
}
Point[] upper = new Point[u];
for (int i = 0; i < u; ++i) {
    upper[i] = new Point(in.nextInt(), in.nextInt());
}
double totalArea = 0.0;
return g;
}


public static Point[] func_2d8096e689e841c88861147576eadc45(Scanner in) { 
 // lower points
int l = in.nextInt();
// upper points
int u = in.nextInt();
int // guests
g = in.nextInt();
Point[] lower = new Point[l];
for (int i = 0; i < l; ++i) {
    lower[i] = new Point(in.nextInt(), in.nextInt());
}
Point[] upper = new Point[u];
for (int i = 0; i < u; ++i) {
    upper[i] = new Point(in.nextInt(), in.nextInt());
}
double totalArea = 0.0;
return lower;
}


public static int func_81f77f79797c4ed28e4ecf933e359c06(Scanner in) { 
 int // width
w = in.nextInt();
// lower points
int l = in.nextInt();
// upper points
int u = in.nextInt();
int // guests
g = in.nextInt();
Point[] lower = new Point[l];
for (int i = 0; i < l; ++i) {
    lower[i] = new Point(in.nextInt(), in.nextInt());
}
Point[] upper = new Point[u];
for (int i = 0; i < u; ++i) {
    upper[i] = new Point(in.nextInt(), in.nextInt());
}
double totalArea = 0.0;
return l;
}


*********************************

#### Score: 6.72662


#### Java Tokens: next, area, total, nextint, lower, upper, totalarea, point, int 

public static double func_20bd94dbc3b54db7a9378ec9921e2a36(int u, int l, Scanner in) { 
 Point[] lower = new Point[l];
for (int i = 0; i < l; ++i) {
    lower[i] = new Point(in.nextInt(), in.nextInt());
}
Point[] upper = new Point[u];
for (int i = 0; i < u; ++i) {
    upper[i] = new Point(in.nextInt(), in.nextInt());
}
double totalArea = 0.0;
return totalArea;
}


public static double func_5487c17b23f34d22a19e1c65ef83b375(int u, int l, Point[] lower, Scanner in) { 
 for (int i = 0; i < l; ++i) {
    lower[i] = new Point(in.nextInt(), in.nextInt());
}
Point[] upper = new Point[u];
for (int i = 0; i < u; ++i) {
    upper[i] = new Point(in.nextInt(), in.nextInt());
}
double totalArea = 0.0;
return totalArea;
}


*********************************

#### Score: 6.60564


#### Java Tokens: size, upper, lower 

public static int func_2f79491f19b54a30ad516ae05177d605(ArrayList<Point> lower, ArrayList<Point> upper) { 
 int u = upper.size();
int l = lower.size();
return l;
}


public static int func_2ddf71a890e64c73ad89d2f3eda1a899(ArrayList<Point> lower, ArrayList<Point> upper) { 
 int u = upper.size();
int l = lower.size();
return u;
}


public static ArrayList<Point> func_99683052cf9c428f93ad5d0e9a9385a3(ArrayList<Point> lower, ArrayList<Point> upper) { 
 int u = upper.size();
int l = lower.size();
return upper;
}


*********************************

#### Score: 6.42809


#### Java Tokens: area, cur, curl, total, size, last, upper, lower, totalarea, lastx 

public static ArrayList<Point> func_64eb18f95b634db396ad919d2bddc6ec(ArrayList<Point> lower, ArrayList<Point> upper) { 
 int curL = 1;
int u = upper.size();
int l = lower.size();
double lastX = 0;
double totalArea = 0.0;
return upper;
}


public static ArrayList<Point> func_f12d548a1ca944b69282645491e5c57f(ArrayList<Point> lower, ArrayList<Point> upper) { 
 int curL = 1;
int u = upper.size();
int l = lower.size();
double lastX = 0;
double totalArea = 0.0;
return lower;
}


public static double func_8ac2047e2414429aa2fa5e24b6ffe66e(ArrayList<Point> lower, ArrayList<Point> upper) { 
 int curL = 1;
int u = upper.size();
int l = lower.size();
double lastX = 0;
double totalArea = 0.0;
return totalArea;
}


*********************************

#### Score: 6.42809


#### Java Tokens: area, total, abs, upper, lower, index, math, totalarea, upperindex, lowerindex 

public static int func_8a67515184614066bedb2bd789afcd96(double totalArea) { 
 totalArea = Math.abs(totalArea) / 2;
int upperIndex = 0;
int lowerIndex = 0;
return lowerIndex;
}


public static double func_0631d0179f904d288060937157ffae6c(double totalArea) { 
 totalArea = Math.abs(totalArea) / 2;
int upperIndex = 0;
int lowerIndex = 0;
return totalArea;
}


public static int func_3632365e3c944ec9abcb531473c5c63b(double totalArea) { 
 totalArea = Math.abs(totalArea) / 2;
int upperIndex = 0;
int lowerIndex = 0;
return upperIndex;
}


*********************************

#### Score: 6.42809


#### Java Tokens: area, total, upper, lower, part, index, partarea, totalarea, upperindex, lowerindex 

public static int func_c063b187600147c184f8aa9d3aeed68a(int guestCount, double totalArea) { 
 int upperIndex = 0;
int lowerIndex = 0;
double partArea = totalArea / guestCount;
return lowerIndex;
}


public static double func_441670d8a1524e46b7c6bd3fe0f7a04d(int guestCount, double totalArea) { 
 int upperIndex = 0;
int lowerIndex = 0;
double partArea = totalArea / guestCount;
return partArea;
}


public static int func_fcdea0ee8af7449a879e0d4f400b65c8(int guestCount, double totalArea) { 
 int upperIndex = 0;
int lowerIndex = 0;
double partArea = totalArea / guestCount;
return upperIndex;
}


*********************************

#### Score: 6.15661


#### Java Tokens: area, cur, curl, total, size, last, upper, lower, curu, totalarea, lastx 

public static int func_63bc8e90a0734895a000e1c17826ce63(ArrayList<Point> lower, ArrayList<Point> upper) { 
 int curU = 1;
int curL = 1;
int u = upper.size();
int l = lower.size();
double lastX = 0;
double totalArea = 0.0;
return u;
}


public static int func_17351adbad5d4f818eaa9f8e5fadf1e2(ArrayList<Point> lower, ArrayList<Point> upper) { 
 int curU = 1;
int curL = 1;
int u = upper.size();
int l = lower.size();
double lastX = 0;
double totalArea = 0.0;
return l;
}


public static double func_22f91c209867435d9c4029e94c63cd90(ArrayList<Point> lower, ArrayList<Point> upper) { 
 int curU = 1;
int curL = 1;
int u = upper.size();
int l = lower.size();
double lastX = 0;
double totalArea = 0.0;
return totalArea;
}


*********************************

#### Score: 6.15661


#### Java Tokens: next, area, cur, total, curl, nextint, lower, upper, totalarea, point, int 

public static double func_474fcf2d7a08451d8819a46723d56cc6(int u, int l, Scanner in) { 
 Point[] lower = new Point[l];
for (int i = 0; i < l; ++i) {
    lower[i] = new Point(in.nextInt(), in.nextInt());
}
Point[] upper = new Point[u];
for (int i = 0; i < u; ++i) {
    upper[i] = new Point(in.nextInt(), in.nextInt());
}
double totalArea = 0.0;
int curL = 1;
return totalArea;
}


public static int func_676b8308ae894bbf9137d79b96e0fd23(int u, int l, Point[] lower, Scanner in) { 
 for (int i = 0; i < l; ++i) {
    lower[i] = new Point(in.nextInt(), in.nextInt());
}
Point[] upper = new Point[u];
for (int i = 0; i < u; ++i) {
    upper[i] = new Point(in.nextInt(), in.nextInt());
}
double totalArea = 0.0;
int curL = 1;
return curL;
}


public static double func_e0b607e11cee4702aef4698566821e8d(int u, int l, Point[] lower, Scanner in) { 
 for (int i = 0; i < l; ++i) {
    lower[i] = new Point(in.nextInt(), in.nextInt());
}
Point[] upper = new Point[u];
for (int i = 0; i < u; ++i) {
    upper[i] = new Point(in.nextInt(), in.nextInt());
}
double totalArea = 0.0;
int curL = 1;
return totalArea;
}


*********************************

#### Score: 6.15661


#### Java Tokens: next, area, cur, total, curl, nextint, lower, upper, totalarea, int, point 

public static int func_eb1dfda1a4694cbaa9b48d2f76c12388(Scanner in) { 
 int // width
w = in.nextInt();
// lower points
int l = in.nextInt();
// upper points
int u = in.nextInt();
int // guests
g = in.nextInt();
Point[] lower = new Point[l];
for (int i = 0; i < l; ++i) {
    lower[i] = new Point(in.nextInt(), in.nextInt());
}
Point[] upper = new Point[u];
for (int i = 0; i < u; ++i) {
    upper[i] = new Point(in.nextInt(), in.nextInt());
}
double totalArea = 0.0;
int curL = 1;
return w;
}


public static Point[] func_f074d8c37f7f4d818953deaf530af8a4(Scanner in) { 
 // lower points
int l = in.nextInt();
// upper points
int u = in.nextInt();
int // guests
g = in.nextInt();
Point[] lower = new Point[l];
for (int i = 0; i < l; ++i) {
    lower[i] = new Point(in.nextInt(), in.nextInt());
}
Point[] upper = new Point[u];
for (int i = 0; i < u; ++i) {
    upper[i] = new Point(in.nextInt(), in.nextInt());
}
double totalArea = 0.0;
int curL = 1;
return upper;
}


public static Point[] func_38c867a4b7c14e74b2de4768ec706997(int l, Scanner in) { 
 // upper points
int u = in.nextInt();
int // guests
g = in.nextInt();
Point[] lower = new Point[l];
for (int i = 0; i < l; ++i) {
    lower[i] = new Point(in.nextInt(), in.nextInt());
}
Point[] upper = new Point[u];
for (int i = 0; i < u; ++i) {
    upper[i] = new Point(in.nextInt(), in.nextInt());
}
double totalArea = 0.0;
int curL = 1;
return lower;
}

