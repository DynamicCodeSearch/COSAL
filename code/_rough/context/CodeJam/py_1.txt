### Py Tokens: split, zip, int, xrange, readline, infile 

### Py functions

def func_47522d3b0db14bf58366dd6826faefc5(Lp, U, i, infile, s):
    Lx, Ly = zip(*Lp)
    Up = [[int(s) for s in infile.readline().split()] for i in xrange(U)]
    return Lp

def func_e1bf753884fe402f997d53836833c13c(Lp, U, i, infile, s):
    Lx, Ly = zip(*Lp)
    Up = [[int(s) for s in infile.readline().split()] for i in xrange(U)]
    return i

def func_99ad28a0796444449e3b593165dca2a0(Lp, U, i, infile, s):
    Lx, Ly = zip(*Lp)
    Up = [[int(s) for s in infile.readline().split()] for i in xrange(U)]
    return s

def func_5b09f4008bc241a9a27cc541b7bf4e07(Lp, U, i, infile, s):
    Lx, Ly = zip(*Lp)
    Up = [[int(s) for s in infile.readline().split()] for i in xrange(U)]
    return U

def func_6271aa60dcbc4bb3888acc41fed2a7e6(Lp, U, i, infile, s):
    Lx, Ly = zip(*Lp)
    Up = [[int(s) for s in infile.readline().split()] for i in xrange(U)]
    return Up

*********************************

#### Score: 4.44365


#### Java Tokens: split, string, trim, line 

public static double[] func_de3a96ea49a441999168791bd2f96e09(int n, String line) { 
 String[] ss = line.trim().split(" ");
double[] l = new double[n];
return l;
}


public static String[] func_b4974e8e9363455792fd54d845a37f4a(int n, String line) { 
 String[] ss = line.trim().split(" ");
double[] l = new double[n];
return ss;
}


*********************************

#### Score: 4.44365


#### Java Tokens: split, trim, \s+, line 

public static String[] func_25b90e8e1098474fac3336d0bce37fc5(String line) { 
 if (line == null)
    return null;
return line.trim().split("\\s+");

}


public static String[] func_1f59c1d4a9344a6b853d00f3689bb53e(String line) { 
 if (line == null)
    return null;
return line.trim().split("\\s+");

}


*********************************

#### Score: 3.97412


#### Java Tokens: println, system, split, string, trim, line 

public static double[] func_9c67c7d6aee64322bd546ba81fc30fdb(int n, String line) { 
 System.out.println(line);
String[] ss = line.trim().split(" ");
double[] l = new double[n];
return l;
}


public static String[] func_0ad43d263a4d4d45b74d9545d11cd9b4(int n, String line) { 
 System.out.println(line);
String[] ss = line.trim().split(" ");
double[] l = new double[n];
return ss;
}


public static String[] func_721614ebd5444a7697fbeed6bd5a0e70(String line) { 
 System.out.println(line);
String[] ss = line.trim().split(" ");
return ss;
}


*********************************

#### Score: 3.77832


#### Java Tokens: split, string, trim, line, valueof, integer, value 

public static String[] func_873adf40e304486282720947e0b3c359(int n, String line) { 
 String[] ss = line.trim().split(" ");
double[] l = new double[n];
for (int j = 0; j < n; j++) {
    l[j] = Integer.valueOf(ss[j]);
}
return ss;
}


public static double[] func_1f4f76e9b1814f689a470444aa9bc492(int n, String line) { 
 String[] ss = line.trim().split(" ");
double[] l = new double[n];
for (int j = 0; j < n; j++) {
    l[j] = Integer.valueOf(ss[j]);
}
return l;
}


*********************************

#### Score: 3.67865


#### Java Tokens: exception, print, stack, trace, read, printstacktrace, reader, line, readline 

public static String func_335a86d6a087483098db66b9fbc14a2b(String w) { 
 try {
    w = A.reader.readLine();
} catch (Exception e) {
    e.printStackTrace();
}
if (w == null)
    return null;
return w;
}


*********************************

#### Score: 3.44522


#### Java Tokens: println, system, split, string, trim, line, valueof, integer, value 

public static String[] func_3f0ffa82a6df495491483c4bc7882d07(int n, String line) { 
 System.out.println(line);
String[] ss = line.trim().split(" ");
double[] l = new double[n];
for (int j = 0; j < n; j++) {
    l[j] = Integer.valueOf(ss[j]);
}
return ss;
}


public static double[] func_9c7b33645e7a4441b4678bb6fd59590c(int n, String line) { 
 System.out.println(line);
String[] ss = line.trim().split(" ");
double[] l = new double[n];
for (int j = 0; j < n; j++) {
    l[j] = Integer.valueOf(ss[j]);
}
return l;
}


*********************************

#### Score: 3.13968


#### Java Tokens: exception, stack, read, string, reader, line, stringtokenizer, tokenizer, tok, print, trace, printstacktrace, readline 

public static String func_029f3183e9e64daea326c5f49a2f51b9(String w) { 
 try {
    w = A.reader.readLine();
} catch (Exception e) {
    e.printStackTrace();
}
if (w == null)
    return null;
A.tok = new StringTokenizer(w);
return w;
}


*********************************

#### Score: 2.88697


#### Java Tokens: next, nextint, int 

public static int func_49beec80c9b14d67aad9f4a1e836ec79(int y0, int x0, int x, Scanner in) { 
 int y = in.nextInt();
double k = 1.0 * (y - y0) / (x - x0);
return y;
}


public static int[] func_401517a72a97474c99008672c057858d(int l, Scanner sc) { 
 int u = sc.nextInt();
int g = sc.nextInt();
int[] xl = new int[l];
int[] yl = new int[l];
int[] xu = new int[u];
int[] yu = new int[u];
for (int i = 0; i < l; ++i) {
    xl[i] = sc.nextInt();
    yl[i] = sc.nextInt();
}
for (int i = 0; i < u; ++i) {
    xu[i] = sc.nextInt();
    yu[i] = sc.nextInt();
}
int[] xs = new int[l + u];
for (int i = 0; i < l; ++i) xs[i] = xl[i];
for (int i = 0; i < u; ++i) xs[l + i] = xu[i];
return yu;
}


public static int func_0979c9bc1328433fbee0ff8e8107b77c(Scanner in) { 
 int l = in.nextInt();
int u = in.nextInt();
return u;
}


*********************************

#### Score: 2.72431


#### Java Tokens: next, nextint, upper, int 

public static int func_39e1a9be4764446598f02bc609026128(int y0, int x, int x0, double[] upper, Scanner in) { 
 int y = in.nextInt();
double k = 1.0 * (y - y0) / (x - x0);
for (int j = x0 + 1; j <= x; j++) {
    upper[j] = k * (j - x0) + y0;
}
x0 = x;
return y;
}


public static double[] func_8c9c7d9b4f9b4fffa51f72b93ac2690e(int y0, int w, int x0, int u, Scanner in) { 
 double[] upper = new double[w + 1];
x0 = in.nextInt();
y0 = in.nextInt();
upper[x0] = y0;
for (int i = 1; i < u; i++) {
    int x = in.nextInt();
    int y = in.nextInt();
    double k = 1.0 * (y - y0) / (x - x0);
    for (int j = x0 + 1; j <= x; j++) {
        upper[j] = k * (j - x0) + y0;
    }
    x0 = x;
    y0 = y;
}
return upper;
}


public static double func_29681fe80fda48dfb884ce18d7d3cb9a(int y0, int x, int x0, double[] upper, Scanner in) { 
 int y = in.nextInt();
double k = 1.0 * (y - y0) / (x - x0);
for (int j = x0 + 1; j <= x; j++) {
    upper[j] = k * (j - x0) + y0;
}
return k;
}


*********************************

#### Score: 2.72431


#### Java Tokens: next, nextint, max, int 

public static int func_6f8cfcef317345518c2b0e06f2a5c914(Scanner in) { 
 int n = in.nextInt();
int p = in.nextInt();
int q = in.nextInt();
int r = in.nextInt();
int s = in.nextInt();
int[] A = new int[n];
long[] S = new long[n + 1];
for (int i = 0; i < n; i++) {
    A[i] = (int) (((long) i * p + q) % r + s);
    S[i + 1] = S[i] + A[i];
}
long max = 0;
return q;
}


public static int func_451c8dc28ff049079b6b0e9691bd0be0(int p, int n, Scanner in) { 
 int q = in.nextInt();
int r = in.nextInt();
int s = in.nextInt();
int[] A = new int[n];
long[] S = new long[n + 1];
for (int i = 0; i < n; i++) {
    A[i] = (int) (((long) i * p + q) % r + s);
    S[i + 1] = S[i] + A[i];
}
long max = 0;
return r;
}


public static int func_4d4eb4aca0064503b537fae29cb846a2(Scanner in) { 
 int n = in.nextInt();
int p = in.nextInt();
int q = in.nextInt();
int r = in.nextInt();
int s = in.nextInt();
int[] A = new int[n];
long[] S = new long[n + 1];
for (int i = 0; i < n; i++) {
    A[i] = (int) (((long) i * p + q) % r + s);
    S[i + 1] = S[i] + A[i];
}
long max = 0;
return p;
}

