### Py Tokens: lowest, return, notation, within, interpreted, substring, failure, optional, find, index, slice, end, sub, start, contained, arguments, found 

### Py functions

def find(s, *args):

  return s.find(*args)
*********************************

#### Score: 9.70843


#### Java Tokens: empty, zero, mos, utils, find, limit, greater, case, always, regionmatches, treated, pre, index_not_found, index, in-sensitive, sensitive, check, matches, aabaabaa, str, sequence, input, position, region, since, changed, code, string, signature, indexofignorecase, endlimit, charsequence, startpos, specified, search, negative, found, pos, param, ignore, end, charsequenceutils, abc, may, within, start, length, match, stringutils, searchstr, char, first 


public static int indexOfIgnoreCase(final CharSequence str, final CharSequence searchStr, int startPos) {
    if (str == null || searchStr == null) {
        return INDEX_NOT_FOUND;
    }
    if (startPos < 0) {
        startPos = 0;
    }
    final int endLimit = str.length() - searchStr.length() + 1;
    if (startPos > endLimit) {
        return INDEX_NOT_FOUND;
    }
    if (searchStr.length() == 0) {
        return startPos;
    }
    for (int i = startPos; i < endLimit; i++) {
        if (CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, searchStr.length())) {
            return i;
        }
    }
    return INDEX_NOT_FOUND;
}
*********************************

#### Score: 9.25111


#### Java Tokens: n-th, note, code, string, signature, link, lastordinalindexof, charsequence, substring, mos, search, found, finds, param, utils, find, implemented, ordinalindexof, pre, last, method, may, within, index_not_found, match, index, check, aabaabaa, str, stringutils, sequence, input, searchstr, char, handling, uses, lastindexof, ordinal, since, changed 


public static int lastOrdinalIndexOf(final CharSequence str, final CharSequence searchStr, final int ordinal) {
    return ordinalIndexOf(str, searchStr, ordinal, true);
}
*********************************

#### Score: 9.11182


#### Java Tokens: joins, ;;a, noofitems, added, use, objects, empty, iterator, character, utils, delimiter, exclusive, represented, join, pre, pass, containing, past, index, list, separator, input, endindex, null, stop, items, since, sub, joining, code, a;b;c, string, provided, values, error, strings, array, param, end, together, abc, may, within, joined, start, stringutils, single, startindex, sublist, elements, first 


public static String join(final List<?> list, final char separator, final int startIndex, final int endIndex) {
    if (list == null) {
        return null;
    }
    final int noOfItems = endIndex - startIndex;
    if (noOfItems <= 0) {
        return EMPTY;
    }
    final List<?> subList = list.subList(startIndex, endIndex);
    return join(subList.iterator(), separator);
}
*********************************

#### Score: 9.11182


#### Java Tokens: joins, ;;a, noofitems, added, use, objects, empty, iterator, character, utils, delimiter, exclusive, represented, join, pre, pass, containing, past, index, list, separator, input, endindex, null, stop, items, since, sub, joining, code, a;b;c, string, provided, values, error, strings, array, param, end, together, abc, may, within, joined, start, stringutils, single, startindex, sublist, elements, first 


public static String join(final List<?> list, final String separator, final int startIndex, final int endIndex) {
    if (list == null) {
        return null;
    }
    final int noOfItems = endIndex - startIndex;
    if (noOfItems <= 0) {
        return EMPTY;
    }
    final List<?> subList = list.subList(startIndex, endIndex);
    return join(subList.iterator(), separator);
}
*********************************

#### Score: 8.98342


#### Java Tokens: code, string, yabczyabcz, yabcz, substringbetween, nested, two, wx[b]yz, substring, empty, found, strings, param, utils, end, close, pre, abc, may, index_not_found, containing, start, length, match, index, gets, str, stringutils, input, returns, returned, indexof, open, first, since 




public static String substringBetween(final String str, final String open, final String close) {
    if (str == null || open == null || close == null) {
        return null;
    }
    final int start = str.indexOf(open);
    if (start != INDEX_NOT_FOUND) {
        final int end = str.indexOf(close, start + open.length());
        if (end != INDEX_NOT_FOUND) {
            return str.substring(start + open.length(), end);
        }
    }
    return null;
}
*********************************

#### Score: 8.60241


#### Java Tokens: code, string, signature, whole, charsequence, empty, mos, search, negative, found, unless, param, utils, find, ignore, greater, case, always, searches, pre, last, may, within, index_not_found, length, start, match, index, in-sensitive, sensitive, check, matches, aabaabaa, str, stringutils, sequence, input, lastindexofignorecase, searchstr, char, returns, position, first, since, changed 


public static int lastIndexOfIgnoreCase(final CharSequence str, final CharSequence searchStr) {
    if (str == null || searchStr == null) {
        return INDEX_NOT_FOUND;
    }
    return lastIndexOfIgnoreCase(str, searchStr, str.length());
}
*********************************

#### Score: 8.43787


#### Java Tokens: empty, zero, mos, finds, utils, find, greater, always, treated, pre, method, index_not_found, index, check, matches, aabaabaa, sequence, input, except, position, since, changed, code, string, signature, link, searchseq, charsequence, startpos, search, negative, found, pos, param, seq, charsequenceutils, abc, may, within, start, length, match, possible, stringutils, char, handling, uses, indexof, first 


public static int indexOf(final CharSequence seq, final CharSequence searchSeq, final int startPos) {
    if (seq == null || searchSeq == null) {
        return INDEX_NOT_FOUND;
    }
    return CharSequenceUtils.indexOf(seq, searchSeq, startPos);
}
*********************************

#### Score: 8.41022


#### Java Tokens: larger, occurrences, sub, code, string, signature, counts, appears, isempty, abba, charsequence, substring, empty, number, times, either, found, param, utils, charsequenceutils, pre, may, index_not_found, count, length, index, check, many, matches, str, stringutils, sequence, input, char, xxx, returns, idx, indexof, countmatches, since, changed 




public static int countMatches(final CharSequence str, final CharSequence sub) {
    if (isEmpty(str) || isEmpty(sub)) {
        return 0;
    }
    int count = 0;
    int idx = 0;
    while ((idx = CharSequenceUtils.indexOf(str, sub, idx)) != INDEX_NOT_FOUND) {
        count++;
        idx += sub.length();
    }
    return count;
}
*********************************

#### Score: 7.84343


#### Java Tokens: code, string, signature, link, searchseq, charsequence, mos, search, found, finds, param, utils, find, seq, charsequenceutils, pre, method, may, within, index_not_found, match, index, possible, check, aabaabaa, stringutils, sequence, input, char, handling, uses, except, indexof, first, since, changed 


public static int indexOf(final CharSequence seq, final CharSequence searchSeq) {
    if (seq == null || searchSeq == null) {
        return INDEX_NOT_FOUND;
    }
    return CharSequenceUtils.indexOf(seq, searchSeq, 0);
}
*********************************

#### Score: 7.84343


#### Java Tokens: code, string, signature, link, searchseq, charsequence, mos, search, found, finds, param, utils, find, seq, charsequenceutils, pre, last, method, may, within, index_not_found, length, match, index, possible, check, aabaabaa, stringutils, sequence, input, char, lastindexof, handling, uses, since, changed 


public static int lastIndexOf(final CharSequence seq, final CharSequence searchSeq) {
    if (seq == null || searchSeq == null) {
        return INDEX_NOT_FOUND;
    }
    return CharSequenceUtils.lastIndexOf(seq, searchSeq, seq.length());
}