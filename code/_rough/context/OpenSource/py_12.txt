### Py Tokens: raised, ordered, returned, corresponding, specified, keyerror, pop, result, key, remove, marker, ordereddict, given, default, value, dict, error, found, otherwise 

### Py functions

def pop(self, key, default=__marker):

  if key in self:
    result = self[key]
    del self[key]
    return result
  if default is self.__marker:
    raise KeyError(key)
  return default
*********************************

#### Score: 7.77988


#### Java Tokens: exception, small, argument, used, ab.., good, number, utils, else, max-abbrevmarker, specifically, greater, defined, given, using, pre, abcd., abbrevmarker, less, check, illegal, str, input, marker, must, abbrev, replacement, since, maxwidth, illegalargumentexception, code, string, another, least, turn, abbreviates, substring, result, characters, param, men, for..., a.., abbreviate, may, max, length, ..., abcd, stringutils, equal, width, maximum, time, abcdefg, abbreviated 


public static String abbreviate(final String str, final String abbrevMarker, final int maxWidth) {
    return abbreviate(str, abbrevMarker, 0, maxWidth);
}
*********************************

#### Score: 7.63627


#### Java Tokens: com, code, string, .com, www.domain, endswith, source, isempty, .com., remove, substring, empty, mos, search, found, param, utils, www, ends, end, otherwise, pre, abc, may, length, str, stringutils, input, removed, domain, removeend, www.domain.com, returns, removes, since 


public static String removeEnd(final String str, final String remove) {
    if (isEmpty(str) || isEmpty(remove)) {
        return str;
    }
    if (str.endsWith(remove)) {
        return str.substring(0, str.length() - remove.length());
    }
    return str;
}
*********************************

#### Score: 7.63627


#### Java Tokens: com, www., startswith, code, string, removestart, beginning, source, isempty, remove, substring, empty, mos, search, found, param, utils, www, starts, domain.com, otherwise, pre, abc, may, start, length, str, stringutils, input, removed, domain, www.domain.com, returns, removes, since 




public static String removeStart(final String str, final String remove) {
    if (isEmpty(str) || isEmpty(remove)) {
        return str;
    }
    if (str.startsWith(remove)) {
        return str.substring(remove.length());
    }
    return str;
}
*********************************

#### Score: 7.54386


#### Java Tokens: code, string, optimized, repeated, remove, result, zero, number, times, negative, param, utils, repeat, injected, quite, end, treated, given, pre, original, may, splice, separator, str, stringutils, better, consisting, input, form, rely, removeend, xxx, time, inject, since 




public static String repeat(final String str, final String separator, final int repeat) {
    if (str == null || separator == null) {
        return repeat(str, repeat);
    }
    
    final String result = repeat(str + separator, repeat);
    return removeEnd(result, separator);
}
*********************************

#### Score: 7.39419


#### Java Tokens: com, code, string, .com, insensitive, www.domain, source, isempty, .com., remove, substring, empty, mos, search, found, param, utils, www, ends, endswithignorecase, ignore, removeendignorecase, end, case, otherwise, pre, abc, may, length, str, stringutils, input, removed, domain, removal, www.domain.com, returns, since 


public static String removeEndIgnoreCase(final String str, final String remove) {
    if (isEmpty(str) || isEmpty(remove)) {
        return str;
    }
    if (endsWithIgnoreCase(str, remove)) {
        return str.substring(0, str.length() - remove.length());
    }
    return str;
}
*********************************

#### Score: 7.39419


#### Java Tokens: com, www., code, string, beginning, insensitive, source, isempty, remove, substring, empty, mos, search, found, param, utils, www, ignore, starts, domain.com, case, otherwise, pre, abc, startswithignorecase, may, start, length, str, stringutils, removestartignorecase, input, removed, domain, removal, www.domain.com, returns, since 


public static String removeStartIgnoreCase(final String str, final String remove) {
    if (isEmpty(str) || isEmpty(remove)) {
        return str;
    }
    if (startsWithIgnoreCase(str, remove)) {
        return str.substring(remove.length());
    }
    return str;
}
*********************************

#### Score: 7.14702


#### Java Tokens: code, string, arrayutils, containsany, sequences, isempty, charsequence, empty, zero, mos, search, found, array, param, utils, searchcharsequence, otherwise, given, pre, abc, may, individual, length, check, charsequences, abcd, stringutils, sequence, contains, checks, char, well, searchcharsequences, since 


public static boolean containsAny(final CharSequence cs, final CharSequence... searchCharSequences) {
    if (isEmpty(cs) || ArrayUtils.isEmpty(searchCharSequences)) {
        return false;
    }
    for (final CharSequence searchCharSequence : searchCharSequences) {
        if (contains(cs, searchCharSequence)) {
            return true;
        }
    }
    return false;
}
*********************************

#### Score: 6.97617


#### Java Tokens: occurs, isempty, empty, mos, character, either, utils, find, inclusive, blockquote, pre, like, index_not_found, index, check, aabaabaa, sequence, input, returns, updated, since, changed, code, string, signature, smallest, values, link, units, occurrence, codepointat, charsequence, specified, point, behave, search, searchchar, found, param, value, seq, charat, charsequenceutils, may, within, match, stringutils, call, furthermore, char, returned, indexof, first 




public static int indexOf(final CharSequence seq, final int searchChar) {
    if (isEmpty(seq)) {
        return INDEX_NOT_FOUND;
    }
    return CharSequenceUtils.indexOf(seq, searchChar, 0);
}
*********************************

#### Score: 6.85128


#### Java Tokens: occurs, isempty, empty, mos, character, either, utils, find, inclusive, blockquote, pre, last, like, index_not_found, index, aabaabaa, ffff, sequence, input, xffff, unicode, lastindexof, returns, starting, updated, since, changed, largest, code, string, signature, values, link, range, units, codepointat, charsequence, specified, point, behave, search, searchchar, found, param, value, seq, charat, charsequenceutils, within, length, match, stringutils, call, char, returned 




public static int lastIndexOf(final CharSequence seq, final int searchChar) {
    if (isEmpty(seq)) {
        return INDEX_NOT_FOUND;
    }
    return CharSequenceUtils.lastIndexOf(seq, searchChar, seq.length());
}
*********************************

#### Score: 6.85128


#### Java Tokens: splits, used, substrings, zero, number, split, utils, limit, text, worker, treated, pre, including, last, includes, separator, str, input, returns, parsed, code, string, separatorchars, provided, specified, ab:cd:ef, characters, negative, found, strings, splitworker, array, param, delimiters, included, value, include, may, max, one, length, delimited, adjacent, parse, stringutils, elements, maximum, cd:ef, returned, whitespace, implies, separators, chars, first 


public static String[] split(final String str, final String separatorChars, final int max) {
    return splitWorker(str, separatorChars, max, false);
}