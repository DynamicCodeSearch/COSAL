### Py Tokens: resulting, return, string, sep, synonymous, none, words, specified, using, splits, given, whitespace, places, maxsplit, list, delimiter, separator, split, splitfields, strings 

### Py functions

def split(s, sep=None, maxsplit=-1):

  return s.split(sep, maxsplit)
*********************************

#### Score: 15.70588


#### Java Tokens: splits, use, used, empty, character, split, utils, delimiter, text, worker, strtokenizer, treated, using, pre, including, created, a.b.c, stringtokenizer, preserve, separator, str, input, returns, parsed, preserving, since, a:b:c, code, string, provided, specified, strings, splitworker, array, param, tokens, included, may, alternative, separatorchar, adjacent, control, parse, splitpreservealltokens, tokenizer, stringutils, a..b.c, char, returned, whitespace, separators 


public static String[] splitPreserveAllTokens(final String str, final char separatorChar) {
    return splitWorker(str, separatorChar, true);
}
*********************************

#### Score: 15.48480


#### Java Tokens: ab-!-cd-!-ef, splits, code, string, provided, whole, used, specified, ab:cd:ef, split, strings, array, param, utils, delimiter, -!-, text, worker, included, treated, pre, may, containing, one, splitbywholeseparator, adjacent, parse, separator, splitbywholeseparatorworker, str, stringutils, input, returns, parsed, returned, whitespace, separators 


public static String[] splitByWholeSeparator(final String str, final String separator) {
    return splitByWholeSeparatorWorker(str, separator, -1, false);
}
*********************************

#### Score: 15.05362


#### Java Tokens: a:b:c, splits, code, string, use, provided, used, specified, character, split, strings, splitworker, array, param, utils, delimiter, text, worker, included, strtokenizer, treated, using, pre, may, one, a.b.c, alternative, stringtokenizer, separatorchar, adjacent, control, parse, separator, tokenizer, str, stringutils, input, a..b.c, char, returns, parsed, returned, separators, since 


public static String[] split(final String str, final char separatorChar) {
    return splitWorker(str, separatorChar, false);
}
*********************************

#### Score: 15.03162


#### Java Tokens: splits, code, string, def, separatorchars, use, provided, used, specified, ab:cd:ef, characters, split, strings, splitworker, array, param, utils, delimiters, text, worker, included, strtokenizer, treated, using, pre, abc, may, one, alternative, stringtokenizer, adjacent, control, parse, separator, tokenizer, str, stringutils, input, returns, parsed, returned, whitespace, separators, chars 


public static String[] split(final String str, final String separatorChars) {
    return splitWorker(str, separatorChars, -1, false);
}
*********************************

#### Score: 14.54468


#### Java Tokens: ab-!-cd-!-ef, splits, code, string, use, provided, whole, used, splitbywholeseparatorpreservealltokens, specified, ab:cd:ef, empty, split, strings, array, param, utils, delimiter, -!-, tokens, text, worker, included, strtokenizer, treated, pre, may, containing, adjacent, control, preserve, parse, separator, splitbywholeseparatorworker, tokenizer, str, stringutils, input, returns, parsed, returned, whitespace, separators, since 


public static String[] splitByWholeSeparatorPreserveAllTokens(final String str, final String separator) {
    return splitByWholeSeparatorWorker(str, separator, -1, true);
}
*********************************

#### Score: 13.98009


#### Java Tokens: splits, code, string, def, use, provided, link, character, split, strings, array, param, utils, text, included, strtokenizer, defined, treated, using, pre, abc, may, one, adjacent, control, parse, separator, tokenizer, str, stringutils, input, returns, parsed, whitespace, returned, iswhitespace, separators 




public static String[] split(final String str) {
    return split(str, null, -1);
}
*********************************

#### Score: 13.45847


#### Java Tokens: ab-!-cd-!-ef, splits, whole, used, substrings, cd-!-ef, zero, number, split, utils, delimiter, limit, -!-, text, worker, treated, pre, containing, separator, splitbywholeseparatorworker, str, input, returns, parsed, code, string, provided, specified, ab:cd:ef, negative, strings, array, param, included, value, include, may, max, one, splitbywholeseparator, adjacent, parse, stringutils, elements, maximum, cd:ef, returned, whitespace, implies, separators 


public static String[] splitByWholeSeparator(final String str, final String separator, final int max) {
    return splitByWholeSeparatorWorker(str, separator, max, false);
}
*********************************

#### Score: 13.40849


#### Java Tokens: splits, def, use, used, empty, split, utils, text, worker, strtokenizer, treated, using, pre, including, created, stringtokenizer, preserve, separator, str, input, returns, parsed, preserving, ab::cd:ef, since, code, string, separatorchars, provided, specified, ab:cd:ef, ab:cd:ef:, characters, strings, splitworker, array, param, delimiters, ab:cd:ef::, ::cd:ef, tokens, included, abc, may, alternative, adjacent, control, parse, splitpreservealltokens, :cd:ef:, tokenizer, stringutils, :cd:ef, returned, whitespace, separators, chars 


public static String[] splitPreserveAllTokens(final String str, final String separatorChars) {
    return splitWorker(str, separatorChars, -1, true);
}
*********************************

#### Score: 12.97520


#### Java Tokens: ab-!-cd-!-ef, splits, use, whole, used, splitbywholeseparatorpreservealltokens, substrings, cd-!-ef, empty, zero, number, split, utils, delimiter, limit, -!-, text, worker, strtokenizer, treated, pre, containing, preserve, separator, splitbywholeseparatorworker, str, input, returns, parsed, since, code, string, provided, specified, ab:cd:ef, negative, strings, array, param, tokens, included, value, include, may, max, adjacent, control, parse, tokenizer, stringutils, elements, maximum, cd:ef, returned, whitespace, implies, separators 


public static String[] splitByWholeSeparatorPreserveAllTokens(final String str, final String separator, final int max) {
    return splitByWholeSeparatorWorker(str, separator, max, true);
}
*********************************

#### Score: 12.48889


#### Java Tokens: splits, code, string, def, use, provided, link, empty, character, split, strings, splitworker, array, param, utils, tokens, text, worker, included, strtokenizer, defined, treated, using, pre, including, abc, may, created, alternative, stringtokenizer, adjacent, control, preserve, parse, splitpreservealltokens, separator, tokenizer, str, stringutils, input, returns, parsed, whitespace, preserving, returned, separators, iswhitespace, since 



public static String[] splitPreserveAllTokens(final String str) {
    return splitWorker(str, null, -1, true);
}