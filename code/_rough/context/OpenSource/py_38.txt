### Py Tokens: count, either, isinstance, abbb, newcount, union, items, counters, counter, elem, value, maximum, bcc, result, othercount, input, implemented, notimplemented 

### Py functions

def __or__(self, other):

  if not isinstance(other, Counter):
    return NotImplemented
  result = Counter()
  for elem, count in self.items():
    other_count = other[elem]
    newcount = other_count if count < other_count else count
    if newcount > 0:
      result[elem] = newcount
  for elem, count in other.items():
    if elem not in self and count > 0:
      result[elem] = count
  return result
*********************************

#### Score: 6.60694


#### Java Tokens: pre, defaultstr, code, string, may, valueof, objectutils, check, str, stringutils, input, either, see, null, bat, param, utils, defaultstring, returns, passed, value, tostring, object 


public static String defaultString(final String str, final String defaultStr) {
    return str == null ? defaultStr : str;
}
*********************************

#### Score: 6.37905


#### Java Tokens: exception, argument, cdefghijkl, integer, source, bcdefghijk, good, empty, edge, truncate, abcdefghij, utils, else, truncates, specifically, greater, raspberry, pre, offset, like, specify, peach, less, illegal, klm, str, input, left, efghijklmn, must, since, maxwidth, illegalargumentexception, works, code, string, fgh, maxwith, turn, substring, result, characters, negative, min, param, men, value, allows, abc, may, max, fghij, length, abcdefghijklmno, fghijklmno, truncated, positive, stringutils, min_value, width, cannot, maximum, time, klmno, defghijklm, max_value 


public static String truncate(final String str, final int offset, final int maxWidth) {
    if (offset < 0) {
        throw new IllegalArgumentException("offset cannot be negative");
    }
    if (maxWidth < 0) {
        throw new IllegalArgumentException("maxWith cannot be negative");
    }
    if (str == null) {
        return null;
    }
    if (offset > str.length()) {
        return EMPTY;
    }
    if (str.length() > maxWidth) {
        final int ix = offset + maxWidth > str.length() ? str.length() : offset + maxWidth;
        return str.substring(offset, ix);
    }
    return str.substring(offset);
}
*********************************

#### Score: 6.36426


#### Java Tokens: exception, maxwidth, illegalargumentexception, argument, code, string, turn, good, substring, result, characters, truncate, param, utils, else, men, truncates, specifically, greater, pre, may, max, length, truncated, less, positive, illegal, abcd, str, stringutils, input, width, maximum, abcdef, must, time, abcdefg, since 


public static String truncate(final String str, final int maxWidth) {
    return truncate(str, 0, maxWidth);
}
*********************************

#### Score: 6.29126


#### Java Tokens: code, string, isempty, charsequence, empty, either, see, bat, defaultifempty, param, utils, passed, value, pre, defaultstr, may, kind, check, specific, str, stringutils, sequence, input, null, defaultstring, char, returns 


public static <T extends CharSequence> T defaultIfEmpty(final T str, final T defaultStr) {
    return isEmpty(str) ? defaultStr : str;
}
*********************************

#### Score: 6.27518


#### Java Tokens: larger, occurrences, sub, code, string, signature, counts, appears, isempty, abba, charsequence, substring, empty, number, times, either, found, param, utils, charsequenceutils, pre, may, index_not_found, count, length, index, check, many, matches, str, stringutils, sequence, input, char, xxx, returns, idx, indexof, countmatches, since, changed 




public static int countMatches(final CharSequence str, final CharSequence sub) {
    if (isEmpty(str) || isEmpty(sub)) {
        return 0;
    }
    int count = 0;
    int idx = 0;
    while ((idx = CharSequenceUtils.indexOf(str, sub, idx)) != INDEX_NOT_FOUND) {
        count++;
        idx += sub.length();
    }
    return count;
}
*********************************

#### Score: 5.92358


#### Java Tokens: pre, code, string, may, valueof, objectutils, check, empty, str, stringutils, either, see, bat, param, utils, defaultstring, returns, passed, tostring, value, object 


public static String defaultString(final String str) {
    return defaultString(str, EMPTY);
}
*********************************

#### Score: 5.87286


#### Java Tokens: blank, code, string, link, charsequence, empty, either, character, see, bat, param, utils, passed, value, defined, pre, defaultstr, may, kind, isblank, check, specific, str, stringutils, sequence, input, null, defaultstring, char, defaultifblank, returns, whitespace, iswhitespace 


public static <T extends CharSequence> T defaultIfBlank(final T str, final T defaultStr) {
    return isBlank(str) ? defaultStr : str;
}
*********************************

#### Score: 5.76334


#### Java Tokens: exception, small, a..., maxwidth, illegalargumentexception, argument, code, string, least, turn, abbreviates, good, substring, result, number, characters, abc..., param, utils, else, men, for..., specifically, greater, abbreviate, using, pre, abc, may, max, max-3, length, ellipses, less, check, illegal, ..., str, stringutils, equal, input, width, maximum, must, time, abcdefg, abbreviated, since 




public static String abbreviate(final String str, final int maxWidth) {
    return abbreviate(str, "...", 0, maxWidth);
}
*********************************

#### Score: 5.45302


#### Java Tokens: exception, code, string, isempty, charsequence, thread-safety, empty, either, see, defaultsupplier, bat, param, utils, safety, get, supplier, responsible, passed, value, defaultstrsupplier, pre, may, supplied, kind, getifempty, thread, check, specific, str, stringutils, sequence, input, caller, null, defaultstring, char, returns, handling, since 


public static <T extends CharSequence> T getIfEmpty(final T str, final Supplier<T> defaultSupplier) {
    return isEmpty(str) ? defaultSupplier == null ? null : defaultSupplier.get() : str;
}
*********************************

#### Score: 5.36206


#### Java Tokens: exception, small, argument, used, ab.., good, number, utils, else, max-abbrevmarker, specifically, greater, defined, given, using, pre, abcd., abbrevmarker, less, check, illegal, str, input, marker, must, abbrev, replacement, since, maxwidth, illegalargumentexception, code, string, another, least, turn, abbreviates, substring, result, characters, param, men, for..., a.., abbreviate, may, max, length, ..., abcd, stringutils, equal, width, maximum, time, abcdefg, abbreviated 


public static String abbreviate(final String str, final String abbrevMarker, final int maxWidth) {
    return abbreviate(str, abbrevMarker, 0, maxWidth);
}