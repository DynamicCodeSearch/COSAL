### Py Tokens: none, fromkeys, defaults, dictionary, keys, value, dict, key, specified, ordereddict, ordered, new, iterable, cls 

### Py functions

@classmethod
def fromkeys(cls, iterable, value=None):

  self = cls()
  for key in iterable:
    self[key] = value
  return self
*********************************

#### Score: 4.36202


#### Java Tokens: code, string, padchar, valueof, specified, pad, character, bat, param, utils, repeat, limit, value, padding, leftpad, pre, original, may, necessary, zzbat, length, concat, possible, str, stringutils, input, size, pads, padded, left, char, returns, zzz, pad_limit, since 


public static String leftPad(final String str, final int size, final char padChar) {
    if (str == null) {
        return null;
    }
    final int pads = size - str.length();
    if (pads <= 0) {
        
        return str;
    }
    if (pads > PAD_LIMIT) {
        return leftPad(str, size, String.valueOf(padChar));
    }
    return repeat(padChar, pads).concat(str);
}
*********************************

#### Score: 4.36202


#### Java Tokens: code, string, padchar, valueof, batzz, specified, rightpad, pad, character, bat, param, utils, repeat, limit, value, padding, pre, original, may, necessary, length, right, concat, possible, str, stringutils, input, size, pads, padded, char, returns, zzz, pad_limit, since 


public static String rightPad(final String str, final int size, final char padChar) {
    if (str == null) {
        return null;
    }
    final int pads = size - str.length();
    if (pads <= 0) {
        
        return str;
    }
    if (pads > PAD_LIMIT) {
        return rightPad(str, size, String.valueOf(padChar));
    }
    return str.concat(repeat(padChar, pads));
}
*********************************

#### Score: 4.19357


#### Java Tokens: joins, providing, code, string, added, use, provided, values, link, iterable, empty, iterator, see, character, param, utils, delimiter, join, together, treated, may, containing, joined, list, separator, stringutils, single, input, examples, elements, object, since 


public static String join(final Iterable<?> iterable, final String separator) {
    if (iterable == null) {
        return null;
    }
    return join(iterable.iterator(), separator);
}
*********************************

#### Score: 3.97707


#### Java Tokens: joins, providing, code, string, added, use, provided, objects, values, link, iterable, empty, iterator, see, character, strings, param, utils, delimiter, iteration, represented, join, together, may, within, containing, joined, list, separator, stringutils, single, input, null, examples, elements, object, since 


public static String join(final Iterable<?> iterable, final char separator) {
    if (iterable == null) {
        return null;
    }
    return join(iterable.iterator(), separator);
}
*********************************

#### Score: 3.70387


#### Java Tokens: occurs, isempty, empty, mos, character, either, utils, find, inclusive, blockquote, pre, like, index_not_found, index, check, aabaabaa, sequence, input, returns, updated, since, changed, code, string, signature, smallest, values, link, units, occurrence, codepointat, charsequence, specified, point, behave, search, searchchar, found, param, value, seq, charat, charsequenceutils, may, within, match, stringutils, call, furthermore, char, returned, indexof, first 




public static int indexOf(final CharSequence seq, final int searchChar) {
    if (isEmpty(seq)) {
        return INDEX_NOT_FOUND;
    }
    return CharSequenceUtils.indexOf(seq, searchChar, 0);
}
*********************************

#### Score: 3.70387


#### Java Tokens: ab-!-cd-!-ef, splits, whole, used, substrings, cd-!-ef, zero, number, split, utils, delimiter, limit, -!-, text, worker, treated, pre, containing, separator, splitbywholeseparatorworker, str, input, returns, parsed, code, string, provided, specified, ab:cd:ef, negative, strings, array, param, included, value, include, may, max, one, splitbywholeseparator, adjacent, parse, stringutils, elements, maximum, cd:ef, returned, whitespace, implies, separators 


public static String[] splitByWholeSeparator(final String str, final String separator, final int max) {
    return splitByWholeSeparatorWorker(str, separator, max, false);
}
*********************************

#### Score: 3.64020


#### Java Tokens: occurs, isempty, empty, mos, character, either, utils, find, inclusive, blockquote, pre, last, like, index_not_found, index, aabaabaa, ffff, sequence, input, xffff, unicode, lastindexof, returns, starting, updated, since, changed, largest, code, string, signature, values, link, range, units, codepointat, charsequence, specified, point, behave, search, searchchar, found, param, value, seq, charat, charsequenceutils, within, length, match, stringutils, call, char, returned 




public static int lastIndexOf(final CharSequence seq, final int searchChar) {
    if (isEmpty(seq)) {
        return INDEX_NOT_FOUND;
    }
    return CharSequenceUtils.lastIndexOf(seq, searchChar, seq.length());
}
*********************************

#### Score: 3.64020


#### Java Tokens: splits, used, substrings, zero, number, split, utils, limit, text, worker, treated, pre, including, last, includes, separator, str, input, returns, parsed, code, string, separatorchars, provided, specified, ab:cd:ef, characters, negative, found, strings, splitworker, array, param, delimiters, included, value, include, may, max, one, length, delimited, adjacent, parse, stringutils, elements, maximum, cd:ef, returned, whitespace, implies, separators, chars, first 


public static String[] split(final String str, final String separatorChars, final int max) {
    return splitWorker(str, separatorChars, max, false);
}
*********************************

#### Score: 3.57887


#### Java Tokens: ab-!-cd-!-ef, splits, use, whole, used, splitbywholeseparatorpreservealltokens, substrings, cd-!-ef, empty, zero, number, split, utils, delimiter, limit, -!-, text, worker, strtokenizer, treated, pre, containing, preserve, separator, splitbywholeseparatorworker, str, input, returns, parsed, since, code, string, provided, specified, ab:cd:ef, negative, strings, array, param, tokens, included, value, include, may, max, adjacent, control, parse, tokenizer, stringutils, elements, maximum, cd:ef, returned, whitespace, implies, separators 


public static String[] splitByWholeSeparatorPreserveAllTokens(final String str, final String separator, final int max) {
    return splitByWholeSeparatorWorker(str, separator, max, true);
}
*********************************

#### Score: 3.46273


#### Java Tokens: splits, used, substrings, empty, zero, number, split, utils, limit, text, worker, treated, pre, including, last, created, includes, preserve, separator, str, input, returns, parsed, preserving, since, code, string, separatorchars, provided, specified, ab:cd:ef, characters, negative, found, strings, splitworker, array, param, delimiters, tokens, included, value, include, may, max, one, length, delimited, adjacent, parse, splitpreservealltokens, stringutils, elements, maximum, cd:ef, returned, whitespace, implies, separators, chars, first 


public static String[] splitPreserveAllTokens(final String str, final String separatorChars, final int max) {
    return splitWorker(str, separatorChars, max, true);
}