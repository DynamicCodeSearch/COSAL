### Py Tokens: heapq, elements, emulate, list, key, iteritems, sorted, counts, true, smalltalk, count, none, reverse, mostcommon, counter, abcdeabcdabcaba, least, element, bag, itemgetter, sortedbycount, nlargest, common 

### Py functions

def most_common(self, n=None):


  if n is None:
    return sorted(self.iteritems(), key=_itemgetter(1), reverse=True)
  return _heapq.nlargest(n, self.iteritems(), key=_itemgetter(1))
*********************************

#### Score: 6.19239


#### Java Tokens: occurrences, code, string, counts, appears, isempty, abba, charsequence, empty, number, times, faster, tochararray, would, param, array, utils, generate, charat, given, pre, may, could, count, length, garbage, also, check, many, matches, look, str, stringutils, call, sequence, input, char, ups, returns, countmatches, since 


public static int countMatches(final CharSequence str, final char ch) {
    if (isEmpty(str)) {
        return 0;
    }
    int count = 0;
    
    for (int i = 0; i < str.length(); i++) {
        if (ch == str.charAt(i)) {
            count++;
        }
    }
    return count;
}
*********************************

#### Score: 6.19239


#### Java Tokens: larger, occurrences, sub, code, string, signature, counts, appears, isempty, abba, charsequence, substring, empty, number, times, either, found, param, utils, charsequenceutils, pre, may, index_not_found, count, length, index, check, many, matches, str, stringutils, sequence, input, char, xxx, returns, idx, indexof, countmatches, since, changed 




public static int countMatches(final CharSequence str, final CharSequence sub) {
    if (isEmpty(str) || isEmpty(sub)) {
        return 0;
    }
    int count = 0;
    int idx = 0;
    while ((idx = CharSequenceUtils.indexOf(str, sub, idx)) != INDEX_NOT_FOUND) {
        count++;
        idx += sub.length();
    }
    return count;
}
*********************************

#### Score: 5.68004


#### Java Tokens: getcommonprefix, indexofdifference, code, string, prefix, smallest, objects, arrayutils, isempty, substring, empty, example, robot, identical, characters, character, found, common, strs, strings, array, param, utils, get, xyz, abxyz, pre, abc, may, smallestindexofdiff, initial, index_not_found, abcde, index, diff, compares, stringutils, sequence, entries, machine, elements, difference, returns, since 


public static String getCommonPrefix(final String... strs) {
    if (ArrayUtils.isEmpty(strs)) {
        return EMPTY;
    }
    final int smallestIndexOfDiff = indexOfDifference(strs);
    if (smallestIndexOfDiff == INDEX_NOT_FOUND) {
        
        if (strs[0] == null) {
            return EMPTY;
        }
        return strs[0];
    } else if (smallestIndexOfDiff == 0) {
        
        return EMPTY;
    } else {
        
        return strs[0].substring(0, smallestIndexOfDiff);
    }
}
*********************************

#### Score: 5.61538


#### Java Tokens: pre, code, string, may, link, reverse, reverses, str, stringutils, input, bat, tab, param, utils, builder, returns, stringbuilder, per, tostring, reversed 




public static String reverse(final String str) {
    if (str == null) {
        return null;
    }
    return new StringBuilder(str).reverse().toString();
}
*********************************

#### Score: 5.03139


#### Java Tokens: code, string, range, validsurrogatepairat, charsequence, valid, out-of-range, character, high, strings, indexes, low, ishighsurrogate, surrogate, starts, charat, given, visible, testing, length, index, pair, visiblefortesting, sequence, char, true, islowsurrogate 


@VisibleForTesting
static boolean validSurrogatePairAt(CharSequence string, int index) {
    return index >= 0 && index <= (string.length() - 2) && Character.isHighSurrogate(string.charAt(index)) && Character.isLowSurrogate(string.charAt(index + 1));
}
*********************************

#### Score: 4.64828


#### Java Tokens: joins, providing, code, string, added, use, provided, values, link, iterable, empty, iterator, see, character, param, utils, delimiter, join, together, treated, may, containing, joined, list, separator, stringutils, single, input, examples, elements, object, since 


public static String join(final Iterable<?> iterable, final String separator) {
    if (iterable == null) {
        return null;
    }
    return join(iterable.iterator(), separator);
}
*********************************

#### Score: 4.60197


#### Java Tokens: next, compare, code, string, def, equalsany, arrayutils, searchstrings, charsequence, empty, search, strings, array, param, utils, element, given, case-sensitive, isnotempty, pre, abc, may, vararg, sensitive, compares, stringutils, equal, sequence, returning, equals, char, since 


public static boolean equalsAny(final CharSequence string, final CharSequence... searchStrings) {
    if (ArrayUtils.isNotEmpty(searchStrings)) {
        for (final CharSequence next : searchStrings) {
            if (equals(string, next)) {
                return true;
            }
        }
    }
    return false;
}
*********************************

#### Score: 4.54822


#### Java Tokens: joins, code, string, added, use, provided, objects, values, empty, character, strings, array, param, utils, delimiter, represented, join, together, pre, may, within, containing, joined, length, list, separator, 1;2;3, stringutils, single, input, 123, null, elements, since 


public static String join(final byte[] array, final char separator) {
    if (array == null) {
        return null;
    }
    return join(array, separator, 0, array.length);
}
*********************************

#### Score: 4.54822


#### Java Tokens: joins, code, string, added, use, provided, objects, values, empty, character, strings, array, param, utils, delimiter, represented, join, together, pre, may, within, containing, joined, length, list, separator, 1;2;3, stringutils, single, input, 123, null, elements, since 


public static String join(final char[] array, final char separator) {
    if (array == null) {
        return null;
    }
    return join(array, separator, 0, array.length);
}
*********************************

#### Score: 4.54822


#### Java Tokens: joins, code, string, added, use, provided, objects, values, empty, character, strings, array, param, utils, delimiter, represented, join, together, pre, may, within, containing, joined, length, list, separator, 1;2;3, stringutils, single, input, 123, null, elements, since 


public static String join(final double[] array, final char separator) {
    if (array == null) {
        return null;
    }
    return join(array, separator, 0, array.length);
}